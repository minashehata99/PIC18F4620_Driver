

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Oct 05 17:48:32 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1,inline
    53                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    81                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    82                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    83   000000                     
    84                           ; Generated 23/03/2023 GMT
    85                           ; 
    86                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    87                           ; All rights reserved.
    88                           ; 
    89                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    90                           ; 
    91                           ; Redistribution and use in source and binary forms, with or without modification, are
    92                           ; permitted provided that the following conditions are met:
    93                           ; 
    94                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    95                           ;        conditions and the following disclaimer.
    96                           ; 
    97                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    98                           ;        of conditions and the following disclaimer in the documentation and/or other
    99                           ;        materials provided with the distribution. Publication is not required when
   100                           ;        this file is used in an embedded application.
   101                           ; 
   102                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   103                           ;        software without specific prior written permission.
   104                           ; 
   105                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   106                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   107                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   108                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   109                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   110                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   111                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   112                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   113                           ; 
   114                           ; 
   115                           ; Code-generator required, PIC18F4620 Definitions
   116                           ; 
   117                           ; SFR Addresses
   118   000000                     
   119                           	psect	idataCOMRAM
   120   003406                     __pidataCOMRAM:
   121                           	callstack 0
   122                           
   123                           ;initializer for _RB7_Flag
   124   003406  01                 	db	1
   125                           
   126                           ;initializer for _RB6_Flag
   127   003407  01                 	db	1
   128                           
   129                           ;initializer for _RB5_Flag
   130   003408  01                 	db	1
   131                           
   132                           ;initializer for _RB4_Flag
   133   003409  01                 	db	1
   134                           
   135                           	psect	idataBANK0
   136   0033C6                     __pidataBANK0:
   137                           	callstack 0
   138                           
   139                           ;initializer for _tris_register
   140   0033C6  92                 	db	146
   141   0033C7  0F                 	db	15
   142   0033C8  93                 	db	147
   143   0033C9  0F                 	db	15
   144   0033CA  94                 	db	148
   145   0033CB  0F                 	db	15
   146   0033CC  95                 	db	149
   147   0033CD  0F                 	db	15
   148   0033CE  96                 	db	150
   149   0033CF  0F                 	db	15
   150                           
   151                           ;initializer for _lcd1
   152   0033D0  02                 	db	2
   153   0033D1  0A                 	db	10
   154   0033D2  12                 	db	18
   155   0033D3  1A                 	db	26
   156   0033D4  22                 	db	34
   157   0033D5  2A                 	db	42
   158                           
   159                           ;initializer for _motor2
   160   0033D6  13                 	db	19
   161   0033D7  1B                 	db	27
   162                           
   163                           ;initializer for _motor1
   164   0033D8  03                 	db	3
   165   0033D9  0B                 	db	11
   166                           
   167                           	psect	idataBANK1
   168   0033AA                     __pidataBANK1:
   169                           	callstack 0
   170                           
   171                           ;initializer for _port_register
   172   0033AA  80                 	db	128
   173   0033AB  0F                 	db	15
   174   0033AC  81                 	db	129
   175   0033AD  0F                 	db	15
   176   0033AE  82                 	db	130
   177   0033AF  0F                 	db	15
   178   0033B0  83                 	db	131
   179   0033B1  0F                 	db	15
   180   0033B2  84                 	db	132
   181   0033B3  0F                 	db	15
   182                           
   183                           ;initializer for _lat_register
   184   0033B4  89                 	db	137
   185   0033B5  0F                 	db	15
   186   0033B6  8A                 	db	138
   187   0033B7  0F                 	db	15
   188   0033B8  8B                 	db	139
   189   0033B9  0F                 	db	15
   190   0033BA  8C                 	db	140
   191   0033BB  0F                 	db	15
   192   0033BC  8D                 	db	141
   193   0033BD  0F                 	db	15
   194                           
   195                           ;initializer for _adc_1
   196   0033BE  64                 	db	low _ADC_handler
   197   0033BF  26                 	db	high _ADC_handler
   198   0033C0  00                 	db	0
   199   0033C1  05                 	db	5
   200   0033C2  05                 	db	5
   201   0033C3  00                 	db	0
   202   0033C4  10                 	db	16
   203   0033C5  00                 	db	0
   204                           
   205                           	psect	smallconst
   206   001000                     __psmallconst:
   207                           	callstack 0
   208   001000  00                 	db	0
   209   001001                     _btn_values:
   210                           	callstack 0
   211   001001  37                 	db	55
   212   001002  38                 	db	56
   213   001003  39                 	db	57
   214   001004  2F                 	db	47
   215   001005  34                 	db	52
   216   001006  35                 	db	53
   217   001007  36                 	db	54
   218   001008  2A                 	db	42
   219   001009  31                 	db	49
   220   00100A  32                 	db	50
   221   00100B  33                 	db	51
   222   00100C  2D                 	db	45
   223   00100D  23                 	db	35
   224   00100E  30                 	db	48
   225   00100F  3D                 	db	61
   226   001010  2B                 	db	43
   227   001011                     __end_of_btn_values:
   228                           	callstack 0
   229   000000                     _SPBRGH	set	4016
   230   000000                     _SPBRG	set	4015
   231   000000                     _TXREG	set	4013
   232   000000                     _TXSTAbits	set	4012
   233   000000                     _RCREG	set	4014
   234   000000                     _RCSTAbits	set	4011
   235   000000                     _TMR3L	set	4018
   236   000000                     _TMR3H	set	4019
   237   000000                     _TMR1L	set	4046
   238   000000                     _TMR1H	set	4047
   239   000000                     _TMR0L	set	4054
   240   000000                     _TMR0H	set	4055
   241   000000                     _INTCON2bits	set	4081
   242   000000                     _SSPSTATbits	set	4039
   243   000000                     _SSPADD	set	4040
   244   000000                     _SSPCON2bits	set	4037
   245   000000                     _SSPCON1bits	set	4038
   246   000000                     _EECON2	set	4007
   247   000000                     _CCPR2H	set	4028
   248   000000                     _CCPR2L	set	4027
   249   000000                     _ADRESL	set	4035
   250   000000                     _ADRESH	set	4036
   251   000000                     _ADCON1bits	set	4033
   252   000000                     _INTCONbits	set	4082
   253   000000                     _PORTBbits	set	3969
   254   000000                     _TRISCbits	set	3988
   255   000000                     _PIE1bits	set	3997
   256   000000                     _ADCON2bits	set	4032
   257   000000                     _ADCON0bits	set	4034
   258   000000                     _PORTE	set	3972
   259   000000                     _PORTD	set	3971
   260   000000                     _PORTC	set	3970
   261   000000                     _PORTB	set	3969
   262   000000                     _PORTA	set	3968
   263   000000                     _LATA	set	3977
   264   000000                     _TRISA	set	3986
   265   000000                     _PIE2bits	set	4000
   266   000000                     _CCP2CONbits	set	4026
   267   000000                     _CCP1CONbits	set	4029
   268   000000                     _PIR1bits	set	3998
   269   000000                     _TRISE	set	3990
   270   000000                     _TRISD	set	3989
   271   000000                     _TRISC	set	3988
   272   000000                     _TRISB	set	3987
   273   000000                     _EECON1bits	set	4006
   274   000000                     _EEDATA	set	4008
   275   000000                     _EEADR	set	4009
   276   000000                     _EEADRH	set	4010
   277   000000                     _T3CONbits	set	4017
   278   000000                     _PIR2bits	set	4001
   279   000000                     _LATE	set	3981
   280   000000                     _LATD	set	3980
   281   000000                     _LATC	set	3979
   282   000000                     _LATB	set	3978
   283   000000                     _TMR2	set	4044
   284   000000                     _T2CONbits	set	4042
   285   000000                     _T1CONbits	set	4045
   286   000000                     _T0CONbits	set	4053
   287   000000                     _INTCON3bits	set	4080
   288   000000                     _SSPBUF	set	4041
   289   000000                     _BAUDCONbits	set	4024
   290   001011                     STR_5:
   291   001011  4C                 	db	76	;'L'
   292   001012  4D                 	db	77	;'M'
   293   001013  33                 	db	51	;'3'
   294   001014  35                 	db	53	;'5'
   295   001015  20                 	db	32
   296   001016  52                 	db	82	;'R'
   297   001017  65                 	db	101	;'e'
   298   001018  61                 	db	97	;'a'
   299   001019  64                 	db	100	;'d'
   300   00101A  69                 	db	105	;'i'
   301   00101B  6E                 	db	110	;'n'
   302   00101C  67                 	db	103	;'g'
   303   00101D  73                 	db	115	;'s'
   304   00101E  00                 	db	0
   305   00101F                     STR_4:
   306   00101F  4C                 	db	76	;'L'
   307   001020  4D                 	db	77	;'M'
   308   001021  33                 	db	51	;'3'
   309   001022  35                 	db	53	;'5'
   310   001023  20                 	db	32
   311   001024  50                 	db	80	;'P'
   312   001025  72                 	db	114	;'r'
   313   001026  6F                 	db	111	;'o'
   314   001027  6A                 	db	106	;'j'
   315   001028  65                 	db	101	;'e'
   316   001029  63                 	db	99	;'c'
   317   00102A  74                 	db	116	;'t'
   318   00102B  00                 	db	0
   319   00102C                     STR_6:
   320   00102C  73                 	db	115	;'s'
   321   00102D  65                 	db	101	;'e'
   322   00102E  6E                 	db	110	;'n'
   323   00102F  73                 	db	115	;'s'
   324   001030  6F                 	db	111	;'o'
   325   001031  72                 	db	114	;'r'
   326   001032  30                 	db	48	;'0'
   327   001033  20                 	db	32
   328   001034  3D                 	db	61	;'='
   329   001035  00                 	db	0
   330   001036                     STR_7:
   331   001036  73                 	db	115	;'s'
   332   001037  65                 	db	101	;'e'
   333   001038  6E                 	db	110	;'n'
   334   001039  73                 	db	115	;'s'
   335   00103A  6F                 	db	111	;'o'
   336   00103B  72                 	db	114	;'r'
   337   00103C  31                 	db	49	;'1'
   338   00103D  20                 	db	32
   339   00103E  3D                 	db	61	;'='
   340   00103F  00                 	db	0
   341   001040                     STR_1:
   342   001040  25                 	db	37
   343   001041  69                 	db	105	;'i'
   344   001042  00                 	db	0
   345   001043  00                 	db	0	; dummy byte at the end
   346   000000                     
   347                           ; #config settings
   348                           
   349                           	psect	cinit
   350   002DA6                     __pcinit:
   351                           	callstack 0
   352   002DA6                     start_initialization:
   353                           	callstack 0
   354   002DA6                     __initialization:
   355                           	callstack 0
   356                           
   357                           ; Initialize objects allocated to BANK1 (28 bytes)
   358                           ; load TBLPTR registers with __pidataBANK1
   359   002DA6  0EAA               	movlw	low __pidataBANK1
   360   002DA8  6EF6               	movwf	tblptrl,c
   361   002DAA  0E33               	movlw	high __pidataBANK1
   362   002DAC  6EF7               	movwf	tblptrh,c
   363   002DAE  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   364   002DB0  6EF8               	movwf	tblptru,c
   365   002DB2  EE01  F03E         	lfsr	0,__pdataBANK1
   366   002DB6  EE10 F01C          	lfsr	1,28
   367   002DBA                     copy_data0:
   368   002DBA  0009               	tblrd		*+
   369   002DBC  CFF5 FFEE          	movff	tablat,postinc0
   370   002DC0  50E5               	movf	postdec1,w,c
   371   002DC2  50E1               	movf	fsr1l,w,c
   372   002DC4  E1FA               	bnz	copy_data0
   373                           
   374                           ; Initialize objects allocated to BANK0 (20 bytes)
   375                           ; load TBLPTR registers with __pidataBANK0
   376   002DC6  0EC6               	movlw	low __pidataBANK0
   377   002DC8  6EF6               	movwf	tblptrl,c
   378   002DCA  0E33               	movlw	high __pidataBANK0
   379   002DCC  6EF7               	movwf	tblptrh,c
   380   002DCE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   381   002DD0  6EF8               	movwf	tblptru,c
   382   002DD2  EE00  F0EB         	lfsr	0,__pdataBANK0
   383   002DD6  EE10 F014          	lfsr	1,20
   384   002DDA                     copy_data1:
   385   002DDA  0009               	tblrd		*+
   386   002DDC  CFF5 FFEE          	movff	tablat,postinc0
   387   002DE0  50E5               	movf	postdec1,w,c
   388   002DE2  50E1               	movf	fsr1l,w,c
   389   002DE4  E1FA               	bnz	copy_data1
   390                           
   391                           ; Initialize objects allocated to COMRAM (4 bytes)
   392                           ; load TBLPTR registers with __pidataCOMRAM
   393   002DE6  0E06               	movlw	low __pidataCOMRAM
   394   002DE8  6EF6               	movwf	tblptrl,c
   395   002DEA  0E34               	movlw	high __pidataCOMRAM
   396   002DEC  6EF7               	movwf	tblptrh,c
   397   002DEE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   398   002DF0  6EF8               	movwf	tblptru,c
   399   002DF2  EE00  F06A         	lfsr	0,__pdataCOMRAM
   400   002DF6  EE10 F004          	lfsr	1,4
   401   002DFA                     copy_data2:
   402   002DFA  0009               	tblrd		*+
   403   002DFC  CFF5 FFEE          	movff	tablat,postinc0
   404   002E00  50E5               	movf	postdec1,w,c
   405   002E02  50E1               	movf	fsr1l,w,c
   406   002E04  E1FA               	bnz	copy_data2
   407                           
   408                           ; Clear objects allocated to BANK1 (62 bytes)
   409   002E06  EE01  F000         	lfsr	0,__pbssBANK1
   410   002E0A  0E3E               	movlw	62
   411   002E0C                     clear_0:
   412   002E0C  6AEE               	clrf	postinc0,c
   413   002E0E  06E8               	decf	wreg,f,c
   414   002E10  E1FD               	bnz	clear_0
   415                           
   416                           ; Clear objects allocated to BANK0 (26 bytes)
   417   002E12  EE00  F0D1         	lfsr	0,__pbssBANK0
   418   002E16  0E1A               	movlw	26
   419   002E18                     clear_1:
   420   002E18  6AEE               	clrf	postinc0,c
   421   002E1A  06E8               	decf	wreg,f,c
   422   002E1C  E1FD               	bnz	clear_1
   423                           
   424                           ; Clear objects allocated to COMRAM (50 bytes)
   425   002E1E  EE00  F038         	lfsr	0,__pbssCOMRAM
   426   002E22  0E32               	movlw	50
   427   002E24                     clear_2:
   428   002E24  6AEE               	clrf	postinc0,c
   429   002E26  06E8               	decf	wreg,f,c
   430   002E28  E1FD               	bnz	clear_2
   431   002E2A                     end_of_initialization:
   432                           	callstack 0
   433   002E2A                     __end_of__initialization:
   434                           	callstack 0
   435   002E2A  906E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   436   002E2C  926E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   437   002E2E  0100               	movlb	0
   438   002E30  EF42  F00C         	goto	_main	;jump to C main() function
   439                           
   440                           	psect	bssCOMRAM
   441   000038                     __pbssCOMRAM:
   442                           	callstack 0
   443   000038                     _timer3_preload:
   444                           	callstack 0
   445   000038                     	ds	2
   446   00003A                     _timer1_preload:
   447                           	callstack 0
   448   00003A                     	ds	2
   449   00003C                     _Timer1_InterruptHandler:
   450                           	callstack 0
   451   00003C                     	ds	2
   452   00003E                     _timer0_preload:
   453                           	callstack 0
   454   00003E                     	ds	2
   455   000040                     _Timer0_InterruptHandler:
   456                           	callstack 0
   457   000040                     	ds	2
   458   000042                     _RB7_InterruptHandler_HIGH:
   459                           	callstack 0
   460   000042                     	ds	2
   461   000044                     _RB7_InterruptHandler_LOW:
   462                           	callstack 0
   463   000044                     	ds	2
   464   000046                     _RB6_InterruptHandler_HIGH:
   465                           	callstack 0
   466   000046                     	ds	2
   467   000048                     _RB6_InterruptHandler_LOW:
   468                           	callstack 0
   469   000048                     	ds	2
   470   00004A                     _RB5_InterruptHandler_HIGH:
   471                           	callstack 0
   472   00004A                     	ds	2
   473   00004C                     _RB5_InterruptHandler_LOW:
   474                           	callstack 0
   475   00004C                     	ds	2
   476   00004E                     _RB4_InterruptHandler_HIGH:
   477                           	callstack 0
   478   00004E                     	ds	2
   479   000050                     _RB4_InterruptHandler_LOW:
   480                           	callstack 0
   481   000050                     	ds	2
   482   000052                     _INT2_InterruptHandler:
   483                           	callstack 0
   484   000052                     	ds	2
   485   000054                     _INT1_InterruptHandler:
   486                           	callstack 0
   487   000054                     	ds	2
   488   000056                     _INT0_InterruptHandler:
   489                           	callstack 0
   490   000056                     	ds	2
   491   000058                     CCP_Compare_Mode_Set_Value@F3115:
   492                           	callstack 0
   493   000058                     	ds	2
   494   00005A                     _CCP2_InterruptHandler:
   495                           	callstack 0
   496   00005A                     	ds	2
   497   00005C                     _CCP1_InterruptHandler:
   498                           	callstack 0
   499   00005C                     	ds	2
   500   00005E                     _ADC_InterruptHandler:
   501                           	callstack 0
   502   00005E                     	ds	2
   503   000060                     _timer2_preload:
   504                           	callstack 0
   505   000060                     	ds	1
   506   000061                     relay_turn_off@F3052:
   507                           	callstack 0
   508   000061                     	ds	1
   509   000062                     relay_turn_on@F3047:
   510                           	callstack 0
   511   000062                     	ds	1
   512   000063                     relay_initialization@F3042:
   513                           	callstack 0
   514   000063                     	ds	1
   515   000064                     led_turn_toggle@F3064:
   516                           	callstack 0
   517   000064                     	ds	1
   518   000065                     led_turn_off@F3059:
   519                           	callstack 0
   520   000065                     	ds	1
   521   000066                     led_turn_on@F3054:
   522                           	callstack 0
   523   000066                     	ds	1
   524   000067                     led_initialize@F3049:
   525                           	callstack 0
   526   000067                     	ds	1
   527   000068                     	ds	1
   528   000069                     	ds	1
   529                           
   530                           	psect	dataCOMRAM
   531   00006A                     __pdataCOMRAM:
   532                           	callstack 0
   533   00006A                     _RB7_Flag:
   534                           	callstack 0
   535   00006A                     	ds	1
   536   00006B                     _RB6_Flag:
   537                           	callstack 0
   538   00006B                     	ds	1
   539   00006C                     _RB5_Flag:
   540                           	callstack 0
   541   00006C                     	ds	1
   542   00006D                     _RB4_Flag:
   543                           	callstack 0
   544   00006D                     	ds	1
   545                           
   546                           	psect	bssBANK0
   547   0000D1                     __pbssBANK0:
   548                           	callstack 0
   549   0000D1                     	ds	4
   550   0000D5                     _width:
   551                           	callstack 0
   552   0000D5                     	ds	2
   553   0000D7                     _prec:
   554                           	callstack 0
   555   0000D7                     	ds	2
   556   0000D9                     _ESUART_Overrun_Error_InterruptHandler:
   557                           	callstack 0
   558   0000D9                     	ds	2
   559   0000DB                     _ESUART_Framing_Error_InterruptHandler:
   560                           	callstack 0
   561   0000DB                     	ds	2
   562   0000DD                     _ESUART_RX_InterruptHandler:
   563                           	callstack 0
   564   0000DD                     	ds	2
   565   0000DF                     _ESUART_TX_InterruptHandler:
   566                           	callstack 0
   567   0000DF                     	ds	2
   568   0000E1                     _Timer3_InterruptHandler:
   569                           	callstack 0
   570   0000E1                     	ds	2
   571   0000E3                     _Timer2_InterruptHandler:
   572                           	callstack 0
   573   0000E3                     	ds	2
   574   0000E5                     _flags:
   575                           	callstack 0
   576   0000E5                     	ds	1
   577   0000E6                     _adcflag:
   578                           	callstack 0
   579   0000E6                     	ds	1
   580   0000E7                     _adcres2:
   581                           	callstack 0
   582   0000E7                     	ds	2
   583   0000E9                     _adcres1:
   584                           	callstack 0
   585   0000E9                     	ds	2
   586                           
   587                           	psect	dataBANK0
   588   0000EB                     __pdataBANK0:
   589                           	callstack 0
   590   0000EB                     _tris_register:
   591                           	callstack 0
   592   0000EB                     	ds	10
   593   0000F5                     _lcd1:
   594                           	callstack 0
   595   0000F5                     	ds	6
   596   0000FB                     _motor2:
   597                           	callstack 0
   598   0000FB                     	ds	2
   599   0000FD                     _motor1:
   600                           	callstack 0
   601   0000FD                     	ds	2
   602                           
   603                           	psect	bssBANK1
   604   000100                     __pbssBANK1:
   605                           	callstack 0
   606   000100                     	ds	12
   607   00010C                     	ds	6
   608   000112                     _dbuf:
   609                           	callstack 0
   610   000112                     	ds	32
   611   000132                     _adcres2txt:
   612                           	callstack 0
   613   000132                     	ds	6
   614   000138                     _adcres1txt:
   615                           	callstack 0
   616   000138                     	ds	6
   617                           
   618                           	psect	dataBANK1
   619   00013E                     __pdataBANK1:
   620                           	callstack 0
   621   00013E                     _port_register:
   622                           	callstack 0
   623   00013E                     	ds	10
   624   000148                     _lat_register:
   625                           	callstack 0
   626   000148                     	ds	10
   627   000152                     _adc_1:
   628                           	callstack 0
   629   000152                     	ds	8
   630                           
   631                           	psect	cstackBANK1
   632   00015A                     __pcstackBANK1:
   633                           	callstack 0
   634   00015A                     sprintf@ap:
   635                           	callstack 0
   636                           
   637                           ; 2 bytes @ 0x0
   638   00015A                     	ds	2
   639   00015C                     sprintf@f:
   640                           	callstack 0
   641                           
   642                           ; 12 bytes @ 0x2
   643   00015C                     	ds	12
   644   000168                     ??_main:
   645                           
   646                           ; 1 bytes @ 0xE
   647   000168                     	ds	2
   648                           
   649                           	psect	cstackBANK0
   650   000080                     __pcstackBANK0:
   651                           	callstack 0
   652   000080                     ??_adc_input_channel_port_configure:
   653   000080                     ?___awdiv:
   654                           	callstack 0
   655   000080                     ?___awmod:
   656                           	callstack 0
   657   000080                     ADC_StartConversion@_adc:
   658                           	callstack 0
   659   000080                     gpio_pin_direction_initialize@_pin_config:
   660                           	callstack 0
   661   000080                     gpio_pin_write_logic@_pin_config:
   662                           	callstack 0
   663   000080                     ___awdiv@dividend:
   664                           	callstack 0
   665   000080                     ___awmod@dividend:
   666                           	callstack 0
   667   000080                     memset@dest:
   668                           	callstack 0
   669   000080                     fputc@c:
   670                           	callstack 0
   671                           
   672                           ; 2 bytes @ 0x0
   673   000080                     	ds	2
   674   000082                     ??_gpio_pin_direction_initialize:
   675   000082                     ADC_StartConversion@ret:
   676                           	callstack 0
   677   000082                     adc_input_channel_port_configure@channel:
   678                           	callstack 0
   679   000082                     gpio_pin_write_logic@logic:
   680                           	callstack 0
   681   000082                     ___awdiv@divisor:
   682                           	callstack 0
   683   000082                     ___awmod@divisor:
   684                           	callstack 0
   685   000082                     memset@c:
   686                           	callstack 0
   687   000082                     fputc@fp:
   688                           	callstack 0
   689                           
   690                           ; 2 bytes @ 0x2
   691   000082                     	ds	1
   692   000083                     ??_gpio_pin_write_logic:
   693   000083                     ADC_Init@_adc:
   694                           	callstack 0
   695   000083                     ADC_SelectChannel@_adc:
   696                           	callstack 0
   697                           
   698                           ; 2 bytes @ 0x3
   699   000083                     	ds	1
   700   000084                     ??_fputc:
   701   000084                     ___awdiv@counter:
   702                           	callstack 0
   703   000084                     ___awmod@counter:
   704                           	callstack 0
   705   000084                     memset@n:
   706                           	callstack 0
   707                           
   708                           ; 2 bytes @ 0x4
   709   000084                     	ds	1
   710   000085                     ??_ADC_Init:
   711   000085                     ADC_SelectChannel@channel:
   712                           	callstack 0
   713   000085                     ___awdiv@sign:
   714                           	callstack 0
   715   000085                     ___awmod@sign:
   716                           	callstack 0
   717                           
   718                           ; 1 bytes @ 0x5
   719   000085                     	ds	1
   720   000086                     ??_memset:
   721   000086                     ??_ADC_SelectChannel:
   722   000086                     ?_abs:
   723                           	callstack 0
   724   000086                     ___awdiv@quotient:
   725                           	callstack 0
   726   000086                     abs@a:
   727                           	callstack 0
   728                           
   729                           ; 2 bytes @ 0x6
   730   000086                     	ds	1
   731   000087                     ADC_SelectChannel@ret:
   732                           	callstack 0
   733                           
   734                           ; 1 bytes @ 0x7
   735   000087                     	ds	1
   736   000088                     ??_abs:
   737   000088                     gpio_pin_direction_initialize@ret:
   738                           	callstack 0
   739   000088                     ADC_StartConversion_by_Interrupt@_adc:
   740                           	callstack 0
   741   000088                     memset@k:
   742                           	callstack 0
   743                           
   744                           ; 2 bytes @ 0x8
   745   000088                     	ds	1
   746   000089                     gpio_pin_write_logic@ret:
   747                           	callstack 0
   748   000089                     fputs@s:
   749                           	callstack 0
   750                           
   751                           ; 2 bytes @ 0x9
   752   000089                     	ds	1
   753   00008A                     ADC_StartConversion_by_Interrupt@channel:
   754                           	callstack 0
   755   00008A                     send_4bits@lcd:
   756                           	callstack 0
   757   00008A                     lcd_4bit_send_enable_signal@lcd:
   758                           	callstack 0
   759   00008A                     dc_motor_turn_left@_dc_motor:
   760                           	callstack 0
   761   00008A                     dc_motor_stop@_dc_motor:
   762                           	callstack 0
   763   00008A                     gpio_pin_initialize@_pin_config:
   764                           	callstack 0
   765   00008A                     memset@s:
   766                           	callstack 0
   767                           
   768                           ; 2 bytes @ 0xA
   769   00008A                     	ds	1
   770   00008B                     ADC_StartConversion_by_Interrupt@l_conversion_status:
   771                           	callstack 0
   772   00008B                     fputs@fp:
   773                           	callstack 0
   774                           
   775                           ; 2 bytes @ 0xB
   776   00008B                     	ds	1
   777   00008C                     ??_gpio_pin_initialize:
   778   00008C                     send_4bits@command:
   779                           	callstack 0
   780   00008C                     lcd_4bit_send_enable_signal@ret:
   781                           	callstack 0
   782   00008C                     dc_motor_turn_left@ret:
   783                           	callstack 0
   784   00008C                     dc_motor_stop@ret:
   785                           	callstack 0
   786   00008C                     ADC_StartConversion_by_Interrupt@ret:
   787                           	callstack 0
   788                           
   789                           ; 1 bytes @ 0xC
   790   00008C                     	ds	1
   791   00008D                     send_4bits@ret:
   792                           	callstack 0
   793   00008D                     gpio_pin_initialize@ret:
   794                           	callstack 0
   795   00008D                     fputs@c:
   796                           	callstack 0
   797                           
   798                           ; 1 bytes @ 0xD
   799   00008D                     	ds	1
   800   00008E                     lcd_4bit_send_command@lcd:
   801                           	callstack 0
   802   00008E                     lcd_4bit_char_data@lcd:
   803                           	callstack 0
   804   00008E                     dc_motor_initialization@_dc_motor:
   805                           	callstack 0
   806   00008E                     fputs@i:
   807                           	callstack 0
   808                           
   809                           ; 2 bytes @ 0xE
   810   00008E                     	ds	2
   811   000090                     lcd_4bit_send_command@command:
   812                           	callstack 0
   813   000090                     lcd_4bit_char_data@data:
   814                           	callstack 0
   815   000090                     dc_motor_initialization@ret:
   816                           	callstack 0
   817   000090                     pad@fp:
   818                           	callstack 0
   819                           
   820                           ; 2 bytes @ 0x10
   821   000090                     	ds	1
   822   000091                     lcd_4bit_send_command@ret:
   823                           	callstack 0
   824   000091                     lcd_4bit_char_data@ret:
   825                           	callstack 0
   826                           
   827                           ; 1 bytes @ 0x11
   828   000091                     	ds	1
   829   000092                     lcd_4bit_initialize@lcd:
   830                           	callstack 0
   831   000092                     lcd_4bit_char_string@lcd:
   832                           	callstack 0
   833   000092                     lcd_4bit_send_set_cursor@lcd:
   834                           	callstack 0
   835   000092                     pad@buf:
   836                           	callstack 0
   837                           
   838                           ; 2 bytes @ 0x12
   839   000092                     	ds	2
   840   000094                     ??_lcd_4bit_initialize:
   841   000094                     lcd_4bit_send_set_cursor@row:
   842                           	callstack 0
   843   000094                     lcd_4bit_char_string@str:
   844                           	callstack 0
   845   000094                     pad@p:
   846                           	callstack 0
   847                           
   848                           ; 2 bytes @ 0x14
   849   000094                     	ds	1
   850   000095                     lcd_4bit_send_set_cursor@coloumn:
   851                           	callstack 0
   852                           
   853                           ; 1 bytes @ 0x15
   854   000095                     	ds	1
   855   000096                     ??_lcd_4bit_send_set_cursor:
   856   000096                     ??_pad:
   857   000096                     lcd_4bit_initialize@counter:
   858                           	callstack 0
   859   000096                     lcd_4bit_char_string@ret:
   860                           	callstack 0
   861                           
   862                           ; 1 bytes @ 0x16
   863   000096                     	ds	1
   864   000097                     lcd_4bit_initialize@ret:
   865                           	callstack 0
   866   000097                     pad@i:
   867                           	callstack 0
   868                           
   869                           ; 2 bytes @ 0x17
   870   000097                     	ds	1
   871   000098                     lcd_4bit_char_string_pos@lcd:
   872                           	callstack 0
   873                           
   874                           ; 2 bytes @ 0x18
   875   000098                     	ds	1
   876   000099                     pad@w:
   877                           	callstack 0
   878                           
   879                           ; 2 bytes @ 0x19
   880   000099                     	ds	1
   881   00009A                     lcd_4bit_char_string_pos@row:
   882                           	callstack 0
   883                           
   884                           ; 1 bytes @ 0x1A
   885   00009A                     	ds	1
   886   00009B                     lcd_4bit_char_string_pos@coloumn:
   887                           	callstack 0
   888   00009B                     dtoa@fp:
   889                           	callstack 0
   890                           
   891                           ; 2 bytes @ 0x1B
   892   00009B                     	ds	1
   893   00009C                     lcd_4bit_char_string_pos@str:
   894                           	callstack 0
   895                           
   896                           ; 2 bytes @ 0x1C
   897   00009C                     	ds	1
   898   00009D                     dtoa@d:
   899                           	callstack 0
   900                           
   901                           ; 2 bytes @ 0x1D
   902   00009D                     	ds	1
   903   00009E                     
   904                           ; 1 bytes @ 0x1E
   905   00009E                     	ds	1
   906   00009F                     _dtoa$4430:
   907                           	callstack 0
   908                           
   909                           ; 2 bytes @ 0x1F
   910   00009F                     	ds	2
   911   0000A1                     dtoa@p:
   912                           	callstack 0
   913                           
   914                           ; 2 bytes @ 0x21
   915   0000A1                     	ds	2
   916   0000A3                     dtoa@w:
   917                           	callstack 0
   918                           
   919                           ; 2 bytes @ 0x23
   920   0000A3                     	ds	2
   921   0000A5                     dtoa@s:
   922                           	callstack 0
   923                           
   924                           ; 1 bytes @ 0x25
   925   0000A5                     	ds	1
   926   0000A6                     dtoa@i:
   927                           	callstack 0
   928                           
   929                           ; 2 bytes @ 0x26
   930   0000A6                     	ds	2
   931   0000A8                     vfpfcnvrt@fp:
   932                           	callstack 0
   933                           
   934                           ; 2 bytes @ 0x28
   935   0000A8                     	ds	2
   936   0000AA                     vfpfcnvrt@fmt:
   937                           	callstack 0
   938                           
   939                           ; 2 bytes @ 0x2A
   940   0000AA                     	ds	2
   941   0000AC                     vfpfcnvrt@ap:
   942                           	callstack 0
   943                           
   944                           ; 2 bytes @ 0x2C
   945   0000AC                     	ds	2
   946   0000AE                     ??_vfpfcnvrt:
   947                           
   948                           ; 1 bytes @ 0x2E
   949   0000AE                     	ds	2
   950   0000B0                     vfpfcnvrt@convarg:
   951                           	callstack 0
   952                           
   953                           ; 4 bytes @ 0x30
   954   0000B0                     	ds	4
   955   0000B4                     vfpfcnvrt@cp:
   956                           	callstack 0
   957                           
   958                           ; 2 bytes @ 0x34
   959   0000B4                     	ds	2
   960   0000B6                     ?_vfprintf:
   961                           	callstack 0
   962   0000B6                     vfprintf@fp:
   963                           	callstack 0
   964                           
   965                           ; 2 bytes @ 0x36
   966   0000B6                     	ds	2
   967   0000B8                     vfprintf@fmt:
   968                           	callstack 0
   969                           
   970                           ; 2 bytes @ 0x38
   971   0000B8                     	ds	2
   972   0000BA                     vfprintf@ap:
   973                           	callstack 0
   974                           
   975                           ; 2 bytes @ 0x3A
   976   0000BA                     	ds	2
   977   0000BC                     vfprintf@cfmt:
   978                           	callstack 0
   979                           
   980                           ; 2 bytes @ 0x3C
   981   0000BC                     	ds	2
   982   0000BE                     ?_sprintf:
   983                           	callstack 0
   984   0000BE                     sprintf@s:
   985                           	callstack 0
   986                           
   987                           ; 2 bytes @ 0x3E
   988   0000BE                     	ds	2
   989   0000C0                     sprintf@fmt:
   990                           	callstack 0
   991                           
   992                           ; 2 bytes @ 0x40
   993   0000C0                     	ds	6
   994   0000C6                     convert_uint16_to_string@value:
   995                           	callstack 0
   996                           
   997                           ; 2 bytes @ 0x46
   998   0000C6                     	ds	2
   999   0000C8                     convert_uint16_to_string@str:
  1000                           	callstack 0
  1001                           
  1002                           ; 2 bytes @ 0x48
  1003   0000C8                     	ds	2
  1004   0000CA                     convert_uint16_to_string@Temp_String:
  1005                           	callstack 0
  1006                           
  1007                           ; 6 bytes @ 0x4A
  1008   0000CA                     	ds	6
  1009   0000D0                     convert_uint16_to_string@DataCounter:
  1010                           	callstack 0
  1011                           
  1012                           ; 1 bytes @ 0x50
  1013   0000D0                     	ds	1
  1014                           
  1015                           	psect	cstackCOMRAM
  1016   000001                     __pcstackCOMRAM:
  1017                           	callstack 0
  1018   000001                     ?___xxtofl:
  1019                           	callstack 0
  1020   000001                     RB4_ISR@pin4_source:
  1021                           	callstack 0
  1022   000001                     RB5_ISR@pin5_source:
  1023                           	callstack 0
  1024   000001                     RB6_ISR@pin6_source:
  1025                           	callstack 0
  1026   000001                     RB7_ISR@pin7_source:
  1027                           	callstack 0
  1028   000001                     ADC_GetConversionResult@_adc:
  1029                           	callstack 0
  1030   000001                     ___xxtofl@val:
  1031                           	callstack 0
  1032                           
  1033                           ; 4 bytes @ 0x0
  1034   000001                     	ds	2
  1035   000003                     ADC_GetConversionResult@conversion_result:
  1036                           	callstack 0
  1037                           
  1038                           ; 2 bytes @ 0x2
  1039   000003                     	ds	2
  1040   000005                     ??_ADC_GetConversionResult:
  1041   000005                     ??___xxtofl:
  1042                           
  1043                           ; 1 bytes @ 0x4
  1044   000005                     	ds	3
  1045   000008                     ADC_GetConversionResult@ret:
  1046                           	callstack 0
  1047                           
  1048                           ; 1 bytes @ 0x7
  1049   000008                     	ds	1
  1050   000009                     ___xxtofl@sign:
  1051                           	callstack 0
  1052                           
  1053                           ; 1 bytes @ 0x8
  1054   000009                     	ds	1
  1055   00000A                     ___xxtofl@exp:
  1056                           	callstack 0
  1057                           
  1058                           ; 1 bytes @ 0x9
  1059   00000A                     	ds	1
  1060   00000B                     ___xxtofl@arg:
  1061                           	callstack 0
  1062                           
  1063                           ; 4 bytes @ 0xA
  1064   00000B                     	ds	4
  1065   00000F                     ?___flmul:
  1066                           	callstack 0
  1067   00000F                     ___flmul@b:
  1068                           	callstack 0
  1069                           
  1070                           ; 4 bytes @ 0xE
  1071   00000F                     	ds	4
  1072   000013                     ___flmul@a:
  1073                           	callstack 0
  1074                           
  1075                           ; 4 bytes @ 0x12
  1076   000013                     	ds	4
  1077   000017                     ??___flmul:
  1078                           
  1079                           ; 1 bytes @ 0x16
  1080   000017                     	ds	4
  1081   00001B                     ___flmul@sign:
  1082                           	callstack 0
  1083                           
  1084                           ; 1 bytes @ 0x1A
  1085   00001B                     	ds	1
  1086   00001C                     ___flmul@grs:
  1087                           	callstack 0
  1088                           
  1089                           ; 4 bytes @ 0x1B
  1090   00001C                     	ds	4
  1091   000020                     ___flmul@aexp:
  1092                           	callstack 0
  1093                           
  1094                           ; 1 bytes @ 0x1F
  1095   000020                     	ds	1
  1096   000021                     ___flmul@bexp:
  1097                           	callstack 0
  1098                           
  1099                           ; 1 bytes @ 0x20
  1100   000021                     	ds	1
  1101   000022                     ___flmul@prod:
  1102                           	callstack 0
  1103                           
  1104                           ; 4 bytes @ 0x21
  1105   000022                     	ds	4
  1106   000026                     ___flmul@temp:
  1107                           	callstack 0
  1108                           
  1109                           ; 2 bytes @ 0x25
  1110   000026                     	ds	2
  1111   000028                     ?___fltol:
  1112                           	callstack 0
  1113   000028                     ___fltol@f1:
  1114                           	callstack 0
  1115                           
  1116                           ; 4 bytes @ 0x27
  1117   000028                     	ds	4
  1118   00002C                     ??___fltol:
  1119                           
  1120                           ; 1 bytes @ 0x2B
  1121   00002C                     	ds	4
  1122   000030                     ___fltol@sign1:
  1123                           	callstack 0
  1124                           
  1125                           ; 1 bytes @ 0x2F
  1126   000030                     	ds	1
  1127   000031                     ___fltol@exp1:
  1128                           	callstack 0
  1129                           
  1130                           ; 1 bytes @ 0x30
  1131   000031                     	ds	1
  1132   000032                     ??_InterruptManager:
  1133                           
  1134                           ; 1 bytes @ 0x31
  1135   000032                     	ds	6
  1136                           
  1137 ;;
  1138 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1139 ;;
  1140 ;; *************** function _main *****************
  1141 ;; Defined at:
  1142 ;;		line 74 in file "application.c"
  1143 ;; Parameters:    Size  Location     Type
  1144 ;;		None
  1145 ;; Auto vars:     Size  Location     Type
  1146 ;;		None
  1147 ;; Return value:  Size  Location     Type
  1148 ;;                  2  1516[None  ] int 
  1149 ;; Registers used:
  1150 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1151 ;; Tracked objects:
  1152 ;;		On entry : 0/0
  1153 ;;		On exit  : 0/0
  1154 ;;		Unchanged: 0/0
  1155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1158 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1159 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1160 ;;Total ram usage:        2 bytes
  1161 ;; Hardware stack levels required when called: 13
  1162 ;; This function calls:
  1163 ;;		_ADC_StartConversion_by_Interrupt
  1164 ;;		_application_initialization
  1165 ;;		_convert_uint16_to_string
  1166 ;;		_dc_motor_stop
  1167 ;;		_dc_motor_turn_left
  1168 ;;		_lcd_4bit_char_string_pos
  1169 ;;		_lcd_4bit_send_command
  1170 ;; This function is called by:
  1171 ;;		Startup code after reset
  1172 ;; This function uses a non-reentrant model
  1173 ;;
  1174                           
  1175                           	psect	text0
  1176   001884                     __ptext0:
  1177                           	callstack 0
  1178   001884                     _main:
  1179                           	callstack 18
  1180   001884                     
  1181                           ;application.c: 75:     application_initialization();
  1182   001884  EC71  F019         	call	_application_initialization	;wreg free
  1183   001888                     
  1184                           ;application.c: 76:     lcd_4bit_char_string_pos(&lcd1,1,5,"LM35 Project");
  1185   001888  0EF5               	movlw	low _lcd1
  1186   00188A  0100               	movlb	0	; () banked
  1187   00188C  6F98               	movwf	lcd_4bit_char_string_pos@lcd& (0+255),b
  1188   00188E  0E00               	movlw	high _lcd1
  1189   001890  6F99               	movwf	(lcd_4bit_char_string_pos@lcd+1)& (0+255),b
  1190   001892  0E01               	movlw	1
  1191   001894  6F9A               	movwf	lcd_4bit_char_string_pos@row& (0+255),b
  1192   001896  0E05               	movlw	5
  1193   001898  6F9B               	movwf	lcd_4bit_char_string_pos@coloumn& (0+255),b
  1194   00189A  0E1F               	movlw	low STR_4
  1195   00189C  6F9C               	movwf	lcd_4bit_char_string_pos@str& (0+255),b
  1196   00189E  0E10               	movlw	high STR_4
  1197   0018A0  6F9D               	movwf	(lcd_4bit_char_string_pos@str+1)& (0+255),b
  1198   0018A2  ECD0  F018         	call	_lcd_4bit_char_string_pos	;wreg free
  1199   0018A6                     
  1200                           ;application.c: 77:     _delay((unsigned long)((2000)*(4000000UL/4000.0)));
  1201   0018A6  0E0B               	movlw	11
  1202   0018A8  0101               	movlb	1	; () banked
  1203   0018AA  6F69               	movwf	(??_main+1)& (0+255),b
  1204   0018AC  0E26               	movlw	38
  1205   0018AE  6F68               	movwf	??_main& (0+255),b
  1206   0018B0  0E5D               	movlw	93
  1207   0018B2                     u8447:
  1208   0018B2  2EE8               	decfsz	wreg,f,c
  1209   0018B4  D7FE               	bra	u8447
  1210   0018B6  2F68               	decfsz	??_main& (0+255),f,b
  1211   0018B8  D7FC               	bra	u8447
  1212   0018BA  2F69               	decfsz	(??_main+1)& (0+255),f,b
  1213   0018BC  D7FA               	bra	u8447
  1214   0018BE  D000               	nop2	
  1215   0018C0                     
  1216                           ;application.c: 78:     lcd_4bit_send_command(&lcd1,0x01);
  1217   0018C0  0EF5               	movlw	low _lcd1
  1218   0018C2  0100               	movlb	0	; () banked
  1219   0018C4  6F8E               	movwf	lcd_4bit_send_command@lcd& (0+255),b
  1220   0018C6  0E00               	movlw	high _lcd1
  1221   0018C8  6F8F               	movwf	(lcd_4bit_send_command@lcd+1)& (0+255),b
  1222   0018CA  0E01               	movlw	1
  1223   0018CC  6F90               	movwf	lcd_4bit_send_command@command& (0+255),b
  1224   0018CE  EC98  F017         	call	_lcd_4bit_send_command	;wreg free
  1225   0018D2                     
  1226                           ;application.c: 79:     lcd_4bit_char_string_pos(&lcd1,1,4,"LM35 Readings");
  1227   0018D2  0EF5               	movlw	low _lcd1
  1228   0018D4  0100               	movlb	0	; () banked
  1229   0018D6  6F98               	movwf	lcd_4bit_char_string_pos@lcd& (0+255),b
  1230   0018D8  0E00               	movlw	high _lcd1
  1231   0018DA  6F99               	movwf	(lcd_4bit_char_string_pos@lcd+1)& (0+255),b
  1232   0018DC  0E01               	movlw	1
  1233   0018DE  6F9A               	movwf	lcd_4bit_char_string_pos@row& (0+255),b
  1234   0018E0  0E04               	movlw	4
  1235   0018E2  6F9B               	movwf	lcd_4bit_char_string_pos@coloumn& (0+255),b
  1236   0018E4  0E11               	movlw	low STR_5
  1237   0018E6  6F9C               	movwf	lcd_4bit_char_string_pos@str& (0+255),b
  1238   0018E8  0E10               	movlw	high STR_5
  1239   0018EA  6F9D               	movwf	(lcd_4bit_char_string_pos@str+1)& (0+255),b
  1240   0018EC  ECD0  F018         	call	_lcd_4bit_char_string_pos	;wreg free
  1241   0018F0                     
  1242                           ;application.c: 80:     lcd_4bit_char_string_pos(&lcd1,2,1,"sensor0 =");
  1243   0018F0  0EF5               	movlw	low _lcd1
  1244   0018F2  0100               	movlb	0	; () banked
  1245   0018F4  6F98               	movwf	lcd_4bit_char_string_pos@lcd& (0+255),b
  1246   0018F6  0E00               	movlw	high _lcd1
  1247   0018F8  6F99               	movwf	(lcd_4bit_char_string_pos@lcd+1)& (0+255),b
  1248   0018FA  0E02               	movlw	2
  1249   0018FC  6F9A               	movwf	lcd_4bit_char_string_pos@row& (0+255),b
  1250   0018FE  0E01               	movlw	1
  1251   001900  6F9B               	movwf	lcd_4bit_char_string_pos@coloumn& (0+255),b
  1252   001902  0E2C               	movlw	low STR_6
  1253   001904  6F9C               	movwf	lcd_4bit_char_string_pos@str& (0+255),b
  1254   001906  0E10               	movlw	high STR_6
  1255   001908  6F9D               	movwf	(lcd_4bit_char_string_pos@str+1)& (0+255),b
  1256   00190A  ECD0  F018         	call	_lcd_4bit_char_string_pos	;wreg free
  1257   00190E                     
  1258                           ;application.c: 81:     lcd_4bit_char_string_pos(&lcd1,3,1,"sensor1 =");
  1259   00190E  0EF5               	movlw	low _lcd1
  1260   001910  0100               	movlb	0	; () banked
  1261   001912  6F98               	movwf	lcd_4bit_char_string_pos@lcd& (0+255),b
  1262   001914  0E00               	movlw	high _lcd1
  1263   001916  6F99               	movwf	(lcd_4bit_char_string_pos@lcd+1)& (0+255),b
  1264   001918  0E03               	movlw	3
  1265   00191A  6F9A               	movwf	lcd_4bit_char_string_pos@row& (0+255),b
  1266   00191C  0E01               	movlw	1
  1267   00191E  6F9B               	movwf	lcd_4bit_char_string_pos@coloumn& (0+255),b
  1268   001920  0E36               	movlw	low STR_7
  1269   001922  6F9C               	movwf	lcd_4bit_char_string_pos@str& (0+255),b
  1270   001924  0E10               	movlw	high STR_7
  1271   001926  6F9D               	movwf	(lcd_4bit_char_string_pos@str+1)& (0+255),b
  1272   001928  ECD0  F018         	call	_lcd_4bit_char_string_pos	;wreg free
  1273   00192C                     l8705:
  1274                           
  1275                           ;application.c: 86:         if(adcflag == 0){
  1276   00192C  0100               	movlb	0	; () banked
  1277   00192E  51E6               	movf	_adcflag& (0+255),w,b
  1278   001930  A4D8               	btfss	status,2,c
  1279   001932  EF9D  F00C         	goto	u8381
  1280   001936  EF9F  F00C         	goto	u8380
  1281   00193A                     u8381:
  1282   00193A  EFA9  F00C         	goto	l8709
  1283   00193E                     u8380:
  1284   00193E                     
  1285                           ; BSR set to: 0
  1286                           ;application.c: 87:             ADC_StartConversion_by_Interrupt(&adc_1,ADC_CHANNEL_AN0)
      +                          ;
  1287   00193E  0E52               	movlw	low _adc_1
  1288   001940  6F88               	movwf	ADC_StartConversion_by_Interrupt@_adc& (0+255),b
  1289   001942  0E01               	movlw	high _adc_1
  1290   001944  6F89               	movwf	(ADC_StartConversion_by_Interrupt@_adc+1)& (0+255),b
  1291   001946  0E00               	movlw	0
  1292   001948  6F8A               	movwf	ADC_StartConversion_by_Interrupt@channel& (0+255),b
  1293   00194A  EC12  F019         	call	_ADC_StartConversion_by_Interrupt	;wreg free
  1294                           
  1295                           ;application.c: 88:         }
  1296   00194E  EFB9  F00C         	goto	l8713
  1297   001952                     l8709:
  1298                           
  1299                           ; BSR set to: 0
  1300   001952  05E6               	decf	_adcflag& (0+255),w,b
  1301   001954  A4D8               	btfss	status,2,c
  1302   001956  EFAF  F00C         	goto	u8391
  1303   00195A  EFB1  F00C         	goto	u8390
  1304   00195E                     u8391:
  1305   00195E  EFB9  F00C         	goto	l8713
  1306   001962                     u8390:
  1307   001962                     
  1308                           ; BSR set to: 0
  1309                           ;application.c: 91:             ADC_StartConversion_by_Interrupt(&adc_1,ADC_CHANNEL_AN1)
      +                          ;
  1310   001962  0E52               	movlw	low _adc_1
  1311   001964  6F88               	movwf	ADC_StartConversion_by_Interrupt@_adc& (0+255),b
  1312   001966  0E01               	movlw	high _adc_1
  1313   001968  6F89               	movwf	(ADC_StartConversion_by_Interrupt@_adc+1)& (0+255),b
  1314   00196A  0E01               	movlw	1
  1315   00196C  6F8A               	movwf	ADC_StartConversion_by_Interrupt@channel& (0+255),b
  1316   00196E  EC12  F019         	call	_ADC_StartConversion_by_Interrupt	;wreg free
  1317   001972                     l8713:
  1318                           
  1319                           ;application.c: 96:             convert_uint16_to_string(adcres1,&adcres1txt);
  1320   001972  C0E9  F0C6         	movff	_adcres1,convert_uint16_to_string@value
  1321   001976  C0EA  F0C7         	movff	_adcres1+1,convert_uint16_to_string@value+1
  1322   00197A  0E38               	movlw	low _adcres1txt
  1323   00197C  0100               	movlb	0	; () banked
  1324   00197E  6FC8               	movwf	convert_uint16_to_string@str& (0+255),b
  1325   001980  0E01               	movlw	high _adcres1txt
  1326   001982  6FC9               	movwf	(convert_uint16_to_string@str+1)& (0+255),b
  1327   001984  EC36  F015         	call	_convert_uint16_to_string	;wreg free
  1328   001988                     
  1329                           ;application.c: 97:             lcd_4bit_char_string_pos(&lcd1,2,10,adcres1txt);
  1330   001988  0EF5               	movlw	low _lcd1
  1331   00198A  0100               	movlb	0	; () banked
  1332   00198C  6F98               	movwf	lcd_4bit_char_string_pos@lcd& (0+255),b
  1333   00198E  0E00               	movlw	high _lcd1
  1334   001990  6F99               	movwf	(lcd_4bit_char_string_pos@lcd+1)& (0+255),b
  1335   001992  0E02               	movlw	2
  1336   001994  6F9A               	movwf	lcd_4bit_char_string_pos@row& (0+255),b
  1337   001996  0E0A               	movlw	10
  1338   001998  6F9B               	movwf	lcd_4bit_char_string_pos@coloumn& (0+255),b
  1339   00199A  0E38               	movlw	low _adcres1txt
  1340   00199C  6F9C               	movwf	lcd_4bit_char_string_pos@str& (0+255),b
  1341   00199E  0E01               	movlw	high _adcres1txt
  1342   0019A0  6F9D               	movwf	(lcd_4bit_char_string_pos@str+1)& (0+255),b
  1343   0019A2  ECD0  F018         	call	_lcd_4bit_char_string_pos	;wreg free
  1344   0019A6                     
  1345                           ;application.c: 99:             convert_uint16_to_string(adcres2,&adcres2txt);
  1346   0019A6  C0E7  F0C6         	movff	_adcres2,convert_uint16_to_string@value
  1347   0019AA  C0E8  F0C7         	movff	_adcres2+1,convert_uint16_to_string@value+1
  1348   0019AE  0E32               	movlw	low _adcres2txt
  1349   0019B0  0100               	movlb	0	; () banked
  1350   0019B2  6FC8               	movwf	convert_uint16_to_string@str& (0+255),b
  1351   0019B4  0E01               	movlw	high _adcres2txt
  1352   0019B6  6FC9               	movwf	(convert_uint16_to_string@str+1)& (0+255),b
  1353   0019B8  EC36  F015         	call	_convert_uint16_to_string	;wreg free
  1354   0019BC                     
  1355                           ;application.c: 100:             lcd_4bit_char_string_pos(&lcd1,3,10,adcres2txt);
  1356   0019BC  0EF5               	movlw	low _lcd1
  1357   0019BE  0100               	movlb	0	; () banked
  1358   0019C0  6F98               	movwf	lcd_4bit_char_string_pos@lcd& (0+255),b
  1359   0019C2  0E00               	movlw	high _lcd1
  1360   0019C4  6F99               	movwf	(lcd_4bit_char_string_pos@lcd+1)& (0+255),b
  1361   0019C6  0E03               	movlw	3
  1362   0019C8  6F9A               	movwf	lcd_4bit_char_string_pos@row& (0+255),b
  1363   0019CA  0E0A               	movlw	10
  1364   0019CC  6F9B               	movwf	lcd_4bit_char_string_pos@coloumn& (0+255),b
  1365   0019CE  0E32               	movlw	low _adcres2txt
  1366   0019D0  6F9C               	movwf	lcd_4bit_char_string_pos@str& (0+255),b
  1367   0019D2  0E01               	movlw	high _adcres2txt
  1368   0019D4  6F9D               	movwf	(lcd_4bit_char_string_pos@str+1)& (0+255),b
  1369   0019D6  ECD0  F018         	call	_lcd_4bit_char_string_pos	;wreg free
  1370   0019DA                     
  1371                           ;application.c: 102:             if(adcres1 > 50){
  1372   0019DA  0100               	movlb	0	; () banked
  1373   0019DC  51EA               	movf	(_adcres1+1)& (0+255),w,b
  1374   0019DE  E109               	bnz	u8400
  1375   0019E0  0E33               	movlw	51
  1376   0019E2  5DE9               	subwf	_adcres1& (0+255),w,b
  1377   0019E4  A0D8               	btfss	status,0,c
  1378   0019E6  EFF7  F00C         	goto	u8401
  1379   0019EA  EFF9  F00C         	goto	u8400
  1380   0019EE                     u8401:
  1381   0019EE  EF01  F00D         	goto	l8725
  1382   0019F2                     u8400:
  1383   0019F2                     
  1384                           ; BSR set to: 0
  1385                           ;application.c: 103:                 dc_motor_turn_left(&motor1);
  1386   0019F2  0EFD               	movlw	low _motor1
  1387   0019F4  6F8A               	movwf	dc_motor_turn_left@_dc_motor& (0+255),b
  1388   0019F6  0E00               	movlw	high _motor1
  1389   0019F8  6F8B               	movwf	(dc_motor_turn_left@_dc_motor+1)& (0+255),b
  1390   0019FA  EC8A  F018         	call	_dc_motor_turn_left	;wreg free
  1391                           
  1392                           ;application.c: 104:             }
  1393   0019FE  EF12  F00D         	goto	l8729
  1394   001A02                     l8725:
  1395                           
  1396                           ; BSR set to: 0
  1397   001A02  51EA               	movf	(_adcres1+1)& (0+255),w,b
  1398   001A04  E107               	bnz	u8411
  1399   001A06  0E33               	movlw	51
  1400   001A08  5DE9               	subwf	_adcres1& (0+255),w,b
  1401   001A0A  B0D8               	btfsc	status,0,c
  1402   001A0C  EF0A  F00D         	goto	u8411
  1403   001A10  EF0C  F00D         	goto	u8410
  1404   001A14                     u8411:
  1405   001A14  EF12  F00D         	goto	l8729
  1406   001A18                     u8410:
  1407   001A18                     
  1408                           ; BSR set to: 0
  1409                           ;application.c: 106:                 dc_motor_stop(&motor1);
  1410   001A18  0EFD               	movlw	low _motor1
  1411   001A1A  6F8A               	movwf	dc_motor_stop@_dc_motor& (0+255),b
  1412   001A1C  0E00               	movlw	high _motor1
  1413   001A1E  6F8B               	movwf	(dc_motor_stop@_dc_motor+1)& (0+255),b
  1414   001A20  ECAD  F018         	call	_dc_motor_stop	;wreg free
  1415   001A24                     l8729:
  1416                           
  1417                           ;application.c: 108:             if(adcres2 > 50){
  1418   001A24  0100               	movlb	0	; () banked
  1419   001A26  51E8               	movf	(_adcres2+1)& (0+255),w,b
  1420   001A28  E109               	bnz	u8420
  1421   001A2A  0E33               	movlw	51
  1422   001A2C  5DE7               	subwf	_adcres2& (0+255),w,b
  1423   001A2E  A0D8               	btfss	status,0,c
  1424   001A30  EF1C  F00D         	goto	u8421
  1425   001A34  EF1E  F00D         	goto	u8420
  1426   001A38                     u8421:
  1427   001A38  EF26  F00D         	goto	l8733
  1428   001A3C                     u8420:
  1429   001A3C                     
  1430                           ; BSR set to: 0
  1431                           ;application.c: 109:                 dc_motor_turn_left(&motor2);
  1432   001A3C  0EFB               	movlw	low _motor2
  1433   001A3E  6F8A               	movwf	dc_motor_turn_left@_dc_motor& (0+255),b
  1434   001A40  0E00               	movlw	high _motor2
  1435   001A42  6F8B               	movwf	(dc_motor_turn_left@_dc_motor+1)& (0+255),b
  1436   001A44  EC8A  F018         	call	_dc_motor_turn_left	;wreg free
  1437                           
  1438                           ;application.c: 110:             }
  1439   001A48  EF96  F00C         	goto	l8705
  1440   001A4C                     l8733:
  1441                           
  1442                           ; BSR set to: 0
  1443   001A4C  51E8               	movf	(_adcres2+1)& (0+255),w,b
  1444   001A4E  E107               	bnz	u8431
  1445   001A50  0E33               	movlw	51
  1446   001A52  5DE7               	subwf	_adcres2& (0+255),w,b
  1447   001A54  B0D8               	btfsc	status,0,c
  1448   001A56  EF2F  F00D         	goto	u8431
  1449   001A5A  EF31  F00D         	goto	u8430
  1450   001A5E                     u8431:
  1451   001A5E  EF96  F00C         	goto	l8705
  1452   001A62                     u8430:
  1453   001A62                     
  1454                           ; BSR set to: 0
  1455                           ;application.c: 112:                 dc_motor_stop(&motor2);
  1456   001A62  0EFB               	movlw	low _motor2
  1457   001A64  6F8A               	movwf	dc_motor_stop@_dc_motor& (0+255),b
  1458   001A66  0E00               	movlw	high _motor2
  1459   001A68  6F8B               	movwf	(dc_motor_stop@_dc_motor+1)& (0+255),b
  1460   001A6A  ECAD  F018         	call	_dc_motor_stop	;wreg free
  1461   001A6E  EF96  F00C         	goto	l8705
  1462   001A72  EF07  F000         	goto	start
  1463   001A76                     __end_of_main:
  1464                           	callstack 0
  1465                           
  1466 ;; *************** function _lcd_4bit_char_string_pos *****************
  1467 ;; Defined at:
  1468 ;;		line 146 in file "ECU_layer/Chr_LCD/ecu_chr_lcd.c"
  1469 ;; Parameters:    Size  Location     Type
  1470 ;;  lcd             2   24[BANK0 ] PTR const struct .
  1471 ;;		 -> lcd1(6), 
  1472 ;;  row             1   26[BANK0 ] unsigned char 
  1473 ;;  coloumn         1   27[BANK0 ] unsigned char 
  1474 ;;  str             2   28[BANK0 ] PTR unsigned char 
  1475 ;;		 -> adcres2txt(6), adcres1txt(6), STR_7(10), STR_6(10), 
  1476 ;;		 -> STR_5(14), STR_4(13), 
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;  ret             1    0        unsigned char 
  1479 ;; Return value:  Size  Location     Type
  1480 ;;                  1    wreg      unsigned char 
  1481 ;; Registers used:
  1482 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1483 ;; Tracked objects:
  1484 ;;		On entry : 0/0
  1485 ;;		On exit  : 0/0
  1486 ;;		Unchanged: 0/0
  1487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1488 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1491 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1492 ;;Total ram usage:        6 bytes
  1493 ;; Hardware stack levels used: 1
  1494 ;; Hardware stack levels required when called: 8
  1495 ;; This function calls:
  1496 ;;		_lcd_4bit_char_string
  1497 ;;		_lcd_4bit_send_set_cursor
  1498 ;; This function is called by:
  1499 ;;		_main
  1500 ;; This function uses a non-reentrant model
  1501 ;;
  1502                           
  1503                           	psect	text1
  1504   0031A0                     __ptext1:
  1505                           	callstack 0
  1506   0031A0                     _lcd_4bit_char_string_pos:
  1507                           	callstack 22
  1508   0031A0                     
  1509                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 148:     if( ((void*)0) == lcd){
  1510   0031A0  0100               	movlb	0	; () banked
  1511   0031A2  5198               	movf	lcd_4bit_char_string_pos@lcd& (0+255),w,b
  1512   0031A4  1199               	iorwf	(lcd_4bit_char_string_pos@lcd+1)& (0+255),w,b
  1513   0031A6  A4D8               	btfss	status,2,c
  1514   0031A8  EFD8  F018         	goto	u7711
  1515   0031AC  EFDA  F018         	goto	u7710
  1516   0031B0                     u7711:
  1517   0031B0  EFDC  F018         	goto	l8005
  1518   0031B4                     u7710:
  1519   0031B4                     
  1520                           ; BSR set to: 0
  1521                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 150:     }
  1522   0031B4  EFF0  F018         	goto	l83
  1523   0031B8                     l8005:
  1524                           
  1525                           ; BSR set to: 0
  1526   0031B8  C098  F092         	movff	lcd_4bit_char_string_pos@lcd,lcd_4bit_send_set_cursor@lcd
  1527   0031BC  C099  F093         	movff	lcd_4bit_char_string_pos@lcd+1,lcd_4bit_send_set_cursor@lcd+1
  1528   0031C0  C09A  F094         	movff	lcd_4bit_char_string_pos@row,lcd_4bit_send_set_cursor@row
  1529   0031C4  C09B  F095         	movff	lcd_4bit_char_string_pos@coloumn,lcd_4bit_send_set_cursor@coloumn
  1530   0031C8  ECDD  F014         	call	_lcd_4bit_send_set_cursor	;wreg free
  1531   0031CC  C098  F092         	movff	lcd_4bit_char_string_pos@lcd,lcd_4bit_char_string@lcd
  1532   0031D0  C099  F093         	movff	lcd_4bit_char_string_pos@lcd+1,lcd_4bit_char_string@lcd+1
  1533   0031D4  C09C  F094         	movff	lcd_4bit_char_string_pos@str,lcd_4bit_char_string@str
  1534   0031D8  C09D  F095         	movff	lcd_4bit_char_string_pos@str+1,lcd_4bit_char_string@str+1
  1535   0031DC  EC41  F016         	call	_lcd_4bit_char_string	;wreg free
  1536   0031E0                     l83:
  1537   0031E0  0012               	return		;funcret
  1538   0031E2                     __end_of_lcd_4bit_char_string_pos:
  1539                           	callstack 0
  1540                           
  1541 ;; *************** function _lcd_4bit_send_set_cursor *****************
  1542 ;; Defined at:
  1543 ;;		line 476 in file "ECU_layer/Chr_LCD/ecu_chr_lcd.c"
  1544 ;; Parameters:    Size  Location     Type
  1545 ;;  lcd             2   18[BANK0 ] PTR const struct .
  1546 ;;		 -> lcd1(6), 
  1547 ;;  row             1   20[BANK0 ] unsigned char 
  1548 ;;  coloumn         1   21[BANK0 ] unsigned char 
  1549 ;; Auto vars:     Size  Location     Type
  1550 ;;  ret             1    0        unsigned char 
  1551 ;; Return value:  Size  Location     Type
  1552 ;;                  1    wreg      unsigned char 
  1553 ;; Registers used:
  1554 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1555 ;; Tracked objects:
  1556 ;;		On entry : 0/0
  1557 ;;		On exit  : 0/0
  1558 ;;		Unchanged: 0/0
  1559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1560 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1562 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1563 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1564 ;;Total ram usage:        6 bytes
  1565 ;; Hardware stack levels used: 1
  1566 ;; Hardware stack levels required when called: 7
  1567 ;; This function calls:
  1568 ;;		_lcd_4bit_send_command
  1569 ;; This function is called by:
  1570 ;;		_lcd_4bit_char_string_pos
  1571 ;;		_lcd_4bit_char_data_pos
  1572 ;; This function uses a non-reentrant model
  1573 ;;
  1574                           
  1575                           	psect	text2
  1576   0029BA                     __ptext2:
  1577                           	callstack 0
  1578   0029BA                     _lcd_4bit_send_set_cursor:
  1579                           	callstack 22
  1580   0029BA                     
  1581                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 479:     if( ((void*)0) == lcd){
  1582   0029BA  0100               	movlb	0	; () banked
  1583   0029BC  5192               	movf	lcd_4bit_send_set_cursor@lcd& (0+255),w,b
  1584   0029BE  1193               	iorwf	(lcd_4bit_send_set_cursor@lcd+1)& (0+255),w,b
  1585   0029C0  A4D8               	btfss	status,2,c
  1586   0029C2  EFE5  F014         	goto	u7491
  1587   0029C6  EFE7  F014         	goto	u7490
  1588   0029CA                     u7491:
  1589   0029CA  EFE9  F014         	goto	l7803
  1590   0029CE                     u7490:
  1591   0029CE                     
  1592                           ; BSR set to: 0
  1593                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 481:     }
  1594   0029CE  EF35  F015         	goto	l202
  1595   0029D2                     l7803:
  1596                           
  1597                           ; BSR set to: 0
  1598                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 483:         coloumn--;
  1599   0029D2  0795               	decf	lcd_4bit_send_set_cursor@coloumn& (0+255),f,b
  1600                           
  1601                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 484:         switch(row){
  1602   0029D4  EF18  F015         	goto	l7813
  1603   0029D8                     l7805:
  1604                           
  1605                           ; BSR set to: 0
  1606   0029D8  C092  F08E         	movff	lcd_4bit_send_set_cursor@lcd,lcd_4bit_send_command@lcd
  1607   0029DC  C093  F08F         	movff	lcd_4bit_send_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  1608   0029E0  5195               	movf	lcd_4bit_send_set_cursor@coloumn& (0+255),w,b
  1609   0029E2  0F80               	addlw	128
  1610   0029E4  6F90               	movwf	lcd_4bit_send_command@command& (0+255),b
  1611   0029E6  EC98  F017         	call	_lcd_4bit_send_command	;wreg free
  1612   0029EA  EF35  F015         	goto	l202
  1613   0029EE                     l7807:
  1614                           
  1615                           ; BSR set to: 0
  1616   0029EE  C092  F08E         	movff	lcd_4bit_send_set_cursor@lcd,lcd_4bit_send_command@lcd
  1617   0029F2  C093  F08F         	movff	lcd_4bit_send_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  1618   0029F6  5195               	movf	lcd_4bit_send_set_cursor@coloumn& (0+255),w,b
  1619   0029F8  0FC0               	addlw	192
  1620   0029FA  6F90               	movwf	lcd_4bit_send_command@command& (0+255),b
  1621   0029FC  EC98  F017         	call	_lcd_4bit_send_command	;wreg free
  1622   002A00  EF35  F015         	goto	l202
  1623   002A04                     l7809:
  1624                           
  1625                           ; BSR set to: 0
  1626   002A04  C092  F08E         	movff	lcd_4bit_send_set_cursor@lcd,lcd_4bit_send_command@lcd
  1627   002A08  C093  F08F         	movff	lcd_4bit_send_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  1628   002A0C  5195               	movf	lcd_4bit_send_set_cursor@coloumn& (0+255),w,b
  1629   002A0E  0F94               	addlw	148
  1630   002A10  6F90               	movwf	lcd_4bit_send_command@command& (0+255),b
  1631   002A12  EC98  F017         	call	_lcd_4bit_send_command	;wreg free
  1632   002A16  EF35  F015         	goto	l202
  1633   002A1A                     l7811:
  1634                           
  1635                           ; BSR set to: 0
  1636   002A1A  C092  F08E         	movff	lcd_4bit_send_set_cursor@lcd,lcd_4bit_send_command@lcd
  1637   002A1E  C093  F08F         	movff	lcd_4bit_send_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  1638   002A22  5195               	movf	lcd_4bit_send_set_cursor@coloumn& (0+255),w,b
  1639   002A24  0FD4               	addlw	212
  1640   002A26  6F90               	movwf	lcd_4bit_send_command@command& (0+255),b
  1641   002A28  EC98  F017         	call	_lcd_4bit_send_command	;wreg free
  1642   002A2C  EF35  F015         	goto	l202
  1643   002A30                     l7813:
  1644                           
  1645                           ; BSR set to: 0
  1646   002A30  5194               	movf	lcd_4bit_send_set_cursor@row& (0+255),w,b
  1647   002A32  6F96               	movwf	??_lcd_4bit_send_set_cursor& (0+255),b
  1648   002A34  6B97               	clrf	(??_lcd_4bit_send_set_cursor+1)& (0+255),b
  1649                           
  1650                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1651                           ; Switch size 1, requested type "simple"
  1652                           ; Number of cases is 1, Range of values is 0 to 0
  1653                           ; switch strategies available:
  1654                           ; Name         Instructions Cycles
  1655                           ; simple_byte            4     3 (average)
  1656                           ;	Chosen strategy is simple_byte
  1657   002A36  5197               	movf	(??_lcd_4bit_send_set_cursor+1)& (0+255),w,b
  1658   002A38  0A00               	xorlw	0	; case 0
  1659   002A3A  B4D8               	btfsc	status,2,c
  1660   002A3C  EF22  F015         	goto	l8827
  1661   002A40  EF35  F015         	goto	l202
  1662   002A44                     l8827:
  1663                           
  1664                           ; BSR set to: 0
  1665                           ; Switch size 1, requested type "simple"
  1666                           ; Number of cases is 4, Range of values is 1 to 4
  1667                           ; switch strategies available:
  1668                           ; Name         Instructions Cycles
  1669                           ; simple_byte           13     7 (average)
  1670                           ;	Chosen strategy is simple_byte
  1671   002A44  5196               	movf	??_lcd_4bit_send_set_cursor& (0+255),w,b
  1672   002A46  0A01               	xorlw	1	; case 1
  1673   002A48  B4D8               	btfsc	status,2,c
  1674   002A4A  EFEC  F014         	goto	l7805
  1675   002A4E  0A03               	xorlw	3	; case 2
  1676   002A50  B4D8               	btfsc	status,2,c
  1677   002A52  EFF7  F014         	goto	l7807
  1678   002A56  0A01               	xorlw	1	; case 3
  1679   002A58  B4D8               	btfsc	status,2,c
  1680   002A5A  EF02  F015         	goto	l7809
  1681   002A5E  0A07               	xorlw	7	; case 4
  1682   002A60  B4D8               	btfsc	status,2,c
  1683   002A62  EF0D  F015         	goto	l7811
  1684   002A66  EF35  F015         	goto	l202
  1685   002A6A                     l202:
  1686   002A6A  0012               	return		;funcret
  1687   002A6C                     __end_of_lcd_4bit_send_set_cursor:
  1688                           	callstack 0
  1689                           
  1690 ;; *************** function _lcd_4bit_char_string *****************
  1691 ;; Defined at:
  1692 ;;		line 124 in file "ECU_layer/Chr_LCD/ecu_chr_lcd.c"
  1693 ;; Parameters:    Size  Location     Type
  1694 ;;  lcd             2   18[BANK0 ] PTR const struct .
  1695 ;;		 -> lcd1(6), 
  1696 ;;  str             2   20[BANK0 ] PTR unsigned char 
  1697 ;;		 -> adcres2txt(6), adcres1txt(6), STR_7(10), STR_6(10), 
  1698 ;;		 -> STR_5(14), STR_4(13), 
  1699 ;; Auto vars:     Size  Location     Type
  1700 ;;  ret             1   22[BANK0 ] unsigned char 
  1701 ;; Return value:  Size  Location     Type
  1702 ;;                  1    wreg      unsigned char 
  1703 ;; Registers used:
  1704 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1705 ;; Tracked objects:
  1706 ;;		On entry : 0/0
  1707 ;;		On exit  : 0/0
  1708 ;;		Unchanged: 0/0
  1709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1710 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1711 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1713 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1714 ;;Total ram usage:        5 bytes
  1715 ;; Hardware stack levels used: 1
  1716 ;; Hardware stack levels required when called: 7
  1717 ;; This function calls:
  1718 ;;		_lcd_4bit_char_data
  1719 ;; This function is called by:
  1720 ;;		_lcd_4bit_char_string_pos
  1721 ;; This function uses a non-reentrant model
  1722 ;;
  1723                           
  1724                           	psect	text3
  1725   002C82                     __ptext3:
  1726                           	callstack 0
  1727   002C82                     _lcd_4bit_char_string:
  1728                           	callstack 22
  1729   002C82                     
  1730                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 125: uint8 ret =(Std_ReturnType)0x01;
  1731   002C82  0E01               	movlw	1
  1732   002C84  0100               	movlb	0	; () banked
  1733   002C86  6F96               	movwf	lcd_4bit_char_string@ret& (0+255),b
  1734   002C88                     
  1735                           ; BSR set to: 0
  1736                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 126:     if( ((void*)0) == lcd){
  1737   002C88  5192               	movf	lcd_4bit_char_string@lcd& (0+255),w,b
  1738   002C8A  1193               	iorwf	(lcd_4bit_char_string@lcd+1)& (0+255),w,b
  1739   002C8C  A4D8               	btfss	status,2,c
  1740   002C8E  EF4B  F016         	goto	u7501
  1741   002C92  EF4D  F016         	goto	u7500
  1742   002C96                     u7501:
  1743   002C96  EF6E  F016         	goto	l7829
  1744   002C9A                     u7500:
  1745   002C9A                     
  1746                           ; BSR set to: 0
  1747                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 127:         ret=(Std_ReturnType)0x00;
  1748   002C9A  0E00               	movlw	0
  1749   002C9C  6F96               	movwf	lcd_4bit_char_string@ret& (0+255),b
  1750                           
  1751                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 128:     }
  1752   002C9E  EF87  F016         	goto	l7831
  1753   002CA2                     l7825:
  1754                           
  1755                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 131:             ret = lcd_4bit_char_data(lcd,*str++);
  1756   002CA2  C092  F08E         	movff	lcd_4bit_char_string@lcd,lcd_4bit_char_data@lcd
  1757   002CA6  C093  F08F         	movff	lcd_4bit_char_string@lcd+1,lcd_4bit_char_data@lcd+1
  1758   002CAA  C094  FFF6         	movff	lcd_4bit_char_string@str,tblptrl
  1759   002CAE  C095  FFF7         	movff	lcd_4bit_char_string@str+1,tblptrh
  1760   002CB2  0E00               	movlw	low (__smallconst shr (0+16))
  1761   002CB4  6EF8               	movwf	tblptru,c
  1762   002CB6  0E0F               	movlw	(high __ramtop+-1)
  1763   002CB8  64F7               	cpfsgt	tblptrh,c
  1764   002CBA  D003               	bra	u7517
  1765   002CBC  0008               	tblrd		*
  1766   002CBE  50F5               	movf	tablat,w,c
  1767   002CC0  D005               	bra	u7510
  1768   002CC2                     u7517:
  1769   002CC2  CFF6 FFE9          	movff	tblptrl,fsr0l
  1770   002CC6  CFF7 FFEA          	movff	tblptrh,fsr0h
  1771   002CCA  50EF               	movf	indf0,w,c
  1772   002CCC                     u7510:
  1773   002CCC  0100               	movlb	0	; () banked
  1774   002CCE  6F90               	movwf	lcd_4bit_char_data@data& (0+255),b
  1775   002CD0  EC1A  F017         	call	_lcd_4bit_char_data	;wreg free
  1776   002CD4  0100               	movlb	0	; () banked
  1777   002CD6  6F96               	movwf	lcd_4bit_char_string@ret& (0+255),b
  1778   002CD8                     
  1779                           ; BSR set to: 0
  1780   002CD8  4B94               	infsnz	lcd_4bit_char_string@str& (0+255),f,b
  1781   002CDA  2B95               	incf	(lcd_4bit_char_string@str+1)& (0+255),f,b
  1782   002CDC                     l7829:
  1783                           
  1784                           ; BSR set to: 0
  1785                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 130:     while(*str){
  1786   002CDC  C094  FFF6         	movff	lcd_4bit_char_string@str,tblptrl
  1787   002CE0  C095  FFF7         	movff	lcd_4bit_char_string@str+1,tblptrh
  1788   002CE4  0E00               	movlw	low (__smallconst shr (0+16))
  1789   002CE6  6EF8               	movwf	tblptru,c
  1790   002CE8  0E0F               	movlw	(high __ramtop+-1)
  1791   002CEA  64F7               	cpfsgt	tblptrh,c
  1792   002CEC  D003               	bra	u7527
  1793   002CEE  0008               	tblrd		*
  1794   002CF0  50F5               	movf	tablat,w,c
  1795   002CF2  D005               	bra	u7520
  1796   002CF4                     u7527:
  1797   002CF4  CFF6 FFE9          	movff	tblptrl,fsr0l
  1798   002CF8  CFF7 FFEA          	movff	tblptrh,fsr0h
  1799   002CFC  50EF               	movf	indf0,w,c
  1800   002CFE                     u7520:
  1801   002CFE  0900               	iorlw	0
  1802   002D00  A4D8               	btfss	status,2,c
  1803   002D02  EF85  F016         	goto	u7531
  1804   002D06  EF87  F016         	goto	u7530
  1805   002D0A                     u7531:
  1806   002D0A  EF51  F016         	goto	l7825
  1807   002D0E                     u7530:
  1808   002D0E                     l7831:
  1809                           
  1810                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 134:     return ret;
  1811   002D0E  0100               	movlb	0	; () banked
  1812   002D10  5196               	movf	lcd_4bit_char_string@ret& (0+255),w,b
  1813   002D12                     
  1814                           ; BSR set to: 0
  1815   002D12  0012               	return		;funcret
  1816   002D14                     __end_of_lcd_4bit_char_string:
  1817                           	callstack 0
  1818                           
  1819 ;; *************** function _lcd_4bit_char_data *****************
  1820 ;; Defined at:
  1821 ;;		line 81 in file "ECU_layer/Chr_LCD/ecu_chr_lcd.c"
  1822 ;; Parameters:    Size  Location     Type
  1823 ;;  lcd             2   14[BANK0 ] PTR const struct .
  1824 ;;		 -> lcd1(6), 
  1825 ;;  data            1   16[BANK0 ] unsigned char 
  1826 ;; Auto vars:     Size  Location     Type
  1827 ;;  ret             1   17[BANK0 ] unsigned char 
  1828 ;; Return value:  Size  Location     Type
  1829 ;;                  1    wreg      unsigned char 
  1830 ;; Registers used:
  1831 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1832 ;; Tracked objects:
  1833 ;;		On entry : 0/0
  1834 ;;		On exit  : 0/0
  1835 ;;		Unchanged: 0/0
  1836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1837 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1838 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1840 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1841 ;;Total ram usage:        4 bytes
  1842 ;; Hardware stack levels used: 1
  1843 ;; Hardware stack levels required when called: 6
  1844 ;; This function calls:
  1845 ;;		_gpio_pin_write_logic
  1846 ;;		_lcd_4bit_send_enable_signal
  1847 ;;		_send_4bits
  1848 ;; This function is called by:
  1849 ;;		_lcd_4bit_char_string
  1850 ;;		_lcd_4bit_char_data_pos
  1851 ;;		_lcd_4bit_send_custom_char
  1852 ;; This function uses a non-reentrant model
  1853 ;;
  1854                           
  1855                           	psect	text4
  1856   002E34                     __ptext4:
  1857                           	callstack 0
  1858   002E34                     _lcd_4bit_char_data:
  1859                           	callstack 22
  1860   002E34                     
  1861                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 83:     if( ((void*)0) == lcd){
  1862   002E34  0100               	movlb	0	; () banked
  1863   002E36  518E               	movf	lcd_4bit_char_data@lcd& (0+255),w,b
  1864   002E38  118F               	iorwf	(lcd_4bit_char_data@lcd+1)& (0+255),w,b
  1865   002E3A  A4D8               	btfss	status,2,c
  1866   002E3C  EF22  F017         	goto	u7451
  1867   002E40  EF24  F017         	goto	u7450
  1868   002E44                     u7451:
  1869   002E44  EF28  F017         	goto	l7701
  1870   002E48                     u7450:
  1871   002E48                     
  1872                           ; BSR set to: 0
  1873                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 84:         ret=(Std_ReturnType)0x00;
  1874   002E48  0E00               	movlw	0
  1875   002E4A  6F91               	movwf	lcd_4bit_char_data@ret& (0+255),b
  1876                           
  1877                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 85:     }
  1878   002E4C  EF57  F017         	goto	l7703
  1879   002E50                     l7701:
  1880                           
  1881                           ; BSR set to: 0
  1882                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 87:     ret = gpio_pin_write_logic(&(lcd->lcd_rs),GPIO
      +                          _HIGH);
  1883   002E50  C08E  F080         	movff	lcd_4bit_char_data@lcd,gpio_pin_write_logic@_pin_config
  1884   002E54  C08F  F081         	movff	lcd_4bit_char_data@lcd+1,gpio_pin_write_logic@_pin_config+1
  1885   002E58  0E01               	movlw	1
  1886   002E5A  6F82               	movwf	gpio_pin_write_logic@logic& (0+255),b
  1887   002E5C  EC7F  F011         	call	_gpio_pin_write_logic	;wreg free
  1888   002E60  0100               	movlb	0	; () banked
  1889   002E62  6F91               	movwf	lcd_4bit_char_data@ret& (0+255),b
  1890                           
  1891                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 88:     ret = send_4bits(lcd,data >> 4);
  1892   002E64  C08E  F08A         	movff	lcd_4bit_char_data@lcd,send_4bits@lcd
  1893   002E68  C08F  F08B         	movff	lcd_4bit_char_data@lcd+1,send_4bits@lcd+1
  1894   002E6C  3990               	swapf	lcd_4bit_char_data@data& (0+255),w,b
  1895   002E6E  0B0F               	andlw	15
  1896   002E70  6F8C               	movwf	send_4bits@command& (0+255),b
  1897   002E72  EC8A  F016         	call	_send_4bits	;wreg free
  1898   002E76  0100               	movlb	0	; () banked
  1899   002E78  6F91               	movwf	lcd_4bit_char_data@ret& (0+255),b
  1900                           
  1901                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 89:     ret =lcd_4bit_send_enable_signal(lcd);
  1902   002E7A  C08E  F08A         	movff	lcd_4bit_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  1903   002E7E  C08F  F08B         	movff	lcd_4bit_char_data@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  1904   002E82  EC8E  F019         	call	_lcd_4bit_send_enable_signal	;wreg free
  1905   002E86  0100               	movlb	0	; () banked
  1906   002E88  6F91               	movwf	lcd_4bit_char_data@ret& (0+255),b
  1907                           
  1908                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 90:     ret = send_4bits(lcd,data);
  1909   002E8A  C08E  F08A         	movff	lcd_4bit_char_data@lcd,send_4bits@lcd
  1910   002E8E  C08F  F08B         	movff	lcd_4bit_char_data@lcd+1,send_4bits@lcd+1
  1911   002E92  C090  F08C         	movff	lcd_4bit_char_data@data,send_4bits@command
  1912   002E96  EC8A  F016         	call	_send_4bits	;wreg free
  1913   002E9A  0100               	movlb	0	; () banked
  1914   002E9C  6F91               	movwf	lcd_4bit_char_data@ret& (0+255),b
  1915                           
  1916                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 91:     ret =lcd_4bit_send_enable_signal(lcd);
  1917   002E9E  C08E  F08A         	movff	lcd_4bit_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  1918   002EA2  C08F  F08B         	movff	lcd_4bit_char_data@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  1919   002EA6  EC8E  F019         	call	_lcd_4bit_send_enable_signal	;wreg free
  1920   002EAA  0100               	movlb	0	; () banked
  1921   002EAC  6F91               	movwf	lcd_4bit_char_data@ret& (0+255),b
  1922   002EAE                     l7703:
  1923                           
  1924                           ; BSR set to: 0
  1925                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 93:     return ret;
  1926   002EAE  5191               	movf	lcd_4bit_char_data@ret& (0+255),w,b
  1927   002EB0                     
  1928                           ; BSR set to: 0
  1929   002EB0  0012               	return		;funcret
  1930   002EB2                     __end_of_lcd_4bit_char_data:
  1931                           	callstack 0
  1932                           
  1933 ;; *************** function _dc_motor_turn_left *****************
  1934 ;; Defined at:
  1935 ;;		line 42 in file "ECU_layer/DC_Motor/ecu_dc_motor.c"
  1936 ;; Parameters:    Size  Location     Type
  1937 ;;  _dc_motor       2   10[BANK0 ] PTR const struct .
  1938 ;;		 -> motor2(2), motor1(2), 
  1939 ;; Auto vars:     Size  Location     Type
  1940 ;;  ret             1   12[BANK0 ] unsigned char 
  1941 ;; Return value:  Size  Location     Type
  1942 ;;                  1    wreg      unsigned char 
  1943 ;; Registers used:
  1944 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1945 ;; Tracked objects:
  1946 ;;		On entry : 0/0
  1947 ;;		On exit  : 0/0
  1948 ;;		Unchanged: 0/0
  1949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1950 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1951 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1953 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1954 ;;Total ram usage:        3 bytes
  1955 ;; Hardware stack levels used: 1
  1956 ;; Hardware stack levels required when called: 5
  1957 ;; This function calls:
  1958 ;;		_gpio_pin_write_logic
  1959 ;; This function is called by:
  1960 ;;		_main
  1961 ;; This function uses a non-reentrant model
  1962 ;;
  1963                           
  1964                           	psect	text5
  1965   003114                     __ptext5:
  1966                           	callstack 0
  1967   003114                     _dc_motor_turn_left:
  1968                           	callstack 25
  1969   003114                     
  1970                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 44:     if( ((void*)0) == _dc_motor){
  1971   003114  0100               	movlb	0	; () banked
  1972   003116  518A               	movf	dc_motor_turn_left@_dc_motor& (0+255),w,b
  1973   003118  118B               	iorwf	(dc_motor_turn_left@_dc_motor+1)& (0+255),w,b
  1974   00311A  A4D8               	btfss	status,2,c
  1975   00311C  EF92  F018         	goto	u7811
  1976   003120  EF94  F018         	goto	u7810
  1977   003124                     u7811:
  1978   003124  EF96  F018         	goto	l8093
  1979   003128                     u7810:
  1980   003128                     
  1981                           ; BSR set to: 0
  1982                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 46:     }
  1983   003128  EFAC  F018         	goto	l220
  1984   00312C                     l8093:
  1985                           
  1986                           ; BSR set to: 0
  1987                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 48:         ret=gpio_pin_write_logic(&(_dc_motor->dc
      +                          _motor_pin[0]),GPIO_HIGH);
  1988   00312C  C08A  F080         	movff	dc_motor_turn_left@_dc_motor,gpio_pin_write_logic@_pin_config
  1989   003130  C08B  F081         	movff	dc_motor_turn_left@_dc_motor+1,gpio_pin_write_logic@_pin_config+1
  1990   003134  0E01               	movlw	1
  1991   003136  6F82               	movwf	gpio_pin_write_logic@logic& (0+255),b
  1992   003138  EC7F  F011         	call	_gpio_pin_write_logic	;wreg free
  1993   00313C  0100               	movlb	0	; () banked
  1994   00313E  6F8C               	movwf	dc_motor_turn_left@ret& (0+255),b
  1995                           
  1996                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 49:         ret=gpio_pin_write_logic(&(_dc_motor->dc
      +                          _motor_pin[1]),GPIO_LOW);
  1997   003140  0E01               	movlw	1
  1998   003142  258A               	addwf	dc_motor_turn_left@_dc_motor& (0+255),w,b
  1999   003144  6F80               	movwf	gpio_pin_write_logic@_pin_config& (0+255),b
  2000   003146  0E00               	movlw	0
  2001   003148  218B               	addwfc	(dc_motor_turn_left@_dc_motor+1)& (0+255),w,b
  2002   00314A  6F81               	movwf	(gpio_pin_write_logic@_pin_config+1)& (0+255),b
  2003   00314C  0E00               	movlw	0
  2004   00314E  6F82               	movwf	gpio_pin_write_logic@logic& (0+255),b
  2005   003150  EC7F  F011         	call	_gpio_pin_write_logic	;wreg free
  2006   003154  0100               	movlb	0	; () banked
  2007   003156  6F8C               	movwf	dc_motor_turn_left@ret& (0+255),b
  2008   003158                     l220:
  2009                           
  2010                           ; BSR set to: 0
  2011   003158  0012               	return		;funcret
  2012   00315A                     __end_of_dc_motor_turn_left:
  2013                           	callstack 0
  2014                           
  2015 ;; *************** function _dc_motor_stop *****************
  2016 ;; Defined at:
  2017 ;;		line 80 in file "ECU_layer/DC_Motor/ecu_dc_motor.c"
  2018 ;; Parameters:    Size  Location     Type
  2019 ;;  _dc_motor       2   10[BANK0 ] PTR const struct .
  2020 ;;		 -> motor2(2), motor1(2), 
  2021 ;; Auto vars:     Size  Location     Type
  2022 ;;  ret             1   12[BANK0 ] unsigned char 
  2023 ;; Return value:  Size  Location     Type
  2024 ;;                  1    wreg      unsigned char 
  2025 ;; Registers used:
  2026 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2027 ;; Tracked objects:
  2028 ;;		On entry : 0/0
  2029 ;;		On exit  : 0/0
  2030 ;;		Unchanged: 0/0
  2031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2032 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2033 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2035 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2036 ;;Total ram usage:        3 bytes
  2037 ;; Hardware stack levels used: 1
  2038 ;; Hardware stack levels required when called: 5
  2039 ;; This function calls:
  2040 ;;		_gpio_pin_write_logic
  2041 ;; This function is called by:
  2042 ;;		_main
  2043 ;; This function uses a non-reentrant model
  2044 ;;
  2045                           
  2046                           	psect	text6
  2047   00315A                     __ptext6:
  2048                           	callstack 0
  2049   00315A                     _dc_motor_stop:
  2050                           	callstack 25
  2051   00315A                     
  2052                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 82:     if( ((void*)0) == _dc_motor){
  2053   00315A  0100               	movlb	0	; () banked
  2054   00315C  518A               	movf	dc_motor_stop@_dc_motor& (0+255),w,b
  2055   00315E  118B               	iorwf	(dc_motor_stop@_dc_motor+1)& (0+255),w,b
  2056   003160  A4D8               	btfss	status,2,c
  2057   003162  EFB5  F018         	goto	u7821
  2058   003166  EFB7  F018         	goto	u7820
  2059   00316A                     u7821:
  2060   00316A  EFB9  F018         	goto	l8103
  2061   00316E                     u7820:
  2062   00316E                     
  2063                           ; BSR set to: 0
  2064                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 84:     }
  2065   00316E  EFCF  F018         	goto	l230
  2066   003172                     l8103:
  2067                           
  2068                           ; BSR set to: 0
  2069                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 87:         ret=gpio_pin_write_logic(&(_dc_motor->dc
      +                          _motor_pin[0]),GPIO_LOW);
  2070   003172  C08A  F080         	movff	dc_motor_stop@_dc_motor,gpio_pin_write_logic@_pin_config
  2071   003176  C08B  F081         	movff	dc_motor_stop@_dc_motor+1,gpio_pin_write_logic@_pin_config+1
  2072   00317A  0E00               	movlw	0
  2073   00317C  6F82               	movwf	gpio_pin_write_logic@logic& (0+255),b
  2074   00317E  EC7F  F011         	call	_gpio_pin_write_logic	;wreg free
  2075   003182  0100               	movlb	0	; () banked
  2076   003184  6F8C               	movwf	dc_motor_stop@ret& (0+255),b
  2077                           
  2078                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 88:         ret=gpio_pin_write_logic(&(_dc_motor->dc
      +                          _motor_pin[1]),GPIO_LOW);
  2079   003186  0E01               	movlw	1
  2080   003188  258A               	addwf	dc_motor_stop@_dc_motor& (0+255),w,b
  2081   00318A  6F80               	movwf	gpio_pin_write_logic@_pin_config& (0+255),b
  2082   00318C  0E00               	movlw	0
  2083   00318E  218B               	addwfc	(dc_motor_stop@_dc_motor+1)& (0+255),w,b
  2084   003190  6F81               	movwf	(gpio_pin_write_logic@_pin_config+1)& (0+255),b
  2085   003192  0E00               	movlw	0
  2086   003194  6F82               	movwf	gpio_pin_write_logic@logic& (0+255),b
  2087   003196  EC7F  F011         	call	_gpio_pin_write_logic	;wreg free
  2088   00319A  0100               	movlb	0	; () banked
  2089   00319C  6F8C               	movwf	dc_motor_stop@ret& (0+255),b
  2090   00319E                     l230:
  2091                           
  2092                           ; BSR set to: 0
  2093   00319E  0012               	return		;funcret
  2094   0031A0                     __end_of_dc_motor_stop:
  2095                           	callstack 0
  2096                           
  2097 ;; *************** function _convert_uint16_to_string *****************
  2098 ;; Defined at:
  2099 ;;		line 381 in file "ECU_layer/Chr_LCD/ecu_chr_lcd.c"
  2100 ;; Parameters:    Size  Location     Type
  2101 ;;  value           2   70[BANK0 ] unsigned short 
  2102 ;;  str             2   72[BANK0 ] PTR unsigned char 
  2103 ;;		 -> adcres2txt(6), adcres1txt(6), 
  2104 ;; Auto vars:     Size  Location     Type
  2105 ;;  Temp_String     6   74[BANK0 ] unsigned char [6]
  2106 ;;  DataCounter     1   80[BANK0 ] unsigned char 
  2107 ;;  ret             1    0        unsigned char 
  2108 ;; Return value:  Size  Location     Type
  2109 ;;                  1    wreg      unsigned char 
  2110 ;; Registers used:
  2111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2112 ;; Tracked objects:
  2113 ;;		On entry : 0/0
  2114 ;;		On exit  : 0/0
  2115 ;;		Unchanged: 0/0
  2116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2117 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2118 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2120 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2121 ;;Total ram usage:       11 bytes
  2122 ;; Hardware stack levels used: 1
  2123 ;; Hardware stack levels required when called: 12
  2124 ;; This function calls:
  2125 ;;		_memset
  2126 ;;		_sprintf
  2127 ;; This function is called by:
  2128 ;;		_main
  2129 ;; This function uses a non-reentrant model
  2130 ;;
  2131                           
  2132                           	psect	text7
  2133   002A6C                     __ptext7:
  2134                           	callstack 0
  2135   002A6C                     _convert_uint16_to_string:
  2136                           	callstack 18
  2137   002A6C                     
  2138                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 383: uint8 Temp_String[6]={0};
  2139   002A6C  EE20  F0CA         	lfsr	2,convert_uint16_to_string@Temp_String
  2140   002A70  0E05               	movlw	5
  2141   002A72                     u7781:
  2142   002A72  6ADE               	clrf	postinc2,c
  2143   002A74  06E8               	decf	wreg,f,c
  2144   002A76  E2FD               	bc	u7781
  2145   002A78                     
  2146                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 384: uint8 DataCounter = 0;
  2147   002A78  0E00               	movlw	0
  2148   002A7A  0100               	movlb	0	; () banked
  2149   002A7C  6FD0               	movwf	convert_uint16_to_string@DataCounter& (0+255),b
  2150   002A7E                     
  2151                           ; BSR set to: 0
  2152                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 385:     if( ((void*)0) == str){
  2153   002A7E  51C8               	movf	convert_uint16_to_string@str& (0+255),w,b
  2154   002A80  11C9               	iorwf	(convert_uint16_to_string@str+1)& (0+255),w,b
  2155   002A82  A4D8               	btfss	status,2,c
  2156   002A84  EF46  F015         	goto	u7791
  2157   002A88  EF48  F015         	goto	u7790
  2158   002A8C                     u7791:
  2159   002A8C  EF4A  F015         	goto	l8075
  2160   002A90                     u7790:
  2161   002A90                     
  2162                           ; BSR set to: 0
  2163                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 388:     }
  2164   002A90  EF8E  F015         	goto	l156
  2165   002A94                     l8075:
  2166                           
  2167                           ; BSR set to: 0
  2168                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 390:     memset(str,' ',5);
  2169   002A94  C0C8  F080         	movff	convert_uint16_to_string@str,memset@dest
  2170   002A98  C0C9  F081         	movff	convert_uint16_to_string@str+1,memset@dest+1
  2171   002A9C  0E00               	movlw	0
  2172   002A9E  6F83               	movwf	(memset@c+1)& (0+255),b
  2173   002AA0  0E20               	movlw	32
  2174   002AA2  6F82               	movwf	memset@c& (0+255),b
  2175   002AA4  0E00               	movlw	0
  2176   002AA6  6F85               	movwf	(memset@n+1)& (0+255),b
  2177   002AA8  0E05               	movlw	5
  2178   002AAA  6F84               	movwf	memset@n& (0+255),b
  2179   002AAC  ECE2  F00E         	call	_memset	;wreg free
  2180   002AB0                     
  2181                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 391:     str[5] = '\0';
  2182   002AB0  0100               	movlb	0	; () banked
  2183   002AB2  EE20 F005          	lfsr	2,5
  2184   002AB6  51C8               	movf	convert_uint16_to_string@str& (0+255),w,b
  2185   002AB8  26D9               	addwf	fsr2l,f,c
  2186   002ABA  51C9               	movf	(convert_uint16_to_string@str+1)& (0+255),w,b
  2187   002ABC  22DA               	addwfc	fsr2h,f,c
  2188   002ABE  6ADF               	clrf	indf2,c
  2189   002AC0                     
  2190                           ; BSR set to: 0
  2191                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 392:     sprintf((char *)Temp_String,"%i",value);
  2192   002AC0  0ECA               	movlw	low convert_uint16_to_string@Temp_String
  2193   002AC2  6FBE               	movwf	sprintf@s& (0+255),b
  2194   002AC4  0E00               	movlw	high convert_uint16_to_string@Temp_String
  2195   002AC6  6FBF               	movwf	(sprintf@s+1)& (0+255),b
  2196   002AC8  0E40               	movlw	low STR_1
  2197   002ACA  6FC0               	movwf	sprintf@fmt& (0+255),b
  2198   002ACC  0E10               	movlw	high STR_1
  2199   002ACE  6FC1               	movwf	(sprintf@fmt+1)& (0+255),b
  2200   002AD0  C0C6  F0C2         	movff	convert_uint16_to_string@value,?_sprintf+4
  2201   002AD4  C0C7  F0C3         	movff	convert_uint16_to_string@value+1,?_sprintf+5
  2202   002AD8  EC10  F018         	call	_sprintf	;wreg free
  2203                           
  2204                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 393:     while(Temp_String[DataCounter]){
  2205   002ADC  EF7F  F015         	goto	l8085
  2206   002AE0                     l8081:
  2207                           
  2208                           ; BSR set to: 0
  2209                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 394:         str[DataCounter] = Temp_String[DataCounte
      +                          r];
  2210   002AE0  0ECA               	movlw	low convert_uint16_to_string@Temp_String
  2211   002AE2  25D0               	addwf	convert_uint16_to_string@DataCounter& (0+255),w,b
  2212   002AE4  6ED9               	movwf	fsr2l,c
  2213   002AE6  6ADA               	clrf	fsr2h,c
  2214   002AE8  0E00               	movlw	high convert_uint16_to_string@Temp_String
  2215   002AEA  22DA               	addwfc	fsr2h,f,c
  2216   002AEC  51D0               	movf	convert_uint16_to_string@DataCounter& (0+255),w,b
  2217   002AEE  25C8               	addwf	convert_uint16_to_string@str& (0+255),w,b
  2218   002AF0  6EE1               	movwf	fsr1l,c
  2219   002AF2  0E00               	movlw	0
  2220   002AF4  21C9               	addwfc	(convert_uint16_to_string@str+1)& (0+255),w,b
  2221   002AF6  6EE2               	movwf	fsr1h,c
  2222   002AF8  CFDF FFE7          	movff	indf2,indf1
  2223   002AFC                     
  2224                           ; BSR set to: 0
  2225                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 395:         DataCounter++;
  2226   002AFC  2BD0               	incf	convert_uint16_to_string@DataCounter& (0+255),f,b
  2227   002AFE                     l8085:
  2228                           
  2229                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 393:     while(Temp_String[DataCounter]){
  2230   002AFE  0ECA               	movlw	low convert_uint16_to_string@Temp_String
  2231   002B00  0100               	movlb	0	; () banked
  2232   002B02  25D0               	addwf	convert_uint16_to_string@DataCounter& (0+255),w,b
  2233   002B04  6ED9               	movwf	fsr2l,c
  2234   002B06  6ADA               	clrf	fsr2h,c
  2235   002B08  0E00               	movlw	high convert_uint16_to_string@Temp_String
  2236   002B0A  22DA               	addwfc	fsr2h,f,c
  2237   002B0C  50DF               	movf	indf2,w,c
  2238   002B0E  A4D8               	btfss	status,2,c
  2239   002B10  EF8C  F015         	goto	u7801
  2240   002B14  EF8E  F015         	goto	u7800
  2241   002B18                     u7801:
  2242   002B18  EF70  F015         	goto	l8081
  2243   002B1C                     u7800:
  2244   002B1C                     l156:
  2245                           
  2246                           ; BSR set to: 0
  2247   002B1C  0012               	return		;funcret
  2248   002B1E                     __end_of_convert_uint16_to_string:
  2249                           	callstack 0
  2250                           
  2251 ;; *************** function _sprintf *****************
  2252 ;; Defined at:
  2253 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;  s               2   62[BANK0 ] PTR unsigned char 
  2256 ;;		 -> convert_uint32_to_string@Temp_String(12), convert_uint16_to_string@Temp_String(6), convert_uint8_to_string@Temp_
      +String(4), 
  2257 ;;  fmt             2   64[BANK0 ] PTR const unsigned char 
  2258 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2259 ;; Auto vars:     Size  Location     Type
  2260 ;;  f              12    2[BANK1 ] struct _IO_FILE
  2261 ;;  ap              2    0[BANK1 ] PTR void [1]
  2262 ;;		 -> ?_sprintf(2), 
  2263 ;;  ret             2    0        int 
  2264 ;; Return value:  Size  Location     Type
  2265 ;;                  2   62[BANK0 ] int 
  2266 ;; Registers used:
  2267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2268 ;; Tracked objects:
  2269 ;;		On entry : 0/0
  2270 ;;		On exit  : 0/0
  2271 ;;		Unchanged: 0/0
  2272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2273 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2274 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2276 ;;      Totals:         0       8      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2277 ;;Total ram usage:       22 bytes
  2278 ;; Hardware stack levels used: 1
  2279 ;; Hardware stack levels required when called: 11
  2280 ;; This function calls:
  2281 ;;		_vfprintf
  2282 ;; This function is called by:
  2283 ;;		_convert_uint16_to_string
  2284 ;;		_convert_uint8_to_string
  2285 ;;		_convert_uint32_to_string
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           
  2289                           	psect	text8
  2290   003020                     __ptext8:
  2291                           	callstack 0
  2292   003020                     _sprintf:
  2293                           	callstack 18
  2294   003020  0EC2               	movlw	low (?_sprintf+4)
  2295   003022  0101               	movlb	1	; () banked
  2296   003024  6F5A               	movwf	sprintf@ap& (0+255),b
  2297   003026  0E00               	movlw	high (?_sprintf+4)
  2298   003028  6F5B               	movwf	(sprintf@ap+1)& (0+255),b
  2299   00302A  C0BE  F15C         	movff	sprintf@s,sprintf@f
  2300   00302E  C0BF  F15D         	movff	sprintf@s+1,sprintf@f+1
  2301   003032                     
  2302                           ; BSR set to: 1
  2303   003032  0E00               	movlw	0
  2304   003034  6F60               	movwf	(sprintf@f+4)& (0+255),b
  2305   003036  0E00               	movlw	0
  2306   003038  6F5F               	movwf	(sprintf@f+3)& (0+255),b
  2307   00303A                     
  2308                           ; BSR set to: 1
  2309   00303A  0E00               	movlw	0
  2310   00303C  6F67               	movwf	(sprintf@f+11)& (0+255),b
  2311   00303E  0E00               	movlw	0
  2312   003040  6F66               	movwf	(sprintf@f+10)& (0+255),b
  2313   003042                     
  2314                           ; BSR set to: 1
  2315   003042  0E5C               	movlw	low sprintf@f
  2316   003044  0100               	movlb	0	; () banked
  2317   003046  6FB6               	movwf	vfprintf@fp& (0+255),b
  2318   003048  0E01               	movlw	high sprintf@f
  2319   00304A  6FB7               	movwf	(vfprintf@fp+1)& (0+255),b
  2320   00304C  C0C0  F0B8         	movff	sprintf@fmt,vfprintf@fmt
  2321   003050  C0C1  F0B9         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2322   003054  0E5A               	movlw	low sprintf@ap
  2323   003056  6FBA               	movwf	vfprintf@ap& (0+255),b
  2324   003058  0E01               	movlw	high sprintf@ap
  2325   00305A  6FBB               	movwf	(vfprintf@ap+1)& (0+255),b
  2326   00305C  EC3C  F018         	call	_vfprintf	;wreg free
  2327   003060  0101               	movlb	1	; () banked
  2328   003062  515F               	movf	(sprintf@f+3)& (0+255),w,b
  2329   003064  0100               	movlb	0	; () banked
  2330   003066  25BE               	addwf	sprintf@s& (0+255),w,b
  2331   003068  6ED9               	movwf	fsr2l,c
  2332   00306A  0101               	movlb	1	; () banked
  2333   00306C  5160               	movf	(sprintf@f+4)& (0+255),w,b
  2334   00306E  0100               	movlb	0	; () banked
  2335   003070  21BF               	addwfc	(sprintf@s+1)& (0+255),w,b
  2336   003072  6EDA               	movwf	fsr2h,c
  2337   003074  6ADF               	clrf	indf2,c
  2338   003076                     
  2339                           ; BSR set to: 0
  2340   003076  0012               	return		;funcret
  2341   003078                     __end_of_sprintf:
  2342                           	callstack 0
  2343                           
  2344 ;; *************** function _vfprintf *****************
  2345 ;; Defined at:
  2346 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2347 ;; Parameters:    Size  Location     Type
  2348 ;;  fp              2   54[BANK0 ] PTR struct _IO_FILE
  2349 ;;		 -> sprintf@f(12), 
  2350 ;;  fmt             2   56[BANK0 ] PTR const unsigned char 
  2351 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2352 ;;  ap              2   58[BANK0 ] PTR PTR void 
  2353 ;;		 -> sprintf@ap(2), 
  2354 ;; Auto vars:     Size  Location     Type
  2355 ;;  cfmt            2   60[BANK0 ] PTR unsigned char 
  2356 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2357 ;; Return value:  Size  Location     Type
  2358 ;;                  2   54[BANK0 ] int 
  2359 ;; Registers used:
  2360 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2361 ;; Tracked objects:
  2362 ;;		On entry : 0/0
  2363 ;;		On exit  : 0/0
  2364 ;;		Unchanged: 0/0
  2365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2366 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2367 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2369 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2370 ;;Total ram usage:        8 bytes
  2371 ;; Hardware stack levels used: 1
  2372 ;; Hardware stack levels required when called: 10
  2373 ;; This function calls:
  2374 ;;		_vfpfcnvrt
  2375 ;; This function is called by:
  2376 ;;		_sprintf
  2377 ;; This function uses a non-reentrant model
  2378 ;;
  2379                           
  2380                           	psect	text9
  2381   003078                     __ptext9:
  2382                           	callstack 0
  2383   003078                     _vfprintf:
  2384                           	callstack 18
  2385   003078                     
  2386                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  2387   003078  C0B8  F0BC         	movff	vfprintf@fmt,vfprintf@cfmt
  2388   00307C  C0B9  F0BD         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2389                           
  2390                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2391   003080  EF51  F018         	goto	l7747
  2392   003084                     l7745:
  2393                           
  2394                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2395   003084  C0B6  F0A8         	movff	vfprintf@fp,vfpfcnvrt@fp
  2396   003088  C0B7  F0A9         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2397   00308C  0EBC               	movlw	low vfprintf@cfmt
  2398   00308E  0100               	movlb	0	; () banked
  2399   003090  6FAA               	movwf	vfpfcnvrt@fmt& (0+255),b
  2400   003092  0E00               	movlw	high vfprintf@cfmt
  2401   003094  6FAB               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2402   003096  C0BA  F0AC         	movff	vfprintf@ap,vfpfcnvrt@ap
  2403   00309A  C0BB  F0AD         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2404   00309E  EC18  F012         	call	_vfpfcnvrt	;wreg free
  2405   0030A2                     l7747:
  2406                           
  2407                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2408   0030A2  C0BC  FFF6         	movff	vfprintf@cfmt,tblptrl
  2409   0030A6  C0BD  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2410   0030AA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2411   0030AA  6AF8               	clrf	tblptru,c
  2412   0030AC                     	endif
  2413   0030AC                     	if	0	;tblptru may be non-zero
  2414   0030AC                     	endif
  2415   0030AC  0008               	tblrd		*
  2416   0030AE  50F5               	movf	tablat,w,c
  2417   0030B0  0900               	iorlw	0
  2418   0030B2  A4D8               	btfss	status,2,c
  2419   0030B4  EF5E  F018         	goto	u7461
  2420   0030B8  EF60  F018         	goto	u7460
  2421   0030BC                     u7461:
  2422   0030BC  EF42  F018         	goto	l7745
  2423   0030C0                     u7460:
  2424   0030C0                     
  2425                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  2426   0030C0  0E00               	movlw	0
  2427   0030C2  0100               	movlb	0	; () banked
  2428   0030C4  6FB7               	movwf	(?_vfprintf+1)& (0+255),b
  2429   0030C6  0E00               	movlw	0
  2430   0030C8  6FB6               	movwf	?_vfprintf& (0+255),b
  2431   0030CA                     
  2432                           ; BSR set to: 0
  2433   0030CA  0012               	return		;funcret
  2434   0030CC                     __end_of_vfprintf:
  2435                           	callstack 0
  2436                           
  2437 ;; *************** function _vfpfcnvrt *****************
  2438 ;; Defined at:
  2439 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2440 ;; Parameters:    Size  Location     Type
  2441 ;;  fp              2   40[BANK0 ] PTR struct _IO_FILE
  2442 ;;		 -> sprintf@f(12), 
  2443 ;;  fmt             2   42[BANK0 ] PTR PTR unsigned char 
  2444 ;;		 -> vfprintf@cfmt(2), 
  2445 ;;  ap              2   44[BANK0 ] PTR PTR void 
  2446 ;;		 -> sprintf@ap(2), 
  2447 ;; Auto vars:     Size  Location     Type
  2448 ;;  convarg         4   48[BANK0 ] struct .
  2449 ;;  cp              2   52[BANK0 ] PTR unsigned char 
  2450 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2451 ;;  i               2    0        int 
  2452 ;;  done            2    0        int 
  2453 ;;  c               1    0        unsigned char 
  2454 ;; Return value:  Size  Location     Type
  2455 ;;                  1    wreg      void 
  2456 ;; Registers used:
  2457 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2458 ;; Tracked objects:
  2459 ;;		On entry : 0/0
  2460 ;;		On exit  : 0/0
  2461 ;;		Unchanged: 0/0
  2462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2463 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2464 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2465 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2466 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2467 ;;Total ram usage:       14 bytes
  2468 ;; Hardware stack levels used: 1
  2469 ;; Hardware stack levels required when called: 9
  2470 ;; This function calls:
  2471 ;;		_dtoa
  2472 ;;		_fputc
  2473 ;; This function is called by:
  2474 ;;		_vfprintf
  2475 ;; This function uses a non-reentrant model
  2476 ;;
  2477                           
  2478                           	psect	text10
  2479   002430                     __ptext10:
  2480                           	callstack 0
  2481   002430                     _vfpfcnvrt:
  2482                           	callstack 18
  2483   002430                     
  2484                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  2485   002430  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2486   002434  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2487   002438  CFDE FFF6          	movff	postinc2,tblptrl
  2488   00243C  CFDD FFF7          	movff	postdec2,tblptrh
  2489   002440                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2490   002440  6AF8               	clrf	tblptru,c
  2491   002442                     	endif
  2492   002442                     	if	0	;tblptru may be non-zero
  2493   002442                     	endif
  2494   002442  0008               	tblrd		*
  2495   002444  50F5               	movf	tablat,w,c
  2496   002446  0A25               	xorlw	37
  2497   002448  A4D8               	btfss	status,2,c
  2498   00244A  EF29  F012         	goto	u7391
  2499   00244E  EF2B  F012         	goto	u7390
  2500   002452                     u7391:
  2501   002452  EF98  F012         	goto	l7663
  2502   002456                     u7390:
  2503   002456                     
  2504                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  2505   002456  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2506   00245A  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2507   00245E  2ADE               	incf	postinc2,f,c
  2508   002460  0E00               	movlw	0
  2509   002462  22DD               	addwfc	postdec2,f,c
  2510   002464                     
  2511                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  2512   002464  0E00               	movlw	0
  2513   002466  0100               	movlb	0	; () banked
  2514   002468  6FD6               	movwf	(_width+1)& (0+255),b
  2515   00246A  0E00               	movlw	0
  2516   00246C  6FD5               	movwf	_width& (0+255),b
  2517   00246E  C0D5  F0E5         	movff	_width,_flags
  2518   002472                     
  2519                           ; BSR set to: 0
  2520                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  2521   002472  69D7               	setf	_prec& (0+255),b
  2522   002474  69D8               	setf	(_prec+1)& (0+255),b
  2523   002476                     
  2524                           ; BSR set to: 0
  2525                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  2526   002476  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2527   00247A  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2528   00247E  CFDE F0B4          	movff	postinc2,vfpfcnvrt@cp
  2529   002482  CFDD F0B5          	movff	postdec2,vfpfcnvrt@cp+1
  2530   002486                     
  2531                           ; BSR set to: 0
  2532                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2533   002486  C0B4  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2534   00248A  C0B5  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2535   00248E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2536   00248E  6AF8               	clrf	tblptru,c
  2537   002490                     	endif
  2538   002490                     	if	0	;tblptru may be non-zero
  2539   002490                     	endif
  2540   002490  0008               	tblrd		*
  2541   002492  50F5               	movf	tablat,w,c
  2542   002494  0A64               	xorlw	100
  2543   002496  B4D8               	btfsc	status,2,c
  2544   002498  EF50  F012         	goto	u7401
  2545   00249C  EF52  F012         	goto	u7400
  2546   0024A0                     u7401:
  2547   0024A0  EF61  F012         	goto	l7653
  2548   0024A4                     u7400:
  2549   0024A4                     
  2550                           ; BSR set to: 0
  2551   0024A4  C0B4  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2552   0024A8  C0B5  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2553   0024AC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2554   0024AC  6AF8               	clrf	tblptru,c
  2555   0024AE                     	endif
  2556   0024AE                     	if	0	;tblptru may be non-zero
  2557   0024AE                     	endif
  2558   0024AE  0008               	tblrd		*
  2559   0024B0  50F5               	movf	tablat,w,c
  2560   0024B2  0A69               	xorlw	105
  2561   0024B4  A4D8               	btfss	status,2,c
  2562   0024B6  EF5F  F012         	goto	u7411
  2563   0024BA  EF61  F012         	goto	u7410
  2564   0024BE                     u7411:
  2565   0024BE  EF8F  F012         	goto	l7659
  2566   0024C2                     u7410:
  2567   0024C2                     l7653:
  2568                           
  2569                           ; BSR set to: 0
  2570                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1256:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2571   0024C2  C0AC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2572   0024C6  C0AD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2573   0024CA  CFDF F0AE          	movff	indf2,??_vfpfcnvrt
  2574   0024CE  0E02               	movlw	2
  2575   0024D0  26DE               	addwf	postinc2,f,c
  2576   0024D2  CFDF F0AF          	movff	indf2,??_vfpfcnvrt+1
  2577   0024D6  0E00               	movlw	0
  2578   0024D8  22DD               	addwfc	postdec2,f,c
  2579   0024DA  C0AE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2580   0024DE  C0AF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2581   0024E2  CFDE F0B0          	movff	postinc2,vfpfcnvrt@convarg
  2582   0024E6  CFDD F0B1          	movff	postdec2,vfpfcnvrt@convarg+1
  2583                           
  2584                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  2585   0024EA  0E01               	movlw	1
  2586   0024EC  25B4               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2587   0024EE  6FAE               	movwf	??_vfpfcnvrt& (0+255),b
  2588   0024F0  0E00               	movlw	0
  2589   0024F2  21B5               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2590   0024F4  6FAF               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2591   0024F6  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2592   0024FA  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2593   0024FE  C0AE  FFDE         	movff	??_vfpfcnvrt,postinc2
  2594   002502  C0AF  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2595   002506                     
  2596                           ; BSR set to: 0
  2597                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  2598   002506  C0A8  F09B         	movff	vfpfcnvrt@fp,dtoa@fp
  2599   00250A  C0A9  F09C         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2600   00250E  C0B0  F09D         	movff	vfpfcnvrt@convarg,dtoa@d
  2601   002512  C0B1  F09E         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2602   002516  EC15  F00E         	call	_dtoa	;wreg free
  2603   00251A  EFAE  F012         	goto	l2281
  2604   00251E                     l7659:
  2605                           
  2606                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  2607   00251E  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2608   002522  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2609   002526  2ADE               	incf	postinc2,f,c
  2610   002528  0E00               	movlw	0
  2611   00252A  22DD               	addwfc	postdec2,f,c
  2612   00252C  EFAE  F012         	goto	l2281
  2613   002530                     l7663:
  2614                           
  2615                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  2616   002530  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2617   002534  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2618   002538  CFDE FFF6          	movff	postinc2,tblptrl
  2619   00253C  CFDD FFF7          	movff	postdec2,tblptrh
  2620   002540                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2621   002540  6AF8               	clrf	tblptru,c
  2622   002542                     	endif
  2623   002542                     	if	0	;tblptru may be non-zero
  2624   002542                     	endif
  2625   002542  0008               	tblrd		*
  2626   002544  50F5               	movf	tablat,w,c
  2627   002546  0100               	movlb	0	; () banked
  2628   002548  6F80               	movwf	fputc@c& (0+255),b
  2629   00254A  6B81               	clrf	(fputc@c+1)& (0+255),b
  2630   00254C  C0A8  F082         	movff	vfpfcnvrt@fp,fputc@fp
  2631   002550  C0A9  F083         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2632   002554  ECB2  F013         	call	_fputc	;wreg free
  2633   002558  EF8F  F012         	goto	l7659
  2634   00255C                     l2281:
  2635   00255C  0012               	return		;funcret
  2636   00255E                     __end_of_vfpfcnvrt:
  2637                           	callstack 0
  2638                           
  2639 ;; *************** function _dtoa *****************
  2640 ;; Defined at:
  2641 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2642 ;; Parameters:    Size  Location     Type
  2643 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  2644 ;;		 -> sprintf@f(12), 
  2645 ;;  d               2   29[BANK0 ] int 
  2646 ;; Auto vars:     Size  Location     Type
  2647 ;;  i               2   38[BANK0 ] int 
  2648 ;;  w               2   35[BANK0 ] int 
  2649 ;;  p               2   33[BANK0 ] int 
  2650 ;;  s               1   37[BANK0 ] unsigned char 
  2651 ;; Return value:  Size  Location     Type
  2652 ;;                  1    wreg      void 
  2653 ;; Registers used:
  2654 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2655 ;; Tracked objects:
  2656 ;;		On entry : 0/0
  2657 ;;		On exit  : 0/0
  2658 ;;		Unchanged: 0/0
  2659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2660 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2661 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2663 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2664 ;;Total ram usage:       13 bytes
  2665 ;; Hardware stack levels used: 1
  2666 ;; Hardware stack levels required when called: 8
  2667 ;; This function calls:
  2668 ;;		___awdiv
  2669 ;;		___awmod
  2670 ;;		_abs
  2671 ;;		_pad
  2672 ;; This function is called by:
  2673 ;;		_vfpfcnvrt
  2674 ;; This function uses a non-reentrant model
  2675 ;;
  2676                           
  2677                           	psect	text11
  2678   001C2A                     __ptext11:
  2679                           	callstack 0
  2680   001C2A                     _dtoa:
  2681                           	callstack 18
  2682   001C2A                     
  2683                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
  2684   001C2A  0100               	movlb	0	; () banked
  2685   001C2C  BF9E               	btfsc	(dtoa@d+1)& (0+255),7,b
  2686   001C2E  EF1B  F00E         	goto	u7221
  2687   001C32  EF1E  F00E         	goto	u7220
  2688   001C36                     u7221:
  2689   001C36  0E01               	movlw	1
  2690   001C38  EF1F  F00E         	goto	u7230
  2691   001C3C                     u7220:
  2692   001C3C  0E00               	movlw	0
  2693   001C3E                     u7230:
  2694   001C3E  6FA5               	movwf	dtoa@s& (0+255),b
  2695   001C40                     
  2696                           ; BSR set to: 0
  2697                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  2698   001C40  51A5               	movf	dtoa@s& (0+255),w,b
  2699   001C42  B4D8               	btfsc	status,2,c
  2700   001C44  EF26  F00E         	goto	u7241
  2701   001C48  EF28  F00E         	goto	u7240
  2702   001C4C                     u7241:
  2703   001C4C  EF2C  F00E         	goto	l7549
  2704   001C50                     u7240:
  2705   001C50                     
  2706                           ; BSR set to: 0
  2707                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  2708   001C50  6D9D               	negf	dtoa@d& (0+255),b
  2709   001C52  1F9E               	comf	(dtoa@d+1)& (0+255),f,b
  2710   001C54  B0D8               	btfsc	status,0,c
  2711   001C56  2B9E               	incf	(dtoa@d+1)& (0+255),f,b
  2712   001C58                     l7549:
  2713                           
  2714                           ; BSR set to: 0
  2715                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  2716   001C58  BFD8               	btfsc	(_prec+1)& (0+255),7,b
  2717   001C5A  EF33  F00E         	goto	u7250
  2718   001C5E  EF31  F00E         	goto	u7251
  2719   001C62                     u7251:
  2720   001C62  EF39  F00E         	goto	l2260
  2721   001C66                     u7250:
  2722   001C66                     
  2723                           ; BSR set to: 0
  2724   001C66  0E00               	movlw	0
  2725   001C68  6FA2               	movwf	(dtoa@p+1)& (0+255),b
  2726   001C6A  0E01               	movlw	1
  2727   001C6C  6FA1               	movwf	dtoa@p& (0+255),b
  2728   001C6E  EF3D  F00E         	goto	l2262
  2729   001C72                     l2260:
  2730                           
  2731                           ; BSR set to: 0
  2732   001C72  C0D7  F0A1         	movff	_prec,dtoa@p
  2733   001C76  C0D8  F0A2         	movff	_prec+1,dtoa@p+1
  2734   001C7A                     l2262:
  2735                           
  2736                           ; BSR set to: 0
  2737                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  2738   001C7A  C0D5  F0A3         	movff	_width,dtoa@w
  2739   001C7E  C0D6  F0A4         	movff	_width+1,dtoa@w+1
  2740   001C82                     
  2741                           ; BSR set to: 0
  2742                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  2743   001C82  51A5               	movf	dtoa@s& (0+255),w,b
  2744   001C84  B4D8               	btfsc	status,2,c
  2745   001C86  EF47  F00E         	goto	u7261
  2746   001C8A  EF49  F00E         	goto	u7260
  2747   001C8E                     u7261:
  2748   001C8E  EF60  F00E         	goto	l2263
  2749   001C92                     u7260:
  2750   001C92                     
  2751                           ; BSR set to: 0
  2752                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  2753   001C92  07A3               	decf	dtoa@w& (0+255),f,b
  2754   001C94  A0D8               	btfss	status,0,c
  2755   001C96  07A4               	decf	(dtoa@w+1)& (0+255),f,b
  2756   001C98                     
  2757                           ; BSR set to: 0
  2758                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  2759   001C98  51A5               	movf	dtoa@s& (0+255),w,b
  2760   001C9A  A4D8               	btfss	status,2,c
  2761   001C9C  EF52  F00E         	goto	u7271
  2762   001CA0  EF54  F00E         	goto	u7270
  2763   001CA4                     u7271:
  2764   001CA4  EF5A  F00E         	goto	l7561
  2765   001CA8                     u7270:
  2766   001CA8                     
  2767                           ; BSR set to: 0
  2768   001CA8  0E00               	movlw	0
  2769   001CAA  6FA0               	movwf	(_dtoa$4430+1)& (0+255),b
  2770   001CAC  0E2B               	movlw	43
  2771   001CAE  6F9F               	movwf	_dtoa$4430& (0+255),b
  2772   001CB0  EF5E  F00E         	goto	l7563
  2773   001CB4                     l7561:
  2774                           
  2775                           ; BSR set to: 0
  2776   001CB4  0E00               	movlw	0
  2777   001CB6  6FA0               	movwf	(_dtoa$4430+1)& (0+255),b
  2778   001CB8  0E2D               	movlw	45
  2779   001CBA  6F9F               	movwf	_dtoa$4430& (0+255),b
  2780   001CBC                     l7563:
  2781                           
  2782                           ; BSR set to: 0
  2783   001CBC  C09F  F0A5         	movff	_dtoa$4430,dtoa@s
  2784   001CC0                     l2263:
  2785                           
  2786                           ; BSR set to: 0
  2787                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  2788   001CC0  0E00               	movlw	0
  2789   001CC2  6FA7               	movwf	(dtoa@i+1)& (0+255),b
  2790   001CC4  0E1F               	movlw	31
  2791   001CC6  6FA6               	movwf	dtoa@i& (0+255),b
  2792   001CC8                     
  2793                           ; BSR set to: 0
  2794                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  2795   001CC8  0E00               	movlw	0
  2796   001CCA  0101               	movlb	1	; () banked
  2797   001CCC  6F31               	movwf	(_dbuf+31)& (0+255),b
  2798                           
  2799                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  2800   001CCE  EF9A  F00E         	goto	l7577
  2801   001CD2                     l7567:
  2802                           
  2803                           ; BSR set to: 0
  2804                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  2805   001CD2  07A6               	decf	dtoa@i& (0+255),f,b
  2806   001CD4  A0D8               	btfss	status,0,c
  2807   001CD6  07A7               	decf	(dtoa@i+1)& (0+255),f,b
  2808   001CD8                     
  2809                           ; BSR set to: 0
  2810                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  2811   001CD8  0E12               	movlw	low _dbuf
  2812   001CDA  25A6               	addwf	dtoa@i& (0+255),w,b
  2813   001CDC  6ED9               	movwf	fsr2l,c
  2814   001CDE  0E01               	movlw	high _dbuf
  2815   001CE0  21A7               	addwfc	(dtoa@i+1)& (0+255),w,b
  2816   001CE2  6EDA               	movwf	fsr2h,c
  2817   001CE4  C09D  F080         	movff	dtoa@d,___awmod@dividend
  2818   001CE8  C09E  F081         	movff	dtoa@d+1,___awmod@dividend+1
  2819   001CEC  0E00               	movlw	0
  2820   001CEE  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  2821   001CF0  0E0A               	movlw	10
  2822   001CF2  6F82               	movwf	___awmod@divisor& (0+255),b
  2823   001CF4  EC8F  F015         	call	___awmod	;wreg free
  2824   001CF8  C080  F086         	movff	?___awmod,abs@a
  2825   001CFC  C081  F087         	movff	?___awmod+1,abs@a+1
  2826   001D00  ECF1  F018         	call	_abs	;wreg free
  2827   001D04  0100               	movlb	0	; () banked
  2828   001D06  5186               	movf	?_abs& (0+255),w,b
  2829   001D08  0F30               	addlw	48
  2830   001D0A  6EDF               	movwf	indf2,c
  2831   001D0C                     
  2832                           ; BSR set to: 0
  2833                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  2834   001D0C  07A1               	decf	dtoa@p& (0+255),f,b
  2835   001D0E  A0D8               	btfss	status,0,c
  2836   001D10  07A2               	decf	(dtoa@p+1)& (0+255),f,b
  2837   001D12                     
  2838                           ; BSR set to: 0
  2839                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  2840   001D12  07A3               	decf	dtoa@w& (0+255),f,b
  2841   001D14  A0D8               	btfss	status,0,c
  2842   001D16  07A4               	decf	(dtoa@w+1)& (0+255),f,b
  2843   001D18                     
  2844                           ; BSR set to: 0
  2845                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  2846   001D18  C09D  F080         	movff	dtoa@d,___awdiv@dividend
  2847   001D1C  C09E  F081         	movff	dtoa@d+1,___awdiv@dividend+1
  2848   001D20  0E00               	movlw	0
  2849   001D22  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  2850   001D24  0E0A               	movlw	10
  2851   001D26  6F82               	movwf	___awdiv@divisor& (0+255),b
  2852   001D28  EC18  F014         	call	___awdiv	;wreg free
  2853   001D2C  C080  F09D         	movff	?___awdiv,dtoa@d
  2854   001D30  C081  F09E         	movff	?___awdiv+1,dtoa@d+1
  2855   001D34                     l7577:
  2856                           
  2857                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  2858   001D34  0100               	movlb	0	; () banked
  2859   001D36  BFA7               	btfsc	(dtoa@i+1)& (0+255),7,b
  2860   001D38  EFA6  F00E         	goto	u7281
  2861   001D3C  51A7               	movf	(dtoa@i+1)& (0+255),w,b
  2862   001D3E  E108               	bnz	u7280
  2863   001D40  05A6               	decf	dtoa@i& (0+255),w,b
  2864   001D42  A0D8               	btfss	status,0,c
  2865   001D44  EFA6  F00E         	goto	u7281
  2866   001D48  EFA8  F00E         	goto	u7280
  2867   001D4C                     u7281:
  2868   001D4C  EFBE  F00E         	goto	l7583
  2869   001D50                     u7280:
  2870   001D50                     
  2871                           ; BSR set to: 0
  2872   001D50  519D               	movf	dtoa@d& (0+255),w,b
  2873   001D52  119E               	iorwf	(dtoa@d+1)& (0+255),w,b
  2874   001D54  A4D8               	btfss	status,2,c
  2875   001D56  EFAF  F00E         	goto	u7291
  2876   001D5A  EFB1  F00E         	goto	u7290
  2877   001D5E                     u7291:
  2878   001D5E  EF69  F00E         	goto	l7567
  2879   001D62                     u7290:
  2880   001D62                     
  2881                           ; BSR set to: 0
  2882   001D62  BFA2               	btfsc	(dtoa@p+1)& (0+255),7,b
  2883   001D64  EFBE  F00E         	goto	u7300
  2884   001D68  51A2               	movf	(dtoa@p+1)& (0+255),w,b
  2885   001D6A  E106               	bnz	u7301
  2886   001D6C  05A1               	decf	dtoa@p& (0+255),w,b
  2887   001D6E  B0D8               	btfsc	status,0,c
  2888   001D70  EFBC  F00E         	goto	u7301
  2889   001D74  EFBE  F00E         	goto	u7300
  2890   001D78                     u7301:
  2891   001D78  EF69  F00E         	goto	l7567
  2892   001D7C                     u7300:
  2893   001D7C                     l7583:
  2894                           
  2895                           ; BSR set to: 0
  2896                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  2897   001D7C  51A5               	movf	dtoa@s& (0+255),w,b
  2898   001D7E  B4D8               	btfsc	status,2,c
  2899   001D80  EFC4  F00E         	goto	u7311
  2900   001D84  EFC6  F00E         	goto	u7310
  2901   001D88                     u7311:
  2902   001D88  EFD1  F00E         	goto	l7589
  2903   001D8C                     u7310:
  2904   001D8C                     
  2905                           ; BSR set to: 0
  2906                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  2907   001D8C  07A6               	decf	dtoa@i& (0+255),f,b
  2908   001D8E  A0D8               	btfss	status,0,c
  2909   001D90  07A7               	decf	(dtoa@i+1)& (0+255),f,b
  2910   001D92                     
  2911                           ; BSR set to: 0
  2912                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  2913   001D92  0E12               	movlw	low _dbuf
  2914   001D94  25A6               	addwf	dtoa@i& (0+255),w,b
  2915   001D96  6ED9               	movwf	fsr2l,c
  2916   001D98  0E01               	movlw	high _dbuf
  2917   001D9A  21A7               	addwfc	(dtoa@i+1)& (0+255),w,b
  2918   001D9C  6EDA               	movwf	fsr2h,c
  2919   001D9E  C0A5  FFDF         	movff	dtoa@s,indf2
  2920   001DA2                     l7589:
  2921                           
  2922                           ; BSR set to: 0
  2923                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2924   001DA2  C09B  F090         	movff	dtoa@fp,pad@fp
  2925   001DA6  C09C  F091         	movff	dtoa@fp+1,pad@fp+1
  2926   001DAA  0E12               	movlw	low _dbuf
  2927   001DAC  25A6               	addwf	dtoa@i& (0+255),w,b
  2928   001DAE  6F92               	movwf	pad@buf& (0+255),b
  2929   001DB0  0E01               	movlw	high _dbuf
  2930   001DB2  21A7               	addwfc	(dtoa@i+1)& (0+255),w,b
  2931   001DB4  6F93               	movwf	(pad@buf+1)& (0+255),b
  2932   001DB6  C0A3  F094         	movff	dtoa@w,pad@p
  2933   001DBA  C0A4  F095         	movff	dtoa@w+1,pad@p+1
  2934   001DBE  EC59  F017         	call	_pad	;wreg free
  2935   001DC2  0012               	return		;funcret
  2936   001DC4                     __end_of_dtoa:
  2937                           	callstack 0
  2938                           
  2939 ;; *************** function _pad *****************
  2940 ;; Defined at:
  2941 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2942 ;; Parameters:    Size  Location     Type
  2943 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  2944 ;;		 -> sprintf@f(12), 
  2945 ;;  buf             2   18[BANK0 ] PTR unsigned char 
  2946 ;;		 -> dbuf(32), 
  2947 ;;  p               2   20[BANK0 ] int 
  2948 ;; Auto vars:     Size  Location     Type
  2949 ;;  w               2   25[BANK0 ] int 
  2950 ;;  i               2   23[BANK0 ] int 
  2951 ;; Return value:  Size  Location     Type
  2952 ;;                  1    wreg      void 
  2953 ;; Registers used:
  2954 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2955 ;; Tracked objects:
  2956 ;;		On entry : 0/0
  2957 ;;		On exit  : 0/0
  2958 ;;		Unchanged: 0/0
  2959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2960 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2961 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2962 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2963 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2964 ;;Total ram usage:       11 bytes
  2965 ;; Hardware stack levels used: 1
  2966 ;; Hardware stack levels required when called: 7
  2967 ;; This function calls:
  2968 ;;		_fputc
  2969 ;;		_fputs
  2970 ;; This function is called by:
  2971 ;;		_dtoa
  2972 ;; This function uses a non-reentrant model
  2973 ;;
  2974                           
  2975                           	psect	text12
  2976   002EB2                     __ptext12:
  2977                           	callstack 0
  2978   002EB2                     _pad:
  2979                           	callstack 18
  2980   002EB2                     
  2981                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 164:     w = (p < 0) ? 0 : p;
  2982   002EB2  0100               	movlb	0	; () banked
  2983   002EB4  BF95               	btfsc	(pad@p+1)& (0+255),7,b
  2984   002EB6  EF5F  F017         	goto	u7151
  2985   002EBA  EF61  F017         	goto	u7150
  2986   002EBE                     u7151:
  2987   002EBE  EF67  F017         	goto	l7505
  2988   002EC2                     u7150:
  2989   002EC2                     
  2990                           ; BSR set to: 0
  2991   002EC2  C094  F099         	movff	pad@p,pad@w
  2992   002EC6  C095  F09A         	movff	pad@p+1,pad@w+1
  2993   002ECA  EF6B  F017         	goto	l2251
  2994   002ECE                     l7505:
  2995                           
  2996                           ; BSR set to: 0
  2997   002ECE  0E00               	movlw	0
  2998   002ED0  6F9A               	movwf	(pad@w+1)& (0+255),b
  2999   002ED2  0E00               	movlw	0
  3000   002ED4  6F99               	movwf	pad@w& (0+255),b
  3001   002ED6                     l2251:
  3002                           
  3003                           ; BSR set to: 0
  3004                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  3005   002ED6  0E00               	movlw	0
  3006   002ED8  6F98               	movwf	(pad@i+1)& (0+255),b
  3007   002EDA  0E00               	movlw	0
  3008   002EDC  6F97               	movwf	pad@i& (0+255),b
  3009                           
  3010                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  3011   002EDE  EF7E  F017         	goto	l7511
  3012   002EE2                     l7507:
  3013                           
  3014                           ; BSR set to: 0
  3015                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  3016   002EE2  0E00               	movlw	0
  3017   002EE4  6F81               	movwf	(fputc@c+1)& (0+255),b
  3018   002EE6  0E20               	movlw	32
  3019   002EE8  6F80               	movwf	fputc@c& (0+255),b
  3020   002EEA  C090  F082         	movff	pad@fp,fputc@fp
  3021   002EEE  C091  F083         	movff	pad@fp+1,fputc@fp+1
  3022   002EF2  ECB2  F013         	call	_fputc	;wreg free
  3023   002EF6                     
  3024                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  3025   002EF6  0100               	movlb	0	; () banked
  3026   002EF8  4B97               	infsnz	pad@i& (0+255),f,b
  3027   002EFA  2B98               	incf	(pad@i+1)& (0+255),f,b
  3028   002EFC                     l7511:
  3029                           
  3030                           ; BSR set to: 0
  3031                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  3032   002EFC  5199               	movf	pad@w& (0+255),w,b
  3033   002EFE  5D97               	subwf	pad@i& (0+255),w,b
  3034   002F00  5198               	movf	(pad@i+1)& (0+255),w,b
  3035   002F02  0A80               	xorlw	128
  3036   002F04  6F96               	movwf	??_pad& (0+255),b
  3037   002F06  519A               	movf	(pad@w+1)& (0+255),w,b
  3038   002F08  0A80               	xorlw	128
  3039   002F0A  5996               	subwfb	??_pad& (0+255),w,b
  3040   002F0C  A0D8               	btfss	status,0,c
  3041   002F0E  EF8B  F017         	goto	u7161
  3042   002F12  EF8D  F017         	goto	u7160
  3043   002F16                     u7161:
  3044   002F16  EF71  F017         	goto	l7507
  3045   002F1A                     u7160:
  3046   002F1A                     
  3047                           ; BSR set to: 0
  3048                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  3049   002F1A  C092  F089         	movff	pad@buf,fputs@s
  3050   002F1E  C093  F08A         	movff	pad@buf+1,fputs@s+1
  3051   002F22  C090  F08B         	movff	pad@fp,fputs@fp
  3052   002F26  C091  F08C         	movff	pad@fp+1,fputs@fp+1
  3053   002F2A  EC66  F018         	call	_fputs	;wreg free
  3054   002F2E  0012               	return		;funcret
  3055   002F30                     __end_of_pad:
  3056                           	callstack 0
  3057                           
  3058 ;; *************** function _fputs *****************
  3059 ;; Defined at:
  3060 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  3061 ;; Parameters:    Size  Location     Type
  3062 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  3063 ;;		 -> dbuf(32), 
  3064 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  3065 ;;		 -> sprintf@f(12), 
  3066 ;; Auto vars:     Size  Location     Type
  3067 ;;  i               2   14[BANK0 ] int 
  3068 ;;  c               1   13[BANK0 ] unsigned char 
  3069 ;; Return value:  Size  Location     Type
  3070 ;;                  2    9[BANK0 ] int 
  3071 ;; Registers used:
  3072 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3073 ;; Tracked objects:
  3074 ;;		On entry : 0/0
  3075 ;;		On exit  : 0/0
  3076 ;;		Unchanged: 0/0
  3077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3078 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3079 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3081 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3082 ;;Total ram usage:        7 bytes
  3083 ;; Hardware stack levels used: 1
  3084 ;; Hardware stack levels required when called: 6
  3085 ;; This function calls:
  3086 ;;		_fputc
  3087 ;; This function is called by:
  3088 ;;		_pad
  3089 ;; This function uses a non-reentrant model
  3090 ;;
  3091                           
  3092                           	psect	text13
  3093   0030CC                     __ptext13:
  3094                           	callstack 0
  3095   0030CC                     _fputs:
  3096                           	callstack 18
  3097   0030CC  0E00               	movlw	0
  3098   0030CE  0100               	movlb	0	; () banked
  3099   0030D0  6F8F               	movwf	(fputs@i+1)& (0+255),b
  3100   0030D2  0E00               	movlw	0
  3101   0030D4  6F8E               	movwf	fputs@i& (0+255),b
  3102   0030D6  EF79  F018         	goto	l7419
  3103   0030DA                     l7415:
  3104                           
  3105                           ; BSR set to: 0
  3106   0030DA  C08D  F080         	movff	fputs@c,fputc@c
  3107   0030DE  6B81               	clrf	(fputc@c+1)& (0+255),b
  3108   0030E0  C08B  F082         	movff	fputs@fp,fputc@fp
  3109   0030E4  C08C  F083         	movff	fputs@fp+1,fputc@fp+1
  3110   0030E8  ECB2  F013         	call	_fputc	;wreg free
  3111   0030EC  0100               	movlb	0	; () banked
  3112   0030EE  4B8E               	infsnz	fputs@i& (0+255),f,b
  3113   0030F0  2B8F               	incf	(fputs@i+1)& (0+255),f,b
  3114   0030F2                     l7419:
  3115                           
  3116                           ; BSR set to: 0
  3117   0030F2  518E               	movf	fputs@i& (0+255),w,b
  3118   0030F4  2589               	addwf	fputs@s& (0+255),w,b
  3119   0030F6  6ED9               	movwf	fsr2l,c
  3120   0030F8  518F               	movf	(fputs@i+1)& (0+255),w,b
  3121   0030FA  218A               	addwfc	(fputs@s+1)& (0+255),w,b
  3122   0030FC  6EDA               	movwf	fsr2h,c
  3123   0030FE  50DF               	movf	indf2,w,c
  3124   003100  6F8D               	movwf	fputs@c& (0+255),b
  3125   003102  518D               	movf	fputs@c& (0+255),w,b
  3126   003104  A4D8               	btfss	status,2,c
  3127   003106  EF87  F018         	goto	u7021
  3128   00310A  EF89  F018         	goto	u7020
  3129   00310E                     u7021:
  3130   00310E  EF6D  F018         	goto	l7415
  3131   003112                     u7020:
  3132   003112                     
  3133                           ; BSR set to: 0
  3134   003112  0012               	return		;funcret
  3135   003114                     __end_of_fputs:
  3136                           	callstack 0
  3137                           
  3138 ;; *************** function _fputc *****************
  3139 ;; Defined at:
  3140 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  3141 ;; Parameters:    Size  Location     Type
  3142 ;;  c               2    0[BANK0 ] int 
  3143 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  3144 ;;		 -> sprintf@f(12), 
  3145 ;; Auto vars:     Size  Location     Type
  3146 ;;		None
  3147 ;; Return value:  Size  Location     Type
  3148 ;;                  2    0[BANK0 ] int 
  3149 ;; Registers used:
  3150 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3151 ;; Tracked objects:
  3152 ;;		On entry : 0/0
  3153 ;;		On exit  : 0/0
  3154 ;;		Unchanged: 0/0
  3155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3156 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3158 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3159 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3160 ;;Total ram usage:        9 bytes
  3161 ;; Hardware stack levels used: 1
  3162 ;; Hardware stack levels required when called: 5
  3163 ;; This function calls:
  3164 ;;		_putch
  3165 ;; This function is called by:
  3166 ;;		_pad
  3167 ;;		_vfpfcnvrt
  3168 ;;		_fputs
  3169 ;; This function uses a non-reentrant model
  3170 ;;
  3171                           
  3172                           	psect	text14
  3173   002764                     __ptext14:
  3174                           	callstack 0
  3175   002764                     _fputc:
  3176                           	callstack 21
  3177   002764  0100               	movlb	0	; () banked
  3178   002766  5182               	movf	fputc@fp& (0+255),w,b
  3179   002768  1183               	iorwf	(fputc@fp+1)& (0+255),w,b
  3180   00276A  B4D8               	btfsc	status,2,c
  3181   00276C  EFBA  F013         	goto	u6981
  3182   002770  EFBC  F013         	goto	u6980
  3183   002774                     u6981:
  3184   002774  EFC5  F013         	goto	l7403
  3185   002778                     u6980:
  3186   002778                     
  3187                           ; BSR set to: 0
  3188   002778  5182               	movf	fputc@fp& (0+255),w,b
  3189   00277A  1183               	iorwf	(fputc@fp+1)& (0+255),w,b
  3190   00277C  A4D8               	btfss	status,2,c
  3191   00277E  EFC3  F013         	goto	u6991
  3192   002782  EFC5  F013         	goto	u6990
  3193   002786                     u6991:
  3194   002786  EFCA  F013         	goto	l7405
  3195   00278A                     u6990:
  3196   00278A                     l7403:
  3197                           
  3198                           ; BSR set to: 0
  3199   00278A  5180               	movf	fputc@c& (0+255),w,b
  3200   00278C  EC19  F01A         	call	_putch
  3201   002790  EF17  F014         	goto	l2306
  3202   002794                     l7405:
  3203                           
  3204                           ; BSR set to: 0
  3205   002794  EE20 F00A          	lfsr	2,10
  3206   002798  5182               	movf	fputc@fp& (0+255),w,b
  3207   00279A  26D9               	addwf	fsr2l,f,c
  3208   00279C  5183               	movf	(fputc@fp+1)& (0+255),w,b
  3209   00279E  22DA               	addwfc	fsr2h,f,c
  3210   0027A0  50DE               	movf	postinc2,w,c
  3211   0027A2  10DE               	iorwf	postinc2,w,c
  3212   0027A4  B4D8               	btfsc	status,2,c
  3213   0027A6  EFD7  F013         	goto	u7001
  3214   0027AA  EFD9  F013         	goto	u7000
  3215   0027AE                     u7001:
  3216   0027AE  EFF4  F013         	goto	l7409
  3217   0027B2                     u7000:
  3218   0027B2                     
  3219                           ; BSR set to: 0
  3220   0027B2  EE20 F00A          	lfsr	2,10
  3221   0027B6  5182               	movf	fputc@fp& (0+255),w,b
  3222   0027B8  26D9               	addwf	fsr2l,f,c
  3223   0027BA  5183               	movf	(fputc@fp+1)& (0+255),w,b
  3224   0027BC  22DA               	addwfc	fsr2h,f,c
  3225   0027BE  EE10 F003          	lfsr	1,3
  3226   0027C2  5182               	movf	fputc@fp& (0+255),w,b
  3227   0027C4  26E1               	addwf	fsr1l,f,c
  3228   0027C6  5183               	movf	(fputc@fp+1)& (0+255),w,b
  3229   0027C8  22E2               	addwfc	fsr1h,f,c
  3230   0027CA  50DE               	movf	postinc2,w,c
  3231   0027CC  5CE6               	subwf	postinc1,w,c
  3232   0027CE  50E6               	movf	postinc1,w,c
  3233   0027D0  0A80               	xorlw	128
  3234   0027D2  6F88               	movwf	(??_fputc+4)& (0+255),b
  3235   0027D4  50DE               	movf	postinc2,w,c
  3236   0027D6  0A80               	xorlw	128
  3237   0027D8  5988               	subwfb	(??_fputc+4)& (0+255),w,b
  3238   0027DA  B0D8               	btfsc	status,0,c
  3239   0027DC  EFF2  F013         	goto	u7011
  3240   0027E0  EFF4  F013         	goto	u7010
  3241   0027E4                     u7011:
  3242   0027E4  EF17  F014         	goto	l2306
  3243   0027E8                     u7010:
  3244   0027E8                     l7409:
  3245                           
  3246                           ; BSR set to: 0
  3247   0027E8  EE20 F003          	lfsr	2,3
  3248   0027EC  5182               	movf	fputc@fp& (0+255),w,b
  3249   0027EE  26D9               	addwf	fsr2l,f,c
  3250   0027F0  5183               	movf	(fputc@fp+1)& (0+255),w,b
  3251   0027F2  22DA               	addwfc	fsr2h,f,c
  3252   0027F4  CFDE F084          	movff	postinc2,??_fputc
  3253   0027F8  CFDD F085          	movff	postdec2,??_fputc+1
  3254   0027FC  C082  FFD9         	movff	fputc@fp,fsr2l
  3255   002800  C083  FFDA         	movff	fputc@fp+1,fsr2h
  3256   002804  CFDE F086          	movff	postinc2,??_fputc+2
  3257   002808  CFDD F087          	movff	postdec2,??_fputc+3
  3258   00280C  5184               	movf	??_fputc& (0+255),w,b
  3259   00280E  2586               	addwf	(??_fputc+2)& (0+255),w,b
  3260   002810  6ED9               	movwf	fsr2l,c
  3261   002812  5185               	movf	(??_fputc+1)& (0+255),w,b
  3262   002814  2187               	addwfc	(??_fputc+3)& (0+255),w,b
  3263   002816  6EDA               	movwf	fsr2h,c
  3264   002818  C080  FFDF         	movff	fputc@c,indf2
  3265   00281C  EE20 F003          	lfsr	2,3
  3266   002820  5182               	movf	fputc@fp& (0+255),w,b
  3267   002822  26D9               	addwf	fsr2l,f,c
  3268   002824  5183               	movf	(fputc@fp+1)& (0+255),w,b
  3269   002826  22DA               	addwfc	fsr2h,f,c
  3270   002828  2ADE               	incf	postinc2,f,c
  3271   00282A  0E00               	movlw	0
  3272   00282C  22DD               	addwfc	postdec2,f,c
  3273   00282E                     l2306:
  3274   00282E  0012               	return		;funcret
  3275   002830                     __end_of_fputc:
  3276                           	callstack 0
  3277                           
  3278 ;; *************** function _putch *****************
  3279 ;; Defined at:
  3280 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  3281 ;; Parameters:    Size  Location     Type
  3282 ;;  c               1    wreg     unsigned char 
  3283 ;; Auto vars:     Size  Location     Type
  3284 ;;  c               1    0[COMRAM] unsigned char 
  3285 ;; Return value:  Size  Location     Type
  3286 ;;                  1    wreg      void 
  3287 ;; Registers used:
  3288 ;;		wreg
  3289 ;; Tracked objects:
  3290 ;;		On entry : 0/0
  3291 ;;		On exit  : 0/0
  3292 ;;		Unchanged: 0/0
  3293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3298 ;;Total ram usage:        0 bytes
  3299 ;; Hardware stack levels used: 1
  3300 ;; Hardware stack levels required when called: 4
  3301 ;; This function calls:
  3302 ;;		Nothing
  3303 ;; This function is called by:
  3304 ;;		_fputc
  3305 ;; This function uses a non-reentrant model
  3306 ;;
  3307                           
  3308                           	psect	text15
  3309   003432                     __ptext15:
  3310                           	callstack 0
  3311   003432                     _putch:
  3312                           	callstack 21
  3313   003432  0012               	return		;funcret
  3314   003434                     __end_of_putch:
  3315                           	callstack 0
  3316                           
  3317 ;; *************** function _abs *****************
  3318 ;; Defined at:
  3319 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  3320 ;; Parameters:    Size  Location     Type
  3321 ;;  a               2    6[BANK0 ] int 
  3322 ;; Auto vars:     Size  Location     Type
  3323 ;;		None
  3324 ;; Return value:  Size  Location     Type
  3325 ;;                  2    6[BANK0 ] int 
  3326 ;; Registers used:
  3327 ;;		wreg, status,2, status,0
  3328 ;; Tracked objects:
  3329 ;;		On entry : 0/0
  3330 ;;		On exit  : 0/0
  3331 ;;		Unchanged: 0/0
  3332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3333 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3335 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3336 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3337 ;;Total ram usage:        4 bytes
  3338 ;; Hardware stack levels used: 1
  3339 ;; Hardware stack levels required when called: 4
  3340 ;; This function calls:
  3341 ;;		Nothing
  3342 ;; This function is called by:
  3343 ;;		_dtoa
  3344 ;; This function uses a non-reentrant model
  3345 ;;
  3346                           
  3347                           	psect	text16
  3348   0031E2                     __ptext16:
  3349                           	callstack 0
  3350   0031E2                     _abs:
  3351                           	callstack 21
  3352   0031E2  0100               	movlb	0	; () banked
  3353   0031E4  BF87               	btfsc	(abs@a+1)& (0+255),7,b
  3354   0031E6  EFFF  F018         	goto	u7170
  3355   0031EA  5187               	movf	(abs@a+1)& (0+255),w,b
  3356   0031EC  E106               	bnz	u7171
  3357   0031EE  0586               	decf	abs@a& (0+255),w,b
  3358   0031F0  B0D8               	btfsc	status,0,c
  3359   0031F2  EFFD  F018         	goto	u7171
  3360   0031F6  EFFF  F018         	goto	u7170
  3361   0031FA                     u7171:
  3362   0031FA  EF0D  F019         	goto	l2291
  3363   0031FE                     u7170:
  3364   0031FE                     
  3365                           ; BSR set to: 0
  3366   0031FE  C086  F088         	movff	abs@a,??_abs
  3367   003202  C087  F089         	movff	abs@a+1,??_abs+1
  3368   003206  1F88               	comf	??_abs& (0+255),f,b
  3369   003208  1F89               	comf	(??_abs+1)& (0+255),f,b
  3370   00320A  4B88               	infsnz	??_abs& (0+255),f,b
  3371   00320C  2B89               	incf	(??_abs+1)& (0+255),f,b
  3372   00320E  C088  F086         	movff	??_abs,?_abs
  3373   003212  C089  F087         	movff	??_abs+1,?_abs+1
  3374   003216  EF11  F019         	goto	l2294
  3375   00321A                     l2291:
  3376                           
  3377                           ; BSR set to: 0
  3378   00321A  C086  F086         	movff	abs@a,?_abs
  3379   00321E  C087  F087         	movff	abs@a+1,?_abs+1
  3380   003222                     l2294:
  3381                           
  3382                           ; BSR set to: 0
  3383   003222  0012               	return		;funcret
  3384   003224                     __end_of_abs:
  3385                           	callstack 0
  3386                           
  3387 ;; *************** function ___awmod *****************
  3388 ;; Defined at:
  3389 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  3390 ;; Parameters:    Size  Location     Type
  3391 ;;  dividend        2    0[BANK0 ] int 
  3392 ;;  divisor         2    2[BANK0 ] int 
  3393 ;; Auto vars:     Size  Location     Type
  3394 ;;  sign            1    5[BANK0 ] unsigned char 
  3395 ;;  counter         1    4[BANK0 ] unsigned char 
  3396 ;; Return value:  Size  Location     Type
  3397 ;;                  2    0[BANK0 ] int 
  3398 ;; Registers used:
  3399 ;;		wreg, status,2, status,0
  3400 ;; Tracked objects:
  3401 ;;		On entry : 0/0
  3402 ;;		On exit  : 0/0
  3403 ;;		Unchanged: 0/0
  3404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3405 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3406 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3408 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3409 ;;Total ram usage:        6 bytes
  3410 ;; Hardware stack levels used: 1
  3411 ;; Hardware stack levels required when called: 4
  3412 ;; This function calls:
  3413 ;;		Nothing
  3414 ;; This function is called by:
  3415 ;;		_dtoa
  3416 ;; This function uses a non-reentrant model
  3417 ;;
  3418                           
  3419                           	psect	text17
  3420   002B1E                     __ptext17:
  3421                           	callstack 0
  3422   002B1E                     ___awmod:
  3423                           	callstack 21
  3424   002B1E  0E00               	movlw	0
  3425   002B20  0100               	movlb	0	; () banked
  3426   002B22  6F85               	movwf	___awmod@sign& (0+255),b
  3427   002B24                     
  3428                           ; BSR set to: 0
  3429   002B24  BF81               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  3430   002B26  EF99  F015         	goto	u7090
  3431   002B2A  EF97  F015         	goto	u7091
  3432   002B2E                     u7091:
  3433   002B2E  EF9F  F015         	goto	l7473
  3434   002B32                     u7090:
  3435   002B32                     
  3436                           ; BSR set to: 0
  3437   002B32  6D80               	negf	___awmod@dividend& (0+255),b
  3438   002B34  1F81               	comf	(___awmod@dividend+1)& (0+255),f,b
  3439   002B36  B0D8               	btfsc	status,0,c
  3440   002B38  2B81               	incf	(___awmod@dividend+1)& (0+255),f,b
  3441   002B3A                     
  3442                           ; BSR set to: 0
  3443   002B3A  0E01               	movlw	1
  3444   002B3C  6F85               	movwf	___awmod@sign& (0+255),b
  3445   002B3E                     l7473:
  3446                           
  3447                           ; BSR set to: 0
  3448   002B3E  BF83               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  3449   002B40  EFA6  F015         	goto	u7100
  3450   002B44  EFA4  F015         	goto	u7101
  3451   002B48                     u7101:
  3452   002B48  EFAA  F015         	goto	l7477
  3453   002B4C                     u7100:
  3454   002B4C                     
  3455                           ; BSR set to: 0
  3456   002B4C  6D82               	negf	___awmod@divisor& (0+255),b
  3457   002B4E  1F83               	comf	(___awmod@divisor+1)& (0+255),f,b
  3458   002B50  B0D8               	btfsc	status,0,c
  3459   002B52  2B83               	incf	(___awmod@divisor+1)& (0+255),f,b
  3460   002B54                     l7477:
  3461                           
  3462                           ; BSR set to: 0
  3463   002B54  5182               	movf	___awmod@divisor& (0+255),w,b
  3464   002B56  1183               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  3465   002B58  B4D8               	btfsc	status,2,c
  3466   002B5A  EFB1  F015         	goto	u7111
  3467   002B5E  EFB3  F015         	goto	u7110
  3468   002B62                     u7111:
  3469   002B62  EFD7  F015         	goto	l7493
  3470   002B66                     u7110:
  3471   002B66                     
  3472                           ; BSR set to: 0
  3473   002B66  0E01               	movlw	1
  3474   002B68  6F84               	movwf	___awmod@counter& (0+255),b
  3475   002B6A  EFBB  F015         	goto	l7483
  3476   002B6E                     l7481:
  3477                           
  3478                           ; BSR set to: 0
  3479   002B6E  90D8               	bcf	status,0,c
  3480   002B70  3782               	rlcf	___awmod@divisor& (0+255),f,b
  3481   002B72  3783               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  3482   002B74  2B84               	incf	___awmod@counter& (0+255),f,b
  3483   002B76                     l7483:
  3484                           
  3485                           ; BSR set to: 0
  3486   002B76  AF83               	btfss	(___awmod@divisor+1)& (0+255),7,b
  3487   002B78  EFC0  F015         	goto	u7121
  3488   002B7C  EFC2  F015         	goto	u7120
  3489   002B80                     u7121:
  3490   002B80  EFB7  F015         	goto	l7481
  3491   002B84                     u7120:
  3492   002B84                     l7485:
  3493                           
  3494                           ; BSR set to: 0
  3495   002B84  5182               	movf	___awmod@divisor& (0+255),w,b
  3496   002B86  5D80               	subwf	___awmod@dividend& (0+255),w,b
  3497   002B88  5183               	movf	(___awmod@divisor+1)& (0+255),w,b
  3498   002B8A  5981               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  3499   002B8C  A0D8               	btfss	status,0,c
  3500   002B8E  EFCB  F015         	goto	u7131
  3501   002B92  EFCD  F015         	goto	u7130
  3502   002B96                     u7131:
  3503   002B96  EFD1  F015         	goto	l7489
  3504   002B9A                     u7130:
  3505   002B9A                     
  3506                           ; BSR set to: 0
  3507   002B9A  5182               	movf	___awmod@divisor& (0+255),w,b
  3508   002B9C  5F80               	subwf	___awmod@dividend& (0+255),f,b
  3509   002B9E  5183               	movf	(___awmod@divisor+1)& (0+255),w,b
  3510   002BA0  5B81               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  3511   002BA2                     l7489:
  3512                           
  3513                           ; BSR set to: 0
  3514   002BA2  90D8               	bcf	status,0,c
  3515   002BA4  3383               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  3516   002BA6  3382               	rrcf	___awmod@divisor& (0+255),f,b
  3517   002BA8                     
  3518                           ; BSR set to: 0
  3519   002BA8  2F84               	decfsz	___awmod@counter& (0+255),f,b
  3520   002BAA  EFC2  F015         	goto	l7485
  3521   002BAE                     l7493:
  3522                           
  3523                           ; BSR set to: 0
  3524   002BAE  5185               	movf	___awmod@sign& (0+255),w,b
  3525   002BB0  B4D8               	btfsc	status,2,c
  3526   002BB2  EFDD  F015         	goto	u7141
  3527   002BB6  EFDF  F015         	goto	u7140
  3528   002BBA                     u7141:
  3529   002BBA  EFE3  F015         	goto	l7497
  3530   002BBE                     u7140:
  3531   002BBE                     
  3532                           ; BSR set to: 0
  3533   002BBE  6D80               	negf	___awmod@dividend& (0+255),b
  3534   002BC0  1F81               	comf	(___awmod@dividend+1)& (0+255),f,b
  3535   002BC2  B0D8               	btfsc	status,0,c
  3536   002BC4  2B81               	incf	(___awmod@dividend+1)& (0+255),f,b
  3537   002BC6                     l7497:
  3538                           
  3539                           ; BSR set to: 0
  3540   002BC6  C080  F080         	movff	___awmod@dividend,?___awmod
  3541   002BCA  C081  F081         	movff	___awmod@dividend+1,?___awmod+1
  3542   002BCE                     
  3543                           ; BSR set to: 0
  3544   002BCE  0012               	return		;funcret
  3545   002BD0                     __end_of___awmod:
  3546                           	callstack 0
  3547                           
  3548 ;; *************** function ___awdiv *****************
  3549 ;; Defined at:
  3550 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  3551 ;; Parameters:    Size  Location     Type
  3552 ;;  dividend        2    0[BANK0 ] int 
  3553 ;;  divisor         2    2[BANK0 ] int 
  3554 ;; Auto vars:     Size  Location     Type
  3555 ;;  quotient        2    6[BANK0 ] int 
  3556 ;;  sign            1    5[BANK0 ] unsigned char 
  3557 ;;  counter         1    4[BANK0 ] unsigned char 
  3558 ;; Return value:  Size  Location     Type
  3559 ;;                  2    0[BANK0 ] int 
  3560 ;; Registers used:
  3561 ;;		wreg, status,2, status,0
  3562 ;; Tracked objects:
  3563 ;;		On entry : 0/0
  3564 ;;		On exit  : 0/0
  3565 ;;		Unchanged: 0/0
  3566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3567 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3568 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3570 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3571 ;;Total ram usage:        8 bytes
  3572 ;; Hardware stack levels used: 1
  3573 ;; Hardware stack levels required when called: 4
  3574 ;; This function calls:
  3575 ;;		Nothing
  3576 ;; This function is called by:
  3577 ;;		_dtoa
  3578 ;; This function uses a non-reentrant model
  3579 ;;
  3580                           
  3581                           	psect	text18
  3582   002830                     __ptext18:
  3583                           	callstack 0
  3584   002830                     ___awdiv:
  3585                           	callstack 21
  3586   002830  0E00               	movlw	0
  3587   002832  0100               	movlb	0	; () banked
  3588   002834  6F85               	movwf	___awdiv@sign& (0+255),b
  3589   002836                     
  3590                           ; BSR set to: 0
  3591   002836  BF83               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  3592   002838  EF22  F014         	goto	u7030
  3593   00283C  EF20  F014         	goto	u7031
  3594   002840                     u7031:
  3595   002840  EF28  F014         	goto	l7429
  3596   002844                     u7030:
  3597   002844                     
  3598                           ; BSR set to: 0
  3599   002844  6D82               	negf	___awdiv@divisor& (0+255),b
  3600   002846  1F83               	comf	(___awdiv@divisor+1)& (0+255),f,b
  3601   002848  B0D8               	btfsc	status,0,c
  3602   00284A  2B83               	incf	(___awdiv@divisor+1)& (0+255),f,b
  3603   00284C                     
  3604                           ; BSR set to: 0
  3605   00284C  0E01               	movlw	1
  3606   00284E  6F85               	movwf	___awdiv@sign& (0+255),b
  3607   002850                     l7429:
  3608                           
  3609                           ; BSR set to: 0
  3610   002850  BF81               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  3611   002852  EF2F  F014         	goto	u7040
  3612   002856  EF2D  F014         	goto	u7041
  3613   00285A                     u7041:
  3614   00285A  EF35  F014         	goto	l7435
  3615   00285E                     u7040:
  3616   00285E                     
  3617                           ; BSR set to: 0
  3618   00285E  6D80               	negf	___awdiv@dividend& (0+255),b
  3619   002860  1F81               	comf	(___awdiv@dividend+1)& (0+255),f,b
  3620   002862  B0D8               	btfsc	status,0,c
  3621   002864  2B81               	incf	(___awdiv@dividend+1)& (0+255),f,b
  3622   002866                     
  3623                           ; BSR set to: 0
  3624   002866  0E01               	movlw	1
  3625   002868  1B85               	xorwf	___awdiv@sign& (0+255),f,b
  3626   00286A                     l7435:
  3627                           
  3628                           ; BSR set to: 0
  3629   00286A  0E00               	movlw	0
  3630   00286C  6F87               	movwf	(___awdiv@quotient+1)& (0+255),b
  3631   00286E  0E00               	movlw	0
  3632   002870  6F86               	movwf	___awdiv@quotient& (0+255),b
  3633   002872                     
  3634                           ; BSR set to: 0
  3635   002872  5182               	movf	___awdiv@divisor& (0+255),w,b
  3636   002874  1183               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  3637   002876  B4D8               	btfsc	status,2,c
  3638   002878  EF40  F014         	goto	u7051
  3639   00287C  EF42  F014         	goto	u7050
  3640   002880                     u7051:
  3641   002880  EF6A  F014         	goto	l7457
  3642   002884                     u7050:
  3643   002884                     
  3644                           ; BSR set to: 0
  3645   002884  0E01               	movlw	1
  3646   002886  6F84               	movwf	___awdiv@counter& (0+255),b
  3647   002888  EF4A  F014         	goto	l7443
  3648   00288C                     l7441:
  3649                           
  3650                           ; BSR set to: 0
  3651   00288C  90D8               	bcf	status,0,c
  3652   00288E  3782               	rlcf	___awdiv@divisor& (0+255),f,b
  3653   002890  3783               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  3654   002892  2B84               	incf	___awdiv@counter& (0+255),f,b
  3655   002894                     l7443:
  3656                           
  3657                           ; BSR set to: 0
  3658   002894  AF83               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  3659   002896  EF4F  F014         	goto	u7061
  3660   00289A  EF51  F014         	goto	u7060
  3661   00289E                     u7061:
  3662   00289E  EF46  F014         	goto	l7441
  3663   0028A2                     u7060:
  3664   0028A2                     l7445:
  3665                           
  3666                           ; BSR set to: 0
  3667   0028A2  90D8               	bcf	status,0,c
  3668   0028A4  3786               	rlcf	___awdiv@quotient& (0+255),f,b
  3669   0028A6  3787               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  3670   0028A8                     
  3671                           ; BSR set to: 0
  3672   0028A8  5182               	movf	___awdiv@divisor& (0+255),w,b
  3673   0028AA  5D80               	subwf	___awdiv@dividend& (0+255),w,b
  3674   0028AC  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3675   0028AE  5981               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  3676   0028B0  A0D8               	btfss	status,0,c
  3677   0028B2  EF5D  F014         	goto	u7071
  3678   0028B6  EF5F  F014         	goto	u7070
  3679   0028BA                     u7071:
  3680   0028BA  EF64  F014         	goto	l7453
  3681   0028BE                     u7070:
  3682   0028BE                     
  3683                           ; BSR set to: 0
  3684   0028BE  5182               	movf	___awdiv@divisor& (0+255),w,b
  3685   0028C0  5F80               	subwf	___awdiv@dividend& (0+255),f,b
  3686   0028C2  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3687   0028C4  5B81               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  3688   0028C6                     
  3689                           ; BSR set to: 0
  3690   0028C6  8186               	bsf	___awdiv@quotient& (0+255),0,b
  3691   0028C8                     l7453:
  3692                           
  3693                           ; BSR set to: 0
  3694   0028C8  90D8               	bcf	status,0,c
  3695   0028CA  3383               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  3696   0028CC  3382               	rrcf	___awdiv@divisor& (0+255),f,b
  3697   0028CE                     
  3698                           ; BSR set to: 0
  3699   0028CE  2F84               	decfsz	___awdiv@counter& (0+255),f,b
  3700   0028D0  EF51  F014         	goto	l7445
  3701   0028D4                     l7457:
  3702                           
  3703                           ; BSR set to: 0
  3704   0028D4  5185               	movf	___awdiv@sign& (0+255),w,b
  3705   0028D6  B4D8               	btfsc	status,2,c
  3706   0028D8  EF70  F014         	goto	u7081
  3707   0028DC  EF72  F014         	goto	u7080
  3708   0028E0                     u7081:
  3709   0028E0  EF76  F014         	goto	l7461
  3710   0028E4                     u7080:
  3711   0028E4                     
  3712                           ; BSR set to: 0
  3713   0028E4  6D86               	negf	___awdiv@quotient& (0+255),b
  3714   0028E6  1F87               	comf	(___awdiv@quotient+1)& (0+255),f,b
  3715   0028E8  B0D8               	btfsc	status,0,c
  3716   0028EA  2B87               	incf	(___awdiv@quotient+1)& (0+255),f,b
  3717   0028EC                     l7461:
  3718                           
  3719                           ; BSR set to: 0
  3720   0028EC  C086  F080         	movff	___awdiv@quotient,?___awdiv
  3721   0028F0  C087  F081         	movff	___awdiv@quotient+1,?___awdiv+1
  3722   0028F4                     
  3723                           ; BSR set to: 0
  3724   0028F4  0012               	return		;funcret
  3725   0028F6                     __end_of___awdiv:
  3726                           	callstack 0
  3727                           
  3728 ;; *************** function _memset *****************
  3729 ;; Defined at:
  3730 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\memset.c"
  3731 ;; Parameters:    Size  Location     Type
  3732 ;;  dest            2    0[BANK0 ] PTR void 
  3733 ;;		 -> adcres2txt(6), adcres1txt(6), 
  3734 ;;  c               2    2[BANK0 ] int 
  3735 ;;  n               2    4[BANK0 ] unsigned int 
  3736 ;; Auto vars:     Size  Location     Type
  3737 ;;  s               2   10[BANK0 ] PTR unsigned char 
  3738 ;;		 -> adcres2txt(6), adcres1txt(6), 
  3739 ;;  k               2    8[BANK0 ] unsigned int 
  3740 ;; Return value:  Size  Location     Type
  3741 ;;                  2    0[BANK0 ] PTR void 
  3742 ;; Registers used:
  3743 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3744 ;; Tracked objects:
  3745 ;;		On entry : 0/0
  3746 ;;		On exit  : 0/0
  3747 ;;		Unchanged: 0/0
  3748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3749 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3750 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3751 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3752 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3753 ;;Total ram usage:       12 bytes
  3754 ;; Hardware stack levels used: 1
  3755 ;; Hardware stack levels required when called: 4
  3756 ;; This function calls:
  3757 ;;		Nothing
  3758 ;; This function is called by:
  3759 ;;		_convert_uint16_to_string
  3760 ;;		_convert_uint8_to_string
  3761 ;;		_convert_uint32_to_string
  3762 ;; This function uses a non-reentrant model
  3763 ;;
  3764                           
  3765                           	psect	text19
  3766   001DC4                     __ptext19:
  3767                           	callstack 0
  3768   001DC4                     _memset:
  3769                           	callstack 25
  3770   001DC4  C080  F08A         	movff	memset@dest,memset@s
  3771   001DC8  C081  F08B         	movff	memset@dest+1,memset@s+1
  3772   001DCC  0100               	movlb	0	; () banked
  3773   001DCE  5184               	movf	memset@n& (0+255),w,b
  3774   001DD0  1185               	iorwf	(memset@n+1)& (0+255),w,b
  3775   001DD2  A4D8               	btfss	status,2,c
  3776   001DD4  EFEE  F00E         	goto	u7571
  3777   001DD8  EFF0  F00E         	goto	u7570
  3778   001DDC                     u7571:
  3779   001DDC  EFF2  F00E         	goto	l7877
  3780   001DE0                     u7570:
  3781   001DE0  EF9D  F00F         	goto	l2216
  3782   001DE4                     l7877:
  3783                           
  3784                           ; BSR set to: 0
  3785   001DE4  C08A  FFD9         	movff	memset@s,fsr2l
  3786   001DE8  C08B  FFDA         	movff	memset@s+1,fsr2h
  3787   001DEC  C082  FFDF         	movff	memset@c,indf2
  3788   001DF0                     
  3789                           ; BSR set to: 0
  3790   001DF0  5184               	movf	memset@n& (0+255),w,b
  3791   001DF2  258A               	addwf	memset@s& (0+255),w,b
  3792   001DF4  6F86               	movwf	??_memset& (0+255),b
  3793   001DF6  5185               	movf	(memset@n+1)& (0+255),w,b
  3794   001DF8  218B               	addwfc	(memset@s+1)& (0+255),w,b
  3795   001DFA  6F87               	movwf	(??_memset+1)& (0+255),b
  3796   001DFC  0EFF               	movlw	255
  3797   001DFE  2586               	addwf	??_memset& (0+255),w,b
  3798   001E00  6ED9               	movwf	fsr2l,c
  3799   001E02  0EFF               	movlw	255
  3800   001E04  2187               	addwfc	(??_memset+1)& (0+255),w,b
  3801   001E06  6EDA               	movwf	fsr2h,c
  3802   001E08  C082  FFDF         	movff	memset@c,indf2
  3803   001E0C  5185               	movf	(memset@n+1)& (0+255),w,b
  3804   001E0E  E107               	bnz	u7581
  3805   001E10  0E03               	movlw	3
  3806   001E12  5D84               	subwf	memset@n& (0+255),w,b
  3807   001E14  B0D8               	btfsc	status,0,c
  3808   001E16  EF0F  F00F         	goto	u7581
  3809   001E1A  EF11  F00F         	goto	u7580
  3810   001E1E                     u7581:
  3811   001E1E  EF13  F00F         	goto	l7883
  3812   001E22                     u7580:
  3813   001E22  EF9D  F00F         	goto	l2216
  3814   001E26                     l7883:
  3815                           
  3816                           ; BSR set to: 0
  3817   001E26  EE20 F001          	lfsr	2,1
  3818   001E2A  518A               	movf	memset@s& (0+255),w,b
  3819   001E2C  26D9               	addwf	fsr2l,f,c
  3820   001E2E  518B               	movf	(memset@s+1)& (0+255),w,b
  3821   001E30  22DA               	addwfc	fsr2h,f,c
  3822   001E32  C082  FFDF         	movff	memset@c,indf2
  3823   001E36  EE20 F002          	lfsr	2,2
  3824   001E3A  518A               	movf	memset@s& (0+255),w,b
  3825   001E3C  26D9               	addwf	fsr2l,f,c
  3826   001E3E  518B               	movf	(memset@s+1)& (0+255),w,b
  3827   001E40  22DA               	addwfc	fsr2h,f,c
  3828   001E42  C082  FFDF         	movff	memset@c,indf2
  3829   001E46  5184               	movf	memset@n& (0+255),w,b
  3830   001E48  258A               	addwf	memset@s& (0+255),w,b
  3831   001E4A  6F86               	movwf	??_memset& (0+255),b
  3832   001E4C  5185               	movf	(memset@n+1)& (0+255),w,b
  3833   001E4E  218B               	addwfc	(memset@s+1)& (0+255),w,b
  3834   001E50  6F87               	movwf	(??_memset+1)& (0+255),b
  3835   001E52  0EFE               	movlw	254
  3836   001E54  2586               	addwf	??_memset& (0+255),w,b
  3837   001E56  6ED9               	movwf	fsr2l,c
  3838   001E58  0EFF               	movlw	255
  3839   001E5A  2187               	addwfc	(??_memset+1)& (0+255),w,b
  3840   001E5C  6EDA               	movwf	fsr2h,c
  3841   001E5E  C082  FFDF         	movff	memset@c,indf2
  3842   001E62  5184               	movf	memset@n& (0+255),w,b
  3843   001E64  258A               	addwf	memset@s& (0+255),w,b
  3844   001E66  6F86               	movwf	??_memset& (0+255),b
  3845   001E68  5185               	movf	(memset@n+1)& (0+255),w,b
  3846   001E6A  218B               	addwfc	(memset@s+1)& (0+255),w,b
  3847   001E6C  6F87               	movwf	(??_memset+1)& (0+255),b
  3848   001E6E  0EFD               	movlw	253
  3849   001E70  2586               	addwf	??_memset& (0+255),w,b
  3850   001E72  6ED9               	movwf	fsr2l,c
  3851   001E74  0EFF               	movlw	255
  3852   001E76  2187               	addwfc	(??_memset+1)& (0+255),w,b
  3853   001E78  6EDA               	movwf	fsr2h,c
  3854   001E7A  C082  FFDF         	movff	memset@c,indf2
  3855   001E7E                     
  3856                           ; BSR set to: 0
  3857   001E7E  5185               	movf	(memset@n+1)& (0+255),w,b
  3858   001E80  E107               	bnz	u7591
  3859   001E82  0E07               	movlw	7
  3860   001E84  5D84               	subwf	memset@n& (0+255),w,b
  3861   001E86  B0D8               	btfsc	status,0,c
  3862   001E88  EF48  F00F         	goto	u7591
  3863   001E8C  EF4A  F00F         	goto	u7590
  3864   001E90                     u7591:
  3865   001E90  EF4C  F00F         	goto	l7889
  3866   001E94                     u7590:
  3867   001E94  EF9D  F00F         	goto	l2216
  3868   001E98                     l7889:
  3869                           
  3870                           ; BSR set to: 0
  3871   001E98  EE20 F003          	lfsr	2,3
  3872   001E9C  518A               	movf	memset@s& (0+255),w,b
  3873   001E9E  26D9               	addwf	fsr2l,f,c
  3874   001EA0  518B               	movf	(memset@s+1)& (0+255),w,b
  3875   001EA2  22DA               	addwfc	fsr2h,f,c
  3876   001EA4  C082  FFDF         	movff	memset@c,indf2
  3877   001EA8  5184               	movf	memset@n& (0+255),w,b
  3878   001EAA  258A               	addwf	memset@s& (0+255),w,b
  3879   001EAC  6F86               	movwf	??_memset& (0+255),b
  3880   001EAE  5185               	movf	(memset@n+1)& (0+255),w,b
  3881   001EB0  218B               	addwfc	(memset@s+1)& (0+255),w,b
  3882   001EB2  6F87               	movwf	(??_memset+1)& (0+255),b
  3883   001EB4  0EFC               	movlw	252
  3884   001EB6  2586               	addwf	??_memset& (0+255),w,b
  3885   001EB8  6ED9               	movwf	fsr2l,c
  3886   001EBA  0EFF               	movlw	255
  3887   001EBC  2187               	addwfc	(??_memset+1)& (0+255),w,b
  3888   001EBE  6EDA               	movwf	fsr2h,c
  3889   001EC0  C082  FFDF         	movff	memset@c,indf2
  3890   001EC4                     
  3891                           ; BSR set to: 0
  3892   001EC4  5185               	movf	(memset@n+1)& (0+255),w,b
  3893   001EC6  E107               	bnz	u7601
  3894   001EC8  0E09               	movlw	9
  3895   001ECA  5D84               	subwf	memset@n& (0+255),w,b
  3896   001ECC  B0D8               	btfsc	status,0,c
  3897   001ECE  EF6B  F00F         	goto	u7601
  3898   001ED2  EF6D  F00F         	goto	u7600
  3899   001ED6                     u7601:
  3900   001ED6  EF6F  F00F         	goto	l7895
  3901   001EDA                     u7600:
  3902   001EDA  EF9D  F00F         	goto	l2216
  3903   001EDE                     l7895:
  3904                           
  3905                           ; BSR set to: 0
  3906   001EDE  C08A  F086         	movff	memset@s,??_memset
  3907   001EE2  C08B  F087         	movff	memset@s+1,??_memset+1
  3908   001EE6  1F86               	comf	??_memset& (0+255),f,b
  3909   001EE8  1F87               	comf	(??_memset+1)& (0+255),f,b
  3910   001EEA  4B86               	infsnz	??_memset& (0+255),f,b
  3911   001EEC  2B87               	incf	(??_memset+1)& (0+255),f,b
  3912   001EEE  0E03               	movlw	3
  3913   001EF0  1586               	andwf	??_memset& (0+255),w,b
  3914   001EF2  6F88               	movwf	memset@k& (0+255),b
  3915   001EF4  6B89               	clrf	(memset@k+1)& (0+255),b
  3916   001EF6  5188               	movf	memset@k& (0+255),w,b
  3917   001EF8  278A               	addwf	memset@s& (0+255),f,b
  3918   001EFA  5189               	movf	(memset@k+1)& (0+255),w,b
  3919   001EFC  238B               	addwfc	(memset@s+1)& (0+255),f,b
  3920   001EFE  5188               	movf	memset@k& (0+255),w,b
  3921   001F00  5F84               	subwf	memset@n& (0+255),f,b
  3922   001F02  5189               	movf	(memset@k+1)& (0+255),w,b
  3923   001F04  5B85               	subwfb	(memset@n+1)& (0+255),f,b
  3924   001F06  0EFC               	movlw	252
  3925   001F08  1784               	andwf	memset@n& (0+255),f,b
  3926   001F0A  0EFF               	movlw	255
  3927   001F0C  1785               	andwf	(memset@n+1)& (0+255),f,b
  3928   001F0E  EF94  F00F         	goto	l7903
  3929   001F12                     l7897:
  3930                           
  3931                           ; BSR set to: 0
  3932   001F12  C08A  FFD9         	movff	memset@s,fsr2l
  3933   001F16  C08B  FFDA         	movff	memset@s+1,fsr2h
  3934   001F1A  C082  FFDF         	movff	memset@c,indf2
  3935   001F1E                     
  3936                           ; BSR set to: 0
  3937   001F1E  0784               	decf	memset@n& (0+255),f,b
  3938   001F20  A0D8               	btfss	status,0,c
  3939   001F22  0785               	decf	(memset@n+1)& (0+255),f,b
  3940   001F24                     
  3941                           ; BSR set to: 0
  3942   001F24  4B8A               	infsnz	memset@s& (0+255),f,b
  3943   001F26  2B8B               	incf	(memset@s+1)& (0+255),f,b
  3944   001F28                     l7903:
  3945                           
  3946                           ; BSR set to: 0
  3947   001F28  5184               	movf	memset@n& (0+255),w,b
  3948   001F2A  1185               	iorwf	(memset@n+1)& (0+255),w,b
  3949   001F2C  A4D8               	btfss	status,2,c
  3950   001F2E  EF9B  F00F         	goto	u7611
  3951   001F32  EF9D  F00F         	goto	u7610
  3952   001F36                     u7611:
  3953   001F36  EF89  F00F         	goto	l7897
  3954   001F3A                     u7610:
  3955   001F3A                     l2216:
  3956                           
  3957                           ; BSR set to: 0
  3958   001F3A  0012               	return		;funcret
  3959   001F3C                     __end_of_memset:
  3960                           	callstack 0
  3961                           
  3962 ;; *************** function _application_initialization *****************
  3963 ;; Defined at:
  3964 ;;		line 133 in file "application.c"
  3965 ;; Parameters:    Size  Location     Type
  3966 ;;		None
  3967 ;; Auto vars:     Size  Location     Type
  3968 ;;		None
  3969 ;; Return value:  Size  Location     Type
  3970 ;;                  1    wreg      void 
  3971 ;; Registers used:
  3972 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3973 ;; Tracked objects:
  3974 ;;		On entry : 0/0
  3975 ;;		On exit  : 0/0
  3976 ;;		Unchanged: 0/0
  3977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3982 ;;Total ram usage:        0 bytes
  3983 ;; Hardware stack levels used: 1
  3984 ;; Hardware stack levels required when called: 8
  3985 ;; This function calls:
  3986 ;;		_ADC_Init
  3987 ;;		_dc_motor_initialization
  3988 ;;		_lcd_4bit_initialize
  3989 ;; This function is called by:
  3990 ;;		_main
  3991 ;; This function uses a non-reentrant model
  3992 ;;
  3993                           
  3994                           	psect	text20
  3995   0032E2                     __ptext20:
  3996                           	callstack 0
  3997   0032E2                     _application_initialization:
  3998                           	callstack 22
  3999   0032E2                     
  4000                           ;application.c: 134:     lcd_4bit_initialize(&lcd1);
  4001   0032E2  0EF5               	movlw	low _lcd1
  4002   0032E4  0100               	movlb	0	; () banked
  4003   0032E6  6F92               	movwf	lcd_4bit_initialize@lcd& (0+255),b
  4004   0032E8  0E00               	movlw	high _lcd1
  4005   0032EA  6F93               	movwf	(lcd_4bit_initialize@lcd+1)& (0+255),b
  4006   0032EC  EC43  F010         	call	_lcd_4bit_initialize	;wreg free
  4007   0032F0                     
  4008                           ;application.c: 135:     ADC_Init(&adc_1);
  4009   0032F0  0E52               	movlw	low _adc_1
  4010   0032F2  0100               	movlb	0	; () banked
  4011   0032F4  6F83               	movwf	ADC_Init@_adc& (0+255),b
  4012   0032F6  0E01               	movlw	high _adc_1
  4013   0032F8  6F84               	movwf	(ADC_Init@_adc+1)& (0+255),b
  4014   0032FA  ECE3  F010         	call	_ADC_Init	;wreg free
  4015   0032FE                     
  4016                           ;application.c: 136:     dc_motor_initialization(&motor1);
  4017   0032FE  0EFD               	movlw	low _motor1
  4018   003300  0100               	movlb	0	; () banked
  4019   003302  6F8E               	movwf	dc_motor_initialization@_dc_motor& (0+255),b
  4020   003304  0E00               	movlw	high _motor1
  4021   003306  6F8F               	movwf	(dc_motor_initialization@_dc_motor+1)& (0+255),b
  4022   003308  EC33  F019         	call	_dc_motor_initialization	;wreg free
  4023   00330C                     
  4024                           ;application.c: 137:     dc_motor_initialization(&motor2);
  4025   00330C  0EFB               	movlw	low _motor2
  4026   00330E  0100               	movlb	0	; () banked
  4027   003310  6F8E               	movwf	dc_motor_initialization@_dc_motor& (0+255),b
  4028   003312  0E00               	movlw	high _motor2
  4029   003314  6F8F               	movwf	(dc_motor_initialization@_dc_motor+1)& (0+255),b
  4030   003316  EC33  F019         	call	_dc_motor_initialization	;wreg free
  4031   00331A  0012               	return		;funcret
  4032   00331C                     __end_of_application_initialization:
  4033                           	callstack 0
  4034                           
  4035 ;; *************** function _lcd_4bit_initialize *****************
  4036 ;; Defined at:
  4037 ;;		line 22 in file "ECU_layer/Chr_LCD/ecu_chr_lcd.c"
  4038 ;; Parameters:    Size  Location     Type
  4039 ;;  lcd             2   18[BANK0 ] PTR const struct .
  4040 ;;		 -> lcd1(6), 
  4041 ;; Auto vars:     Size  Location     Type
  4042 ;;  ret             1   23[BANK0 ] unsigned char 
  4043 ;;  counter         1   22[BANK0 ] unsigned char 
  4044 ;; Return value:  Size  Location     Type
  4045 ;;                  1    wreg      unsigned char 
  4046 ;; Registers used:
  4047 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4048 ;; Tracked objects:
  4049 ;;		On entry : 0/0
  4050 ;;		On exit  : 0/0
  4051 ;;		Unchanged: 0/0
  4052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4053 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4054 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4055 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4056 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4057 ;;Total ram usage:        6 bytes
  4058 ;; Hardware stack levels used: 1
  4059 ;; Hardware stack levels required when called: 7
  4060 ;; This function calls:
  4061 ;;		_gpio_pin_initialize
  4062 ;;		_lcd_4bit_send_command
  4063 ;; This function is called by:
  4064 ;;		_application_initialization
  4065 ;;		_ecu_initialization
  4066 ;; This function uses a non-reentrant model
  4067 ;;
  4068                           
  4069                           	psect	text21
  4070   002086                     __ptext21:
  4071                           	callstack 0
  4072   002086                     _lcd_4bit_initialize:
  4073                           	callstack 22
  4074   002086                     
  4075                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 24: uint8 counter = 0;
  4076   002086  0E00               	movlw	0
  4077   002088  0100               	movlb	0	; () banked
  4078   00208A  6F96               	movwf	lcd_4bit_initialize@counter& (0+255),b
  4079   00208C                     
  4080                           ; BSR set to: 0
  4081                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 25:     if( ((void*)0) == lcd){
  4082   00208C  5192               	movf	lcd_4bit_initialize@lcd& (0+255),w,b
  4083   00208E  1193               	iorwf	(lcd_4bit_initialize@lcd+1)& (0+255),w,b
  4084   002090  A4D8               	btfss	status,2,c
  4085   002092  EF4D  F010         	goto	u7471
  4086   002096  EF4F  F010         	goto	u7470
  4087   00209A                     u7471:
  4088   00209A  EF51  F010         	goto	l7759
  4089   00209E                     u7470:
  4090   00209E                     
  4091                           ; BSR set to: 0
  4092                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 27:     }
  4093   00209E  EFE2  F010         	goto	l55
  4094   0020A2                     l7759:
  4095                           
  4096                           ; BSR set to: 0
  4097                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 29:         ret = gpio_pin_initialize(&(lcd->lcd_rs));
  4098   0020A2  C092  F08A         	movff	lcd_4bit_initialize@lcd,gpio_pin_initialize@_pin_config
  4099   0020A6  C093  F08B         	movff	lcd_4bit_initialize@lcd+1,gpio_pin_initialize@_pin_config+1
  4100   0020AA  ECD7  F017         	call	_gpio_pin_initialize	;wreg free
  4101   0020AE  0100               	movlb	0	; () banked
  4102   0020B0  6F97               	movwf	lcd_4bit_initialize@ret& (0+255),b
  4103                           
  4104                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 30:         ret = gpio_pin_initialize(&(lcd->lcd_en));
  4105   0020B2  0E01               	movlw	1
  4106   0020B4  2592               	addwf	lcd_4bit_initialize@lcd& (0+255),w,b
  4107   0020B6  6F8A               	movwf	gpio_pin_initialize@_pin_config& (0+255),b
  4108   0020B8  0E00               	movlw	0
  4109   0020BA  2193               	addwfc	(lcd_4bit_initialize@lcd+1)& (0+255),w,b
  4110   0020BC  6F8B               	movwf	(gpio_pin_initialize@_pin_config+1)& (0+255),b
  4111   0020BE  ECD7  F017         	call	_gpio_pin_initialize	;wreg free
  4112   0020C2  0100               	movlb	0	; () banked
  4113   0020C4  6F97               	movwf	lcd_4bit_initialize@ret& (0+255),b
  4114   0020C6                     
  4115                           ; BSR set to: 0
  4116                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 32:         for(counter=0;counter<4;counter++){
  4117   0020C6  0E00               	movlw	0
  4118   0020C8  6F96               	movwf	lcd_4bit_initialize@counter& (0+255),b
  4119   0020CA                     l7767:
  4120                           
  4121                           ; BSR set to: 0
  4122   0020CA  5196               	movf	lcd_4bit_initialize@counter& (0+255),w,b
  4123   0020CC  2592               	addwf	lcd_4bit_initialize@lcd& (0+255),w,b
  4124   0020CE  6F94               	movwf	??_lcd_4bit_initialize& (0+255),b
  4125   0020D0  0E00               	movlw	0
  4126   0020D2  2193               	addwfc	(lcd_4bit_initialize@lcd+1)& (0+255),w,b
  4127   0020D4  6F95               	movwf	(??_lcd_4bit_initialize+1)& (0+255),b
  4128   0020D6  0E02               	movlw	2
  4129   0020D8  2594               	addwf	??_lcd_4bit_initialize& (0+255),w,b
  4130   0020DA  6F8A               	movwf	gpio_pin_initialize@_pin_config& (0+255),b
  4131   0020DC  0E00               	movlw	0
  4132   0020DE  2195               	addwfc	(??_lcd_4bit_initialize+1)& (0+255),w,b
  4133   0020E0  6F8B               	movwf	(gpio_pin_initialize@_pin_config+1)& (0+255),b
  4134   0020E2  ECD7  F017         	call	_gpio_pin_initialize	;wreg free
  4135   0020E6                     
  4136                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 34:         }
  4137   0020E6  0100               	movlb	0	; () banked
  4138   0020E8  2B96               	incf	lcd_4bit_initialize@counter& (0+255),f,b
  4139   0020EA                     
  4140                           ; BSR set to: 0
  4141   0020EA  0E03               	movlw	3
  4142   0020EC  6596               	cpfsgt	lcd_4bit_initialize@counter& (0+255),b
  4143   0020EE  EF7B  F010         	goto	u7481
  4144   0020F2  EF7D  F010         	goto	u7480
  4145   0020F6                     u7481:
  4146   0020F6  EF65  F010         	goto	l7767
  4147   0020FA                     u7480:
  4148   0020FA                     
  4149                           ; BSR set to: 0
  4150                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 35:         _delay((unsigned long)((20)*(4000000UL/400
      +                          0.0)));
  4151   0020FA  0E1A               	movlw	26
  4152   0020FC  0100               	movlb	0	; () banked
  4153   0020FE  6F94               	movwf	??_lcd_4bit_initialize& (0+255),b
  4154   002100  0EF8               	movlw	248
  4155   002102                     u8457:
  4156   002102  2EE8               	decfsz	wreg,f,c
  4157   002104  D7FE               	bra	u8457
  4158   002106  2F94               	decfsz	??_lcd_4bit_initialize& (0+255),f,b
  4159   002108  D7FC               	bra	u8457
  4160   00210A  F000               	nop	
  4161   00210C  C092  F08E         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  4162   002110  C093  F08F         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  4163   002114  0E38               	movlw	56
  4164   002116  0100               	movlb	0	; () banked
  4165   002118  6F90               	movwf	lcd_4bit_send_command@command& (0+255),b
  4166   00211A  EC98  F017         	call	_lcd_4bit_send_command	;wreg free
  4167   00211E                     
  4168                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 37:         _delay((unsigned long)((5)*(4000000UL/4000
      +                          .0)));
  4169   00211E  0E07               	movlw	7
  4170   002120  0100               	movlb	0	; () banked
  4171   002122  6F94               	movwf	??_lcd_4bit_initialize& (0+255),b
  4172   002124  0E7D               	movlw	125
  4173   002126                     u8467:
  4174   002126  2EE8               	decfsz	wreg,f,c
  4175   002128  D7FE               	bra	u8467
  4176   00212A  2F94               	decfsz	??_lcd_4bit_initialize& (0+255),f,b
  4177   00212C  D7FC               	bra	u8467
  4178   00212E  C092  F08E         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  4179   002132  C093  F08F         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  4180   002136  0E38               	movlw	56
  4181   002138  0100               	movlb	0	; () banked
  4182   00213A  6F90               	movwf	lcd_4bit_send_command@command& (0+255),b
  4183   00213C  EC98  F017         	call	_lcd_4bit_send_command	;wreg free
  4184   002140                     
  4185                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 39:         _delay((unsigned long)((150)*(4000000UL/40
      +                          00000.0)));
  4186   002140  0E32               	movlw	50
  4187   002142                     u8477:
  4188   002142  2EE8               	decfsz	wreg,f,c
  4189   002144  D7FE               	bra	u8477
  4190   002146  C092  F08E         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  4191   00214A  C093  F08F         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  4192   00214E  0E38               	movlw	56
  4193   002150  0100               	movlb	0	; () banked
  4194   002152  6F90               	movwf	lcd_4bit_send_command@command& (0+255),b
  4195   002154  EC98  F017         	call	_lcd_4bit_send_command	;wreg free
  4196   002158  C092  F08E         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  4197   00215C  C093  F08F         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  4198   002160  0E01               	movlw	1
  4199   002162  0100               	movlb	0	; () banked
  4200   002164  6F90               	movwf	lcd_4bit_send_command@command& (0+255),b
  4201   002166  EC98  F017         	call	_lcd_4bit_send_command	;wreg free
  4202   00216A  C092  F08E         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  4203   00216E  C093  F08F         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  4204   002172  0E02               	movlw	2
  4205   002174  0100               	movlb	0	; () banked
  4206   002176  6F90               	movwf	lcd_4bit_send_command@command& (0+255),b
  4207   002178  EC98  F017         	call	_lcd_4bit_send_command	;wreg free
  4208   00217C  C092  F08E         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  4209   002180  C093  F08F         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  4210   002184  0E06               	movlw	6
  4211   002186  0100               	movlb	0	; () banked
  4212   002188  6F90               	movwf	lcd_4bit_send_command@command& (0+255),b
  4213   00218A  EC98  F017         	call	_lcd_4bit_send_command	;wreg free
  4214   00218E  C092  F08E         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  4215   002192  C093  F08F         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  4216   002196  0E0C               	movlw	12
  4217   002198  0100               	movlb	0	; () banked
  4218   00219A  6F90               	movwf	lcd_4bit_send_command@command& (0+255),b
  4219   00219C  EC98  F017         	call	_lcd_4bit_send_command	;wreg free
  4220   0021A0  C092  F08E         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  4221   0021A4  C093  F08F         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  4222   0021A8  0E28               	movlw	40
  4223   0021AA  0100               	movlb	0	; () banked
  4224   0021AC  6F90               	movwf	lcd_4bit_send_command@command& (0+255),b
  4225   0021AE  EC98  F017         	call	_lcd_4bit_send_command	;wreg free
  4226   0021B2  C092  F08E         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  4227   0021B6  C093  F08F         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  4228   0021BA  0E80               	movlw	128
  4229   0021BC  0100               	movlb	0	; () banked
  4230   0021BE  6F90               	movwf	lcd_4bit_send_command@command& (0+255),b
  4231   0021C0  EC98  F017         	call	_lcd_4bit_send_command	;wreg free
  4232   0021C4                     l55:
  4233   0021C4  0012               	return		;funcret
  4234   0021C6                     __end_of_lcd_4bit_initialize:
  4235                           	callstack 0
  4236                           
  4237 ;; *************** function _lcd_4bit_send_command *****************
  4238 ;; Defined at:
  4239 ;;		line 58 in file "ECU_layer/Chr_LCD/ecu_chr_lcd.c"
  4240 ;; Parameters:    Size  Location     Type
  4241 ;;  lcd             2   14[BANK0 ] PTR const struct .
  4242 ;;		 -> lcd1(6), 
  4243 ;;  command         1   16[BANK0 ] unsigned char 
  4244 ;; Auto vars:     Size  Location     Type
  4245 ;;  ret             1   17[BANK0 ] unsigned char 
  4246 ;; Return value:  Size  Location     Type
  4247 ;;                  1    wreg      unsigned char 
  4248 ;; Registers used:
  4249 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4250 ;; Tracked objects:
  4251 ;;		On entry : 0/0
  4252 ;;		On exit  : 0/0
  4253 ;;		Unchanged: 0/0
  4254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4255 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4256 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4258 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4259 ;;Total ram usage:        4 bytes
  4260 ;; Hardware stack levels used: 1
  4261 ;; Hardware stack levels required when called: 6
  4262 ;; This function calls:
  4263 ;;		_gpio_pin_write_logic
  4264 ;;		_lcd_4bit_send_enable_signal
  4265 ;;		_send_4bits
  4266 ;; This function is called by:
  4267 ;;		_lcd_4bit_initialize
  4268 ;;		_lcd_4bit_send_set_cursor
  4269 ;;		_main
  4270 ;;		_lcd_4bit_send_custom_char
  4271 ;; This function uses a non-reentrant model
  4272 ;;
  4273                           
  4274                           	psect	text22
  4275   002F30                     __ptext22:
  4276                           	callstack 0
  4277   002F30                     _lcd_4bit_send_command:
  4278                           	callstack 24
  4279   002F30                     
  4280                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 60:     if( ((void*)0) == lcd){
  4281   002F30  0100               	movlb	0	; () banked
  4282   002F32  518E               	movf	lcd_4bit_send_command@lcd& (0+255),w,b
  4283   002F34  118F               	iorwf	(lcd_4bit_send_command@lcd+1)& (0+255),w,b
  4284   002F36  A4D8               	btfss	status,2,c
  4285   002F38  EFA0  F017         	goto	u7441
  4286   002F3C  EFA2  F017         	goto	u7440
  4287   002F40                     u7441:
  4288   002F40  EFA6  F017         	goto	l7689
  4289   002F44                     u7440:
  4290   002F44                     
  4291                           ; BSR set to: 0
  4292                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 61:         ret=(Std_ReturnType)0x00;
  4293   002F44  0E00               	movlw	0
  4294   002F46  6F91               	movwf	lcd_4bit_send_command@ret& (0+255),b
  4295                           
  4296                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 62:     }
  4297   002F48  EFD5  F017         	goto	l7691
  4298   002F4C                     l7689:
  4299                           
  4300                           ; BSR set to: 0
  4301                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 64:     ret = gpio_pin_write_logic(&(lcd->lcd_rs),GPIO
      +                          _LOW);
  4302   002F4C  C08E  F080         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@_pin_config
  4303   002F50  C08F  F081         	movff	lcd_4bit_send_command@lcd+1,gpio_pin_write_logic@_pin_config+1
  4304   002F54  0E00               	movlw	0
  4305   002F56  6F82               	movwf	gpio_pin_write_logic@logic& (0+255),b
  4306   002F58  EC7F  F011         	call	_gpio_pin_write_logic	;wreg free
  4307   002F5C  0100               	movlb	0	; () banked
  4308   002F5E  6F91               	movwf	lcd_4bit_send_command@ret& (0+255),b
  4309                           
  4310                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 65:     ret = send_4bits(lcd,command >> 4);
  4311   002F60  C08E  F08A         	movff	lcd_4bit_send_command@lcd,send_4bits@lcd
  4312   002F64  C08F  F08B         	movff	lcd_4bit_send_command@lcd+1,send_4bits@lcd+1
  4313   002F68  3990               	swapf	lcd_4bit_send_command@command& (0+255),w,b
  4314   002F6A  0B0F               	andlw	15
  4315   002F6C  6F8C               	movwf	send_4bits@command& (0+255),b
  4316   002F6E  EC8A  F016         	call	_send_4bits	;wreg free
  4317   002F72  0100               	movlb	0	; () banked
  4318   002F74  6F91               	movwf	lcd_4bit_send_command@ret& (0+255),b
  4319                           
  4320                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 66:     ret =lcd_4bit_send_enable_signal(lcd);
  4321   002F76  C08E  F08A         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  4322   002F7A  C08F  F08B         	movff	lcd_4bit_send_command@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  4323   002F7E  EC8E  F019         	call	_lcd_4bit_send_enable_signal	;wreg free
  4324   002F82  0100               	movlb	0	; () banked
  4325   002F84  6F91               	movwf	lcd_4bit_send_command@ret& (0+255),b
  4326                           
  4327                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 67:     ret = send_4bits(lcd,command);
  4328   002F86  C08E  F08A         	movff	lcd_4bit_send_command@lcd,send_4bits@lcd
  4329   002F8A  C08F  F08B         	movff	lcd_4bit_send_command@lcd+1,send_4bits@lcd+1
  4330   002F8E  C090  F08C         	movff	lcd_4bit_send_command@command,send_4bits@command
  4331   002F92  EC8A  F016         	call	_send_4bits	;wreg free
  4332   002F96  0100               	movlb	0	; () banked
  4333   002F98  6F91               	movwf	lcd_4bit_send_command@ret& (0+255),b
  4334                           
  4335                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 68:     ret =lcd_4bit_send_enable_signal(lcd);
  4336   002F9A  C08E  F08A         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  4337   002F9E  C08F  F08B         	movff	lcd_4bit_send_command@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  4338   002FA2  EC8E  F019         	call	_lcd_4bit_send_enable_signal	;wreg free
  4339   002FA6  0100               	movlb	0	; () banked
  4340   002FA8  6F91               	movwf	lcd_4bit_send_command@ret& (0+255),b
  4341   002FAA                     l7691:
  4342                           
  4343                           ; BSR set to: 0
  4344                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 71:     return ret;
  4345   002FAA  5191               	movf	lcd_4bit_send_command@ret& (0+255),w,b
  4346   002FAC                     
  4347                           ; BSR set to: 0
  4348   002FAC  0012               	return		;funcret
  4349   002FAE                     __end_of_lcd_4bit_send_command:
  4350                           	callstack 0
  4351                           
  4352 ;; *************** function _send_4bits *****************
  4353 ;; Defined at:
  4354 ;;		line 425 in file "ECU_layer/Chr_LCD/ecu_chr_lcd.c"
  4355 ;; Parameters:    Size  Location     Type
  4356 ;;  lcd             2   10[BANK0 ] PTR const struct .
  4357 ;;		 -> lcd1(6), 
  4358 ;;  command         1   12[BANK0 ] unsigned char 
  4359 ;; Auto vars:     Size  Location     Type
  4360 ;;  ret             1   13[BANK0 ] unsigned char 
  4361 ;; Return value:  Size  Location     Type
  4362 ;;                  1    wreg      unsigned char 
  4363 ;; Registers used:
  4364 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4365 ;; Tracked objects:
  4366 ;;		On entry : 0/0
  4367 ;;		On exit  : 0/0
  4368 ;;		Unchanged: 0/0
  4369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4370 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4371 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4373 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4374 ;;Total ram usage:        4 bytes
  4375 ;; Hardware stack levels used: 1
  4376 ;; Hardware stack levels required when called: 5
  4377 ;; This function calls:
  4378 ;;		_gpio_pin_write_logic
  4379 ;; This function is called by:
  4380 ;;		_lcd_4bit_send_command
  4381 ;;		_lcd_4bit_char_data
  4382 ;; This function uses a non-reentrant model
  4383 ;;
  4384                           
  4385                           	psect	text23
  4386   002D14                     __ptext23:
  4387                           	callstack 0
  4388   002D14                     _send_4bits:
  4389                           	callstack 24
  4390   002D14                     
  4391                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 427:     if( ((void*)0) == lcd){
  4392   002D14  0100               	movlb	0	; () banked
  4393   002D16  518A               	movf	send_4bits@lcd& (0+255),w,b
  4394   002D18  118B               	iorwf	(send_4bits@lcd+1)& (0+255),w,b
  4395   002D1A  A4D8               	btfss	status,2,c
  4396   002D1C  EF92  F016         	goto	u7381
  4397   002D20  EF94  F016         	goto	u7380
  4398   002D24                     u7381:
  4399   002D24  EF98  F016         	goto	l7623
  4400   002D28                     u7380:
  4401   002D28                     
  4402                           ; BSR set to: 0
  4403                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 428:         ret=(Std_ReturnType)0x00;
  4404   002D28  0E00               	movlw	0
  4405   002D2A  6F8D               	movwf	send_4bits@ret& (0+255),b
  4406                           
  4407                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 429:     }
  4408   002D2C  EFD1  F016         	goto	l7625
  4409   002D30                     l7623:
  4410                           
  4411                           ; BSR set to: 0
  4412                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 431:         ret = gpio_pin_write_logic(&(lcd->lcd_dat
      +                          a[0]),(command >> 0) & (uint8)0x01);
  4413   002D30  0E02               	movlw	2
  4414   002D32  258A               	addwf	send_4bits@lcd& (0+255),w,b
  4415   002D34  6F80               	movwf	gpio_pin_write_logic@_pin_config& (0+255),b
  4416   002D36  0E00               	movlw	0
  4417   002D38  218B               	addwfc	(send_4bits@lcd+1)& (0+255),w,b
  4418   002D3A  6F81               	movwf	(gpio_pin_write_logic@_pin_config+1)& (0+255),b
  4419   002D3C  518C               	movf	send_4bits@command& (0+255),w,b
  4420   002D3E  0B01               	andlw	1
  4421   002D40  6F82               	movwf	gpio_pin_write_logic@logic& (0+255),b
  4422   002D42  EC7F  F011         	call	_gpio_pin_write_logic	;wreg free
  4423   002D46  0100               	movlb	0	; () banked
  4424   002D48  6F8D               	movwf	send_4bits@ret& (0+255),b
  4425                           
  4426                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 432:         ret = gpio_pin_write_logic(&(lcd->lcd_dat
      +                          a[1]),(command >> 1) & (uint8)0x01);
  4427   002D4A  0E03               	movlw	3
  4428   002D4C  258A               	addwf	send_4bits@lcd& (0+255),w,b
  4429   002D4E  6F80               	movwf	gpio_pin_write_logic@_pin_config& (0+255),b
  4430   002D50  0E00               	movlw	0
  4431   002D52  218B               	addwfc	(send_4bits@lcd+1)& (0+255),w,b
  4432   002D54  6F81               	movwf	(gpio_pin_write_logic@_pin_config+1)& (0+255),b
  4433   002D56  90D8               	bcf	status,0,c
  4434   002D58  318C               	rrcf	send_4bits@command& (0+255),w,b
  4435   002D5A  0B01               	andlw	1
  4436   002D5C  6F82               	movwf	gpio_pin_write_logic@logic& (0+255),b
  4437   002D5E  EC7F  F011         	call	_gpio_pin_write_logic	;wreg free
  4438   002D62  0100               	movlb	0	; () banked
  4439   002D64  6F8D               	movwf	send_4bits@ret& (0+255),b
  4440                           
  4441                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 433:         ret = gpio_pin_write_logic(&(lcd->lcd_dat
      +                          a[2]),(command >> 2) & (uint8)0x01);
  4442   002D66  0E04               	movlw	4
  4443   002D68  258A               	addwf	send_4bits@lcd& (0+255),w,b
  4444   002D6A  6F80               	movwf	gpio_pin_write_logic@_pin_config& (0+255),b
  4445   002D6C  0E00               	movlw	0
  4446   002D6E  218B               	addwfc	(send_4bits@lcd+1)& (0+255),w,b
  4447   002D70  6F81               	movwf	(gpio_pin_write_logic@_pin_config+1)& (0+255),b
  4448   002D72  418C               	rrncf	send_4bits@command& (0+255),w,b
  4449   002D74  42E8               	rrncf	wreg,f,c
  4450   002D76  0B3F               	andlw	63
  4451   002D78  0B01               	andlw	1
  4452   002D7A  6F82               	movwf	gpio_pin_write_logic@logic& (0+255),b
  4453   002D7C  EC7F  F011         	call	_gpio_pin_write_logic	;wreg free
  4454   002D80  0100               	movlb	0	; () banked
  4455   002D82  6F8D               	movwf	send_4bits@ret& (0+255),b
  4456                           
  4457                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 434:         ret = gpio_pin_write_logic(&(lcd->lcd_dat
      +                          a[3]),(command >> 3) & (uint8)0x01);
  4458   002D84  0E05               	movlw	5
  4459   002D86  258A               	addwf	send_4bits@lcd& (0+255),w,b
  4460   002D88  6F80               	movwf	gpio_pin_write_logic@_pin_config& (0+255),b
  4461   002D8A  0E00               	movlw	0
  4462   002D8C  218B               	addwfc	(send_4bits@lcd+1)& (0+255),w,b
  4463   002D8E  6F81               	movwf	(gpio_pin_write_logic@_pin_config+1)& (0+255),b
  4464   002D90  398C               	swapf	send_4bits@command& (0+255),w,b
  4465   002D92  46E8               	rlncf	wreg,f,c
  4466   002D94  0B1F               	andlw	31
  4467   002D96  0B01               	andlw	1
  4468   002D98  6F82               	movwf	gpio_pin_write_logic@logic& (0+255),b
  4469   002D9A  EC7F  F011         	call	_gpio_pin_write_logic	;wreg free
  4470   002D9E  0100               	movlb	0	; () banked
  4471   002DA0  6F8D               	movwf	send_4bits@ret& (0+255),b
  4472   002DA2                     l7625:
  4473                           
  4474                           ; BSR set to: 0
  4475                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 436:     return ret;
  4476   002DA2  518D               	movf	send_4bits@ret& (0+255),w,b
  4477   002DA4                     
  4478                           ; BSR set to: 0
  4479   002DA4  0012               	return		;funcret
  4480   002DA6                     __end_of_send_4bits:
  4481                           	callstack 0
  4482                           
  4483 ;; *************** function _lcd_4bit_send_enable_signal *****************
  4484 ;; Defined at:
  4485 ;;		line 439 in file "ECU_layer/Chr_LCD/ecu_chr_lcd.c"
  4486 ;; Parameters:    Size  Location     Type
  4487 ;;  lcd             2   10[BANK0 ] PTR const struct .
  4488 ;;		 -> lcd1(6), 
  4489 ;; Auto vars:     Size  Location     Type
  4490 ;;  ret             1   12[BANK0 ] unsigned char 
  4491 ;; Return value:  Size  Location     Type
  4492 ;;                  1    wreg      unsigned char 
  4493 ;; Registers used:
  4494 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4495 ;; Tracked objects:
  4496 ;;		On entry : 0/0
  4497 ;;		On exit  : 0/0
  4498 ;;		Unchanged: 0/0
  4499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4500 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4501 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4503 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4504 ;;Total ram usage:        3 bytes
  4505 ;; Hardware stack levels used: 1
  4506 ;; Hardware stack levels required when called: 5
  4507 ;; This function calls:
  4508 ;;		_gpio_pin_write_logic
  4509 ;; This function is called by:
  4510 ;;		_lcd_4bit_send_command
  4511 ;;		_lcd_4bit_char_data
  4512 ;; This function uses a non-reentrant model
  4513 ;;
  4514                           
  4515                           	psect	text24
  4516   00331C                     __ptext24:
  4517                           	callstack 0
  4518   00331C                     _lcd_4bit_send_enable_signal:
  4519                           	callstack 24
  4520   00331C  0E01               	movlw	1
  4521   00331E  0100               	movlb	0	; () banked
  4522   003320  258A               	addwf	lcd_4bit_send_enable_signal@lcd& (0+255),w,b
  4523   003322  6F80               	movwf	gpio_pin_write_logic@_pin_config& (0+255),b
  4524   003324  0E00               	movlw	0
  4525   003326  218B               	addwfc	(lcd_4bit_send_enable_signal@lcd+1)& (0+255),w,b
  4526   003328  6F81               	movwf	(gpio_pin_write_logic@_pin_config+1)& (0+255),b
  4527   00332A  0E01               	movlw	1
  4528   00332C  6F82               	movwf	gpio_pin_write_logic@logic& (0+255),b
  4529   00332E  EC7F  F011         	call	_gpio_pin_write_logic	;wreg free
  4530   003332                     
  4531                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 443:     _delay((unsigned long)((5)*(4000000UL/4000000
      +                          .0)));
  4532   003332  D000               	nop2		;2 cycle nop
  4533   003334  D000               	nop2		;2 cycle nop
  4534   003336  F000               	nop	
  4535   003338                     
  4536                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 444:     ret = gpio_pin_write_logic(&(lcd->lcd_en),GPI
      +                          O_LOW);
  4537   003338  0E01               	movlw	1
  4538   00333A  0100               	movlb	0	; () banked
  4539   00333C  258A               	addwf	lcd_4bit_send_enable_signal@lcd& (0+255),w,b
  4540   00333E  6F80               	movwf	gpio_pin_write_logic@_pin_config& (0+255),b
  4541   003340  0E00               	movlw	0
  4542   003342  218B               	addwfc	(lcd_4bit_send_enable_signal@lcd+1)& (0+255),w,b
  4543   003344  6F81               	movwf	(gpio_pin_write_logic@_pin_config+1)& (0+255),b
  4544   003346  0E00               	movlw	0
  4545   003348  6F82               	movwf	gpio_pin_write_logic@logic& (0+255),b
  4546   00334A  EC7F  F011         	call	_gpio_pin_write_logic	;wreg free
  4547   00334E  0100               	movlb	0	; () banked
  4548   003350  6F8C               	movwf	lcd_4bit_send_enable_signal@ret& (0+255),b
  4549                           
  4550                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 445:     return ret;
  4551   003352  518C               	movf	lcd_4bit_send_enable_signal@ret& (0+255),w,b
  4552   003354                     
  4553                           ; BSR set to: 0
  4554   003354  0012               	return		;funcret
  4555   003356                     __end_of_lcd_4bit_send_enable_signal:
  4556                           	callstack 0
  4557                           
  4558 ;; *************** function _dc_motor_initialization *****************
  4559 ;; Defined at:
  4560 ;;		line 22 in file "ECU_layer/DC_Motor/ecu_dc_motor.c"
  4561 ;; Parameters:    Size  Location     Type
  4562 ;;  _dc_motor       2   14[BANK0 ] PTR const struct .
  4563 ;;		 -> motor2(2), motor1(2), 
  4564 ;; Auto vars:     Size  Location     Type
  4565 ;;  ret             1   16[BANK0 ] unsigned char 
  4566 ;; Return value:  Size  Location     Type
  4567 ;;                  1    wreg      unsigned char 
  4568 ;; Registers used:
  4569 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4570 ;; Tracked objects:
  4571 ;;		On entry : 0/0
  4572 ;;		On exit  : 0/0
  4573 ;;		Unchanged: 0/0
  4574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4575 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4576 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4578 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4579 ;;Total ram usage:        3 bytes
  4580 ;; Hardware stack levels used: 1
  4581 ;; Hardware stack levels required when called: 6
  4582 ;; This function calls:
  4583 ;;		_gpio_pin_initialize
  4584 ;; This function is called by:
  4585 ;;		_application_initialization
  4586 ;; This function uses a non-reentrant model
  4587 ;;
  4588                           
  4589                           	psect	text25
  4590   003266                     __ptext25:
  4591                           	callstack 0
  4592   003266                     _dc_motor_initialization:
  4593                           	callstack 23
  4594   003266                     
  4595                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 24:     if( ((void*)0) == _dc_motor){
  4596   003266  0100               	movlb	0	; () banked
  4597   003268  518E               	movf	dc_motor_initialization@_dc_motor& (0+255),w,b
  4598   00326A  118F               	iorwf	(dc_motor_initialization@_dc_motor+1)& (0+255),w,b
  4599   00326C  A4D8               	btfss	status,2,c
  4600   00326E  EF3B  F019         	goto	u7621
  4601   003272  EF3D  F019         	goto	u7620
  4602   003276                     u7621:
  4603   003276  EF3F  F019         	goto	l7923
  4604   00327A                     u7620:
  4605   00327A                     
  4606                           ; BSR set to: 0
  4607                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 26:     }
  4608   00327A  EF51  F019         	goto	l215
  4609   00327E                     l7923:
  4610                           
  4611                           ; BSR set to: 0
  4612                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 29:         ret=gpio_pin_initialize(&(_dc_motor->dc_
      +                          motor_pin[0]));
  4613   00327E  C08E  F08A         	movff	dc_motor_initialization@_dc_motor,gpio_pin_initialize@_pin_config
  4614   003282  C08F  F08B         	movff	dc_motor_initialization@_dc_motor+1,gpio_pin_initialize@_pin_config+1
  4615   003286  ECD7  F017         	call	_gpio_pin_initialize	;wreg free
  4616   00328A  0100               	movlb	0	; () banked
  4617   00328C  6F90               	movwf	dc_motor_initialization@ret& (0+255),b
  4618                           
  4619                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 30:         ret=gpio_pin_initialize(&(_dc_motor->dc_
      +                          motor_pin[1]));
  4620   00328E  0E01               	movlw	1
  4621   003290  258E               	addwf	dc_motor_initialization@_dc_motor& (0+255),w,b
  4622   003292  6F8A               	movwf	gpio_pin_initialize@_pin_config& (0+255),b
  4623   003294  0E00               	movlw	0
  4624   003296  218F               	addwfc	(dc_motor_initialization@_dc_motor+1)& (0+255),w,b
  4625   003298  6F8B               	movwf	(gpio_pin_initialize@_pin_config+1)& (0+255),b
  4626   00329A  ECD7  F017         	call	_gpio_pin_initialize	;wreg free
  4627   00329E  0100               	movlb	0	; () banked
  4628   0032A0  6F90               	movwf	dc_motor_initialization@ret& (0+255),b
  4629   0032A2                     l215:
  4630                           
  4631                           ; BSR set to: 0
  4632   0032A2  0012               	return		;funcret
  4633   0032A4                     __end_of_dc_motor_initialization:
  4634                           	callstack 0
  4635                           
  4636 ;; *************** function _gpio_pin_initialize *****************
  4637 ;; Defined at:
  4638 ;;		line 147 in file "MCAL_LAYER/GPIO/hal_gpio.c"
  4639 ;; Parameters:    Size  Location     Type
  4640 ;;  _pin_config     2   10[BANK0 ] PTR const struct .
  4641 ;;		 -> motor2.dc_motor_pin(2), motor2(2), motor1.dc_motor_pin(2), motor1(2), 
  4642 ;;		 -> relay_initialization@pin_obj(1), led_initialize@pin_obj(1), lcd1.lcd_data(4), lcd1(6), 
  4643 ;; Auto vars:     Size  Location     Type
  4644 ;;  ret             1   13[BANK0 ] unsigned char 
  4645 ;; Return value:  Size  Location     Type
  4646 ;;                  1    wreg      unsigned char 
  4647 ;; Registers used:
  4648 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4649 ;; Tracked objects:
  4650 ;;		On entry : 0/0
  4651 ;;		On exit  : 0/0
  4652 ;;		Unchanged: 0/0
  4653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4654 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4655 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4656 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4657 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4658 ;;Total ram usage:        4 bytes
  4659 ;; Hardware stack levels used: 1
  4660 ;; Hardware stack levels required when called: 5
  4661 ;; This function calls:
  4662 ;;		_gpio_pin_direction_initialize
  4663 ;;		_gpio_pin_write_logic
  4664 ;; This function is called by:
  4665 ;;		_lcd_4bit_initialize
  4666 ;;		_dc_motor_initialization
  4667 ;;		_lcd_8bit_initialize
  4668 ;;		_keypad_initialization
  4669 ;;		_led_initialize
  4670 ;;		_relay_initialization
  4671 ;;		_seven_segment_initialization
  4672 ;;		_CCP_Init
  4673 ;; This function uses a non-reentrant model
  4674 ;;
  4675                           
  4676                           	psect	text26
  4677   002FAE                     __ptext26:
  4678                           	callstack 0
  4679   002FAE                     _gpio_pin_initialize:
  4680                           	callstack 23
  4681   002FAE                     
  4682                           ;MCAL_LAYER/GPIO/hal_gpio.c: 149:     if( ((void*)0) == _pin_config || _pin_config ->pin
      +                           >8 -1 ){
  4683   002FAE  0100               	movlb	0	; () banked
  4684   002FB0  518A               	movf	gpio_pin_initialize@_pin_config& (0+255),w,b
  4685   002FB2  118B               	iorwf	(gpio_pin_initialize@_pin_config+1)& (0+255),w,b
  4686   002FB4  B4D8               	btfsc	status,2,c
  4687   002FB6  EFDF  F017         	goto	u7421
  4688   002FBA  EFE1  F017         	goto	u7420
  4689   002FBE                     u7421:
  4690   002FBE  EFF2  F017         	goto	l7675
  4691   002FC2                     u7420:
  4692   002FC2                     
  4693                           ; BSR set to: 0
  4694   002FC2  C08A  FFD9         	movff	gpio_pin_initialize@_pin_config,fsr2l
  4695   002FC6  C08B  FFDA         	movff	gpio_pin_initialize@_pin_config+1,fsr2h
  4696   002FCA  30DF               	rrcf	223,w,c
  4697   002FCC  32E8               	rrcf	wreg,f,c
  4698   002FCE  32E8               	rrcf	wreg,f,c
  4699   002FD0  0B07               	andlw	7
  4700   002FD2  6F8C               	movwf	??_gpio_pin_initialize& (0+255),b
  4701   002FD4  0E07               	movlw	7
  4702   002FD6  658C               	cpfsgt	??_gpio_pin_initialize& (0+255),b
  4703   002FD8  EFF0  F017         	goto	u7431
  4704   002FDC  EFF2  F017         	goto	u7430
  4705   002FE0                     u7431:
  4706   002FE0  EFF6  F017         	goto	l7677
  4707   002FE4                     u7430:
  4708   002FE4                     l7675:
  4709                           
  4710                           ; BSR set to: 0
  4711                           ;MCAL_LAYER/GPIO/hal_gpio.c: 150:         ret=(Std_ReturnType)0x00;
  4712   002FE4  0E00               	movlw	0
  4713   002FE6  6F8D               	movwf	gpio_pin_initialize@ret& (0+255),b
  4714                           
  4715                           ;MCAL_LAYER/GPIO/hal_gpio.c: 151:     }
  4716   002FE8  EF0E  F018         	goto	l7679
  4717   002FEC                     l7677:
  4718                           
  4719                           ; BSR set to: 0
  4720                           ;MCAL_LAYER/GPIO/hal_gpio.c: 153:         ret= gpio_pin_direction_initialize(_pin_config
      +                          );
  4721   002FEC  C08A  F080         	movff	gpio_pin_initialize@_pin_config,gpio_pin_direction_initialize@_pin_config
  4722   002FF0  C08B  F081         	movff	gpio_pin_initialize@_pin_config+1,gpio_pin_direction_initialize@_pin_config+1
  4723   002FF4  EC9E  F00F         	call	_gpio_pin_direction_initialize	;wreg free
  4724   002FF8  0100               	movlb	0	; () banked
  4725   002FFA  6F8D               	movwf	gpio_pin_initialize@ret& (0+255),b
  4726                           
  4727                           ;MCAL_LAYER/GPIO/hal_gpio.c: 154:         ret= gpio_pin_write_logic(_pin_config,_pin_con
      +                          fig->logic);
  4728   002FFC  C08A  F080         	movff	gpio_pin_initialize@_pin_config,gpio_pin_write_logic@_pin_config
  4729   003000  C08B  F081         	movff	gpio_pin_initialize@_pin_config+1,gpio_pin_write_logic@_pin_config+1
  4730   003004  C08A  FFD9         	movff	gpio_pin_initialize@_pin_config,fsr2l
  4731   003008  C08B  FFDA         	movff	gpio_pin_initialize@_pin_config+1,fsr2h
  4732   00300C  0E00               	movlw	0
  4733   00300E  BEDF               	btfsc	indf2,7,c
  4734   003010  0E01               	movlw	1
  4735   003012  6F82               	movwf	gpio_pin_write_logic@logic& (0+255),b
  4736   003014  EC7F  F011         	call	_gpio_pin_write_logic	;wreg free
  4737   003018  0100               	movlb	0	; () banked
  4738   00301A  6F8D               	movwf	gpio_pin_initialize@ret& (0+255),b
  4739   00301C                     l7679:
  4740                           
  4741                           ; BSR set to: 0
  4742                           ;MCAL_LAYER/GPIO/hal_gpio.c: 157:     return ret;
  4743   00301C  518D               	movf	gpio_pin_initialize@ret& (0+255),w,b
  4744   00301E                     
  4745                           ; BSR set to: 0
  4746   00301E  0012               	return		;funcret
  4747   003020                     __end_of_gpio_pin_initialize:
  4748                           	callstack 0
  4749                           
  4750 ;; *************** function _gpio_pin_write_logic *****************
  4751 ;; Defined at:
  4752 ;;		line 74 in file "MCAL_LAYER/GPIO/hal_gpio.c"
  4753 ;; Parameters:    Size  Location     Type
  4754 ;;  _pin_config     2    0[BANK0 ] PTR const struct .
  4755 ;;		 -> motor2.dc_motor_pin(2), motor2(2), motor1.dc_motor_pin(2), motor1(2), 
  4756 ;;		 -> relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), relay_initialization@pin_obj(1), led_turn_off@pin_obj(1), 
  4757 ;;		 -> led_turn_on@pin_obj(1), led_initialize@pin_obj(1), lcd1.lcd_data(4), lcd1(6), 
  4758 ;;  logic           1    2[BANK0 ] enum E2968
  4759 ;; Auto vars:     Size  Location     Type
  4760 ;;  ret             1    9[BANK0 ] unsigned char 
  4761 ;; Return value:  Size  Location     Type
  4762 ;;                  1    wreg      unsigned char 
  4763 ;; Registers used:
  4764 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4765 ;; Tracked objects:
  4766 ;;		On entry : 0/0
  4767 ;;		On exit  : 0/0
  4768 ;;		Unchanged: 0/0
  4769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4770 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4771 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4772 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4773 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4774 ;;Total ram usage:       10 bytes
  4775 ;; Hardware stack levels used: 1
  4776 ;; Hardware stack levels required when called: 4
  4777 ;; This function calls:
  4778 ;;		Nothing
  4779 ;; This function is called by:
  4780 ;;		_lcd_4bit_send_command
  4781 ;;		_lcd_4bit_char_data
  4782 ;;		_send_4bits
  4783 ;;		_lcd_4bit_send_enable_signal
  4784 ;;		_dc_motor_turn_left
  4785 ;;		_dc_motor_stop
  4786 ;;		_gpio_pin_initialize
  4787 ;;		_lcd_8bit_send_command
  4788 ;;		_lcd_8bit_char_data
  4789 ;;		_lcd_8bit_send_enable_signal
  4790 ;;		_dc_motor_turn_right
  4791 ;;		_keypad_get_value
  4792 ;;		_led_turn_on
  4793 ;;		_led_turn_off
  4794 ;;		_relay_turn_on
  4795 ;;		_relay_turn_off
  4796 ;;		_seven_segment_write_number
  4797 ;; This function uses a non-reentrant model
  4798 ;;
  4799                           
  4800                           	psect	text27
  4801   0022FE                     __ptext27:
  4802                           	callstack 0
  4803   0022FE                     _gpio_pin_write_logic:
  4804                           	callstack 24
  4805   0022FE                     
  4806                           ;MCAL_LAYER/GPIO/hal_gpio.c: 75:     uint8 ret =(Std_ReturnType)0x01;
  4807   0022FE  0E01               	movlw	1
  4808   002300  0100               	movlb	0	; () banked
  4809   002302  6F89               	movwf	gpio_pin_write_logic@ret& (0+255),b
  4810   002304                     
  4811                           ; BSR set to: 0
  4812                           ;MCAL_LAYER/GPIO/hal_gpio.c: 76:     if( ((void*)0) == _pin_config || _pin_config ->pin 
      +                          >8 -1 ){
  4813   002304  5180               	movf	gpio_pin_write_logic@_pin_config& (0+255),w,b
  4814   002306  1181               	iorwf	(gpio_pin_write_logic@_pin_config+1)& (0+255),w,b
  4815   002308  B4D8               	btfsc	status,2,c
  4816   00230A  EF89  F011         	goto	u7181
  4817   00230E  EF8B  F011         	goto	u7180
  4818   002312                     u7181:
  4819   002312  EF9C  F011         	goto	l7525
  4820   002316                     u7180:
  4821   002316                     
  4822                           ; BSR set to: 0
  4823   002316  C080  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  4824   00231A  C081  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  4825   00231E  30DF               	rrcf	223,w,c
  4826   002320  32E8               	rrcf	wreg,f,c
  4827   002322  32E8               	rrcf	wreg,f,c
  4828   002324  0B07               	andlw	7
  4829   002326  6F83               	movwf	??_gpio_pin_write_logic& (0+255),b
  4830   002328  0E07               	movlw	7
  4831   00232A  6583               	cpfsgt	??_gpio_pin_write_logic& (0+255),b
  4832   00232C  EF9A  F011         	goto	u7191
  4833   002330  EF9C  F011         	goto	u7190
  4834   002334                     u7191:
  4835   002334  EF01  F012         	goto	l7533
  4836   002338                     u7190:
  4837   002338                     l7525:
  4838                           
  4839                           ; BSR set to: 0
  4840                           ;MCAL_LAYER/GPIO/hal_gpio.c: 77:         ret=(Std_ReturnType)0x00;
  4841   002338  0E00               	movlw	0
  4842   00233A  6F89               	movwf	gpio_pin_write_logic@ret& (0+255),b
  4843                           
  4844                           ;MCAL_LAYER/GPIO/hal_gpio.c: 78:     }
  4845   00233C  EF16  F012         	goto	l7535
  4846   002340                     l7527:
  4847                           
  4848                           ; BSR set to: 0
  4849                           ;MCAL_LAYER/GPIO/hal_gpio.c: 82:                 (*lat_register[_pin_config -> port] &= 
      +                          ~((uint8)1 << _pin_config->pin));
  4850   002340  C080  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  4851   002344  C081  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  4852   002348  30DF               	rrcf	223,w,c
  4853   00234A  32E8               	rrcf	wreg,f,c
  4854   00234C  32E8               	rrcf	wreg,f,c
  4855   00234E  0B07               	andlw	7
  4856   002350  6F83               	movwf	??_gpio_pin_write_logic& (0+255),b
  4857   002352  0E01               	movlw	1
  4858   002354  6F84               	movwf	(??_gpio_pin_write_logic+1)& (0+255),b
  4859   002356  2B83               	incf	??_gpio_pin_write_logic& (0+255),f,b
  4860   002358  EFB0  F011         	goto	u7204
  4861   00235C                     u7205:
  4862   00235C  90D8               	bcf	status,0,c
  4863   00235E  3784               	rlcf	(??_gpio_pin_write_logic+1)& (0+255),f,b
  4864   002360                     u7204:
  4865   002360  2F83               	decfsz	??_gpio_pin_write_logic& (0+255),f,b
  4866   002362  EFAE  F011         	goto	u7205
  4867   002366  0100               	movlb	0	; () banked
  4868   002368  5184               	movf	(??_gpio_pin_write_logic+1)& (0+255),w,b
  4869   00236A  0AFF               	xorlw	255
  4870   00236C  6F85               	movwf	(??_gpio_pin_write_logic+2)& (0+255),b
  4871   00236E  C080  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  4872   002372  C081  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  4873   002376  50DF               	movf	223,w,c
  4874   002378  0B07               	andlw	7
  4875   00237A  6F86               	movwf	(??_gpio_pin_write_logic+3)& (0+255),b
  4876   00237C  5186               	movf	(??_gpio_pin_write_logic+3)& (0+255),w,b
  4877   00237E  0D02               	mullw	2
  4878   002380  0E48               	movlw	low _lat_register
  4879   002382  24F3               	addwf	243,w,c
  4880   002384  6ED9               	movwf	fsr2l,c
  4881   002386  0E01               	movlw	high _lat_register
  4882   002388  20F4               	addwfc	prodh,w,c
  4883   00238A  6EDA               	movwf	fsr2h,c
  4884   00238C  CFDE F087          	movff	postinc2,??_gpio_pin_write_logic+4
  4885   002390  CFDD F088          	movff	postdec2,??_gpio_pin_write_logic+5
  4886   002394  C087  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  4887   002398  C088  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  4888   00239C  5185               	movf	(??_gpio_pin_write_logic+2)& (0+255),w,b
  4889   00239E  16DF               	andwf	indf2,f,c
  4890                           
  4891                           ;MCAL_LAYER/GPIO/hal_gpio.c: 83:                 break;
  4892   0023A0  EF16  F012         	goto	l7535
  4893   0023A4                     l7529:
  4894                           
  4895                           ; BSR set to: 0
  4896                           ;MCAL_LAYER/GPIO/hal_gpio.c: 85:                 (*lat_register[_pin_config -> port] |= 
      +                          ((uint8)1 << _pin_config->pin));
  4897   0023A4  C080  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  4898   0023A8  C081  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  4899   0023AC  30DF               	rrcf	223,w,c
  4900   0023AE  32E8               	rrcf	wreg,f,c
  4901   0023B0  32E8               	rrcf	wreg,f,c
  4902   0023B2  0B07               	andlw	7
  4903   0023B4  6F83               	movwf	??_gpio_pin_write_logic& (0+255),b
  4904   0023B6  0E01               	movlw	1
  4905   0023B8  6F84               	movwf	(??_gpio_pin_write_logic+1)& (0+255),b
  4906   0023BA  2B83               	incf	??_gpio_pin_write_logic& (0+255),f,b
  4907   0023BC  EFE2  F011         	goto	u7214
  4908   0023C0                     u7215:
  4909   0023C0  90D8               	bcf	status,0,c
  4910   0023C2  3784               	rlcf	(??_gpio_pin_write_logic+1)& (0+255),f,b
  4911   0023C4                     u7214:
  4912   0023C4  2F83               	decfsz	??_gpio_pin_write_logic& (0+255),f,b
  4913   0023C6  EFE0  F011         	goto	u7215
  4914   0023CA  C080  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  4915   0023CE  C081  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  4916   0023D2  50DF               	movf	223,w,c
  4917   0023D4  0B07               	andlw	7
  4918   0023D6  0100               	movlb	0	; () banked
  4919   0023D8  6F85               	movwf	(??_gpio_pin_write_logic+2)& (0+255),b
  4920   0023DA  5185               	movf	(??_gpio_pin_write_logic+2)& (0+255),w,b
  4921   0023DC  0D02               	mullw	2
  4922   0023DE  0E48               	movlw	low _lat_register
  4923   0023E0  24F3               	addwf	243,w,c
  4924   0023E2  6ED9               	movwf	fsr2l,c
  4925   0023E4  0E01               	movlw	high _lat_register
  4926   0023E6  20F4               	addwfc	prodh,w,c
  4927   0023E8  6EDA               	movwf	fsr2h,c
  4928   0023EA  CFDE F086          	movff	postinc2,??_gpio_pin_write_logic+3
  4929   0023EE  CFDD F087          	movff	postdec2,??_gpio_pin_write_logic+4
  4930   0023F2  C086  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  4931   0023F6  C087  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  4932   0023FA  5184               	movf	(??_gpio_pin_write_logic+1)& (0+255),w,b
  4933   0023FC  12DF               	iorwf	indf2,f,c
  4934                           
  4935                           ;MCAL_LAYER/GPIO/hal_gpio.c: 86:                 break;
  4936   0023FE  EF16  F012         	goto	l7535
  4937   002402                     l7533:
  4938                           
  4939                           ; BSR set to: 0
  4940   002402  5182               	movf	gpio_pin_write_logic@logic& (0+255),w,b
  4941   002404  6F83               	movwf	??_gpio_pin_write_logic& (0+255),b
  4942   002406  6B84               	clrf	(??_gpio_pin_write_logic+1)& (0+255),b
  4943                           
  4944                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4945                           ; Switch size 1, requested type "simple"
  4946                           ; Number of cases is 1, Range of values is 0 to 0
  4947                           ; switch strategies available:
  4948                           ; Name         Instructions Cycles
  4949                           ; simple_byte            4     3 (average)
  4950                           ;	Chosen strategy is simple_byte
  4951   002408  5184               	movf	(??_gpio_pin_write_logic+1)& (0+255),w,b
  4952   00240A  0A00               	xorlw	0	; case 0
  4953   00240C  B4D8               	btfsc	status,2,c
  4954   00240E  EF0B  F012         	goto	l8829
  4955   002412  EF9C  F011         	goto	l7525
  4956   002416                     l8829:
  4957                           
  4958                           ; BSR set to: 0
  4959                           ; Switch size 1, requested type "simple"
  4960                           ; Number of cases is 2, Range of values is 0 to 1
  4961                           ; switch strategies available:
  4962                           ; Name         Instructions Cycles
  4963                           ; simple_byte            7     4 (average)
  4964                           ;	Chosen strategy is simple_byte
  4965   002416  5183               	movf	??_gpio_pin_write_logic& (0+255),w,b
  4966   002418  0A00               	xorlw	0	; case 0
  4967   00241A  B4D8               	btfsc	status,2,c
  4968   00241C  EFA0  F011         	goto	l7527
  4969   002420  0A01               	xorlw	1	; case 1
  4970   002422  B4D8               	btfsc	status,2,c
  4971   002424  EFD2  F011         	goto	l7529
  4972   002428  EF9C  F011         	goto	l7525
  4973   00242C                     l7535:
  4974                           
  4975                           ; BSR set to: 0
  4976                           ;MCAL_LAYER/GPIO/hal_gpio.c: 91:         return ret;
  4977   00242C  5189               	movf	gpio_pin_write_logic@ret& (0+255),w,b
  4978   00242E                     
  4979                           ; BSR set to: 0
  4980   00242E  0012               	return		;funcret
  4981   002430                     __end_of_gpio_pin_write_logic:
  4982                           	callstack 0
  4983                           
  4984 ;; *************** function _gpio_pin_direction_initialize *****************
  4985 ;; Defined at:
  4986 ;;		line 24 in file "MCAL_LAYER/GPIO/hal_gpio.c"
  4987 ;; Parameters:    Size  Location     Type
  4988 ;;  _pin_config     2    0[BANK0 ] PTR const struct .
  4989 ;;		 -> motor2.dc_motor_pin(2), motor2(2), motor1.dc_motor_pin(2), motor1(2), 
  4990 ;;		 -> relay_initialization@pin_obj(1), led_initialize@pin_obj(1), lcd1.lcd_data(4), lcd1(6), 
  4991 ;; Auto vars:     Size  Location     Type
  4992 ;;  ret             1    8[BANK0 ] unsigned char 
  4993 ;; Return value:  Size  Location     Type
  4994 ;;                  1    wreg      unsigned char 
  4995 ;; Registers used:
  4996 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4997 ;; Tracked objects:
  4998 ;;		On entry : 0/0
  4999 ;;		On exit  : 0/0
  5000 ;;		Unchanged: 0/0
  5001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5002 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5003 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5004 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5005 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5006 ;;Total ram usage:        9 bytes
  5007 ;; Hardware stack levels used: 1
  5008 ;; Hardware stack levels required when called: 4
  5009 ;; This function calls:
  5010 ;;		Nothing
  5011 ;; This function is called by:
  5012 ;;		_gpio_pin_initialize
  5013 ;;		_button_initialization
  5014 ;;		_keypad_initialization
  5015 ;;		_Interrupt_RBx_Init
  5016 ;;		_Interrupt_INTx_Pin_Init
  5017 ;; This function uses a non-reentrant model
  5018 ;;
  5019                           
  5020                           	psect	text28
  5021   001F3C                     __ptext28:
  5022                           	callstack 0
  5023   001F3C                     _gpio_pin_direction_initialize:
  5024                           	callstack 23
  5025   001F3C                     
  5026                           ;MCAL_LAYER/GPIO/hal_gpio.c: 25:     uint8 ret =(Std_ReturnType)0x01;
  5027   001F3C  0E01               	movlw	1
  5028   001F3E  0100               	movlb	0	; () banked
  5029   001F40  6F88               	movwf	gpio_pin_direction_initialize@ret& (0+255),b
  5030   001F42                     
  5031                           ; BSR set to: 0
  5032                           ;MCAL_LAYER/GPIO/hal_gpio.c: 26:     if( ((void*)0) == _pin_config || _pin_config ->pin 
      +                          >8 -1 ){
  5033   001F42  5180               	movf	gpio_pin_direction_initialize@_pin_config& (0+255),w,b
  5034   001F44  1181               	iorwf	(gpio_pin_direction_initialize@_pin_config+1)& (0+255),w,b
  5035   001F46  B4D8               	btfsc	status,2,c
  5036   001F48  EFA8  F00F         	goto	u7321
  5037   001F4C  EFAA  F00F         	goto	u7320
  5038   001F50                     u7321:
  5039   001F50  EFBB  F00F         	goto	l7599
  5040   001F54                     u7320:
  5041   001F54                     
  5042                           ; BSR set to: 0
  5043   001F54  C080  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  5044   001F58  C081  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  5045   001F5C  30DF               	rrcf	223,w,c
  5046   001F5E  32E8               	rrcf	wreg,f,c
  5047   001F60  32E8               	rrcf	wreg,f,c
  5048   001F62  0B07               	andlw	7
  5049   001F64  6F82               	movwf	??_gpio_pin_direction_initialize& (0+255),b
  5050   001F66  0E07               	movlw	7
  5051   001F68  6582               	cpfsgt	??_gpio_pin_direction_initialize& (0+255),b
  5052   001F6A  EFB9  F00F         	goto	u7331
  5053   001F6E  EFBB  F00F         	goto	u7330
  5054   001F72                     u7331:
  5055   001F72  EF20  F010         	goto	l7607
  5056   001F76                     u7330:
  5057   001F76                     l7599:
  5058                           
  5059                           ; BSR set to: 0
  5060                           ;MCAL_LAYER/GPIO/hal_gpio.c: 27:         ret=(Std_ReturnType)0x00;
  5061   001F76  0E00               	movlw	0
  5062   001F78  6F88               	movwf	gpio_pin_direction_initialize@ret& (0+255),b
  5063                           
  5064                           ;MCAL_LAYER/GPIO/hal_gpio.c: 28:     }
  5065   001F7A  EF41  F010         	goto	l7609
  5066   001F7E                     l7601:
  5067                           
  5068                           ; BSR set to: 0
  5069                           ;MCAL_LAYER/GPIO/hal_gpio.c: 32:                 (*tris_register[_pin_config -> port] &=
      +                           ~((uint8)1 << _pin_config->pin));
  5070   001F7E  C080  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  5071   001F82  C081  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  5072   001F86  30DF               	rrcf	223,w,c
  5073   001F88  32E8               	rrcf	wreg,f,c
  5074   001F8A  32E8               	rrcf	wreg,f,c
  5075   001F8C  0B07               	andlw	7
  5076   001F8E  6F82               	movwf	??_gpio_pin_direction_initialize& (0+255),b
  5077   001F90  0E01               	movlw	1
  5078   001F92  6F83               	movwf	(??_gpio_pin_direction_initialize+1)& (0+255),b
  5079   001F94  2B82               	incf	??_gpio_pin_direction_initialize& (0+255),f,b
  5080   001F96  EFCF  F00F         	goto	u7344
  5081   001F9A                     u7345:
  5082   001F9A  90D8               	bcf	status,0,c
  5083   001F9C  3783               	rlcf	(??_gpio_pin_direction_initialize+1)& (0+255),f,b
  5084   001F9E                     u7344:
  5085   001F9E  2F82               	decfsz	??_gpio_pin_direction_initialize& (0+255),f,b
  5086   001FA0  EFCD  F00F         	goto	u7345
  5087   001FA4  0100               	movlb	0	; () banked
  5088   001FA6  5183               	movf	(??_gpio_pin_direction_initialize+1)& (0+255),w,b
  5089   001FA8  0AFF               	xorlw	255
  5090   001FAA  6F84               	movwf	(??_gpio_pin_direction_initialize+2)& (0+255),b
  5091   001FAC  C080  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  5092   001FB0  C081  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  5093   001FB4  50DF               	movf	223,w,c
  5094   001FB6  0B07               	andlw	7
  5095   001FB8  6F85               	movwf	(??_gpio_pin_direction_initialize+3)& (0+255),b
  5096   001FBA  5185               	movf	(??_gpio_pin_direction_initialize+3)& (0+255),w,b
  5097   001FBC  0D02               	mullw	2
  5098   001FBE  0EEB               	movlw	low _tris_register
  5099   001FC0  24F3               	addwf	243,w,c
  5100   001FC2  6ED9               	movwf	fsr2l,c
  5101   001FC4  0E00               	movlw	high _tris_register
  5102   001FC6  20F4               	addwfc	prodh,w,c
  5103   001FC8  6EDA               	movwf	fsr2h,c
  5104   001FCA  CFDE F086          	movff	postinc2,??_gpio_pin_direction_initialize+4
  5105   001FCE  CFDD F087          	movff	postdec2,??_gpio_pin_direction_initialize+5
  5106   001FD2  C086  FFD9         	movff	??_gpio_pin_direction_initialize+4,fsr2l
  5107   001FD6  C087  FFDA         	movff	??_gpio_pin_direction_initialize+5,fsr2h
  5108   001FDA  5184               	movf	(??_gpio_pin_direction_initialize+2)& (0+255),w,b
  5109   001FDC  16DF               	andwf	indf2,f,c
  5110                           
  5111                           ;MCAL_LAYER/GPIO/hal_gpio.c: 33:                 break;
  5112   001FDE  EF41  F010         	goto	l7609
  5113   001FE2                     l7603:
  5114                           
  5115                           ; BSR set to: 0
  5116                           ;MCAL_LAYER/GPIO/hal_gpio.c: 35:                 (*tris_register[_pin_config -> port] |=
      +                           ((uint8)1 << _pin_config->pin));
  5117   001FE2  C080  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  5118   001FE6  C081  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  5119   001FEA  30DF               	rrcf	223,w,c
  5120   001FEC  32E8               	rrcf	wreg,f,c
  5121   001FEE  32E8               	rrcf	wreg,f,c
  5122   001FF0  0B07               	andlw	7
  5123   001FF2  6F82               	movwf	??_gpio_pin_direction_initialize& (0+255),b
  5124   001FF4  0E01               	movlw	1
  5125   001FF6  6F83               	movwf	(??_gpio_pin_direction_initialize+1)& (0+255),b
  5126   001FF8  2B82               	incf	??_gpio_pin_direction_initialize& (0+255),f,b
  5127   001FFA  EF01  F010         	goto	u7354
  5128   001FFE                     u7355:
  5129   001FFE  90D8               	bcf	status,0,c
  5130   002000  3783               	rlcf	(??_gpio_pin_direction_initialize+1)& (0+255),f,b
  5131   002002                     u7354:
  5132   002002  2F82               	decfsz	??_gpio_pin_direction_initialize& (0+255),f,b
  5133   002004  EFFF  F00F         	goto	u7355
  5134   002008  C080  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  5135   00200C  C081  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  5136   002010  50DF               	movf	223,w,c
  5137   002012  0B07               	andlw	7
  5138   002014  0100               	movlb	0	; () banked
  5139   002016  6F84               	movwf	(??_gpio_pin_direction_initialize+2)& (0+255),b
  5140   002018  5184               	movf	(??_gpio_pin_direction_initialize+2)& (0+255),w,b
  5141   00201A  0D02               	mullw	2
  5142   00201C  0EEB               	movlw	low _tris_register
  5143   00201E  24F3               	addwf	243,w,c
  5144   002020  6ED9               	movwf	fsr2l,c
  5145   002022  0E00               	movlw	high _tris_register
  5146   002024  20F4               	addwfc	prodh,w,c
  5147   002026  6EDA               	movwf	fsr2h,c
  5148   002028  CFDE F085          	movff	postinc2,??_gpio_pin_direction_initialize+3
  5149   00202C  CFDD F086          	movff	postdec2,??_gpio_pin_direction_initialize+4
  5150   002030  C085  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  5151   002034  C086  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  5152   002038  5183               	movf	(??_gpio_pin_direction_initialize+1)& (0+255),w,b
  5153   00203A  12DF               	iorwf	indf2,f,c
  5154                           
  5155                           ;MCAL_LAYER/GPIO/hal_gpio.c: 36:                 break;
  5156   00203C  EF41  F010         	goto	l7609
  5157   002040                     l7607:
  5158                           
  5159                           ; BSR set to: 0
  5160   002040  C080  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  5161   002044  C081  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  5162   002048  BCDF               	btfsc	indf2,6,c
  5163   00204A  EF29  F010         	goto	u7361
  5164   00204E  EF2C  F010         	goto	u7360
  5165   002052                     u7361:
  5166   002052  0E01               	movlw	1
  5167   002054  EF2D  F010         	goto	u7370
  5168   002058                     u7360:
  5169   002058  0E00               	movlw	0
  5170   00205A                     u7370:
  5171   00205A  6F82               	movwf	??_gpio_pin_direction_initialize& (0+255),b
  5172   00205C  6B83               	clrf	(??_gpio_pin_direction_initialize+1)& (0+255),b
  5173                           
  5174                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5175                           ; Switch size 1, requested type "simple"
  5176                           ; Number of cases is 1, Range of values is 0 to 0
  5177                           ; switch strategies available:
  5178                           ; Name         Instructions Cycles
  5179                           ; simple_byte            4     3 (average)
  5180                           ;	Chosen strategy is simple_byte
  5181   00205E  5183               	movf	(??_gpio_pin_direction_initialize+1)& (0+255),w,b
  5182   002060  0A00               	xorlw	0	; case 0
  5183   002062  B4D8               	btfsc	status,2,c
  5184   002064  EF36  F010         	goto	l8831
  5185   002068  EFBB  F00F         	goto	l7599
  5186   00206C                     l8831:
  5187                           
  5188                           ; BSR set to: 0
  5189                           ; Switch size 1, requested type "simple"
  5190                           ; Number of cases is 2, Range of values is 0 to 1
  5191                           ; switch strategies available:
  5192                           ; Name         Instructions Cycles
  5193                           ; simple_byte            7     4 (average)
  5194                           ;	Chosen strategy is simple_byte
  5195   00206C  5182               	movf	??_gpio_pin_direction_initialize& (0+255),w,b
  5196   00206E  0A00               	xorlw	0	; case 0
  5197   002070  B4D8               	btfsc	status,2,c
  5198   002072  EFBF  F00F         	goto	l7601
  5199   002076  0A01               	xorlw	1	; case 1
  5200   002078  B4D8               	btfsc	status,2,c
  5201   00207A  EFF1  F00F         	goto	l7603
  5202   00207E  EFBB  F00F         	goto	l7599
  5203   002082                     l7609:
  5204                           
  5205                           ; BSR set to: 0
  5206                           ;MCAL_LAYER/GPIO/hal_gpio.c: 40:     return ret;
  5207   002082  5188               	movf	gpio_pin_direction_initialize@ret& (0+255),w,b
  5208   002084                     
  5209                           ; BSR set to: 0
  5210   002084  0012               	return		;funcret
  5211   002086                     __end_of_gpio_pin_direction_initialize:
  5212                           	callstack 0
  5213                           
  5214 ;; *************** function _ADC_Init *****************
  5215 ;; Defined at:
  5216 ;;		line 20 in file "MCAL_LAYER/ADC/hal_adc.c"
  5217 ;; Parameters:    Size  Location     Type
  5218 ;;  _adc            2    3[BANK0 ] PTR const struct .
  5219 ;;		 -> adc_1(8), 
  5220 ;; Auto vars:     Size  Location     Type
  5221 ;;  ret             1    0        unsigned char 
  5222 ;; Return value:  Size  Location     Type
  5223 ;;                  1    wreg      unsigned char 
  5224 ;; Registers used:
  5225 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5226 ;; Tracked objects:
  5227 ;;		On entry : 0/0
  5228 ;;		On exit  : 0/0
  5229 ;;		Unchanged: 0/0
  5230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5231 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5233 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5234 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5235 ;;Total ram usage:        3 bytes
  5236 ;; Hardware stack levels used: 1
  5237 ;; Hardware stack levels required when called: 5
  5238 ;; This function calls:
  5239 ;;		_adc_input_channel_port_configure
  5240 ;; This function is called by:
  5241 ;;		_application_initialization
  5242 ;; This function uses a non-reentrant model
  5243 ;;
  5244                           
  5245                           	psect	text29
  5246   0021C6                     __ptext29:
  5247                           	callstack 0
  5248   0021C6                     _ADC_Init:
  5249                           	callstack 24
  5250   0021C6                     
  5251                           ;MCAL_LAYER/ADC/hal_adc.c: 22:     if( ((void*)0) == _adc){
  5252   0021C6  0100               	movlb	0	; () banked
  5253   0021C8  5183               	movf	ADC_Init@_adc& (0+255),w,b
  5254   0021CA  1184               	iorwf	(ADC_Init@_adc+1)& (0+255),w,b
  5255   0021CC  A4D8               	btfss	status,2,c
  5256   0021CE  EFEB  F010         	goto	u7631
  5257   0021D2  EFED  F010         	goto	u7630
  5258   0021D6                     u7631:
  5259   0021D6  EFEF  F010         	goto	l370
  5260   0021DA                     u7630:
  5261   0021DA                     
  5262                           ; BSR set to: 0
  5263                           ;MCAL_LAYER/ADC/hal_adc.c: 24:     }
  5264   0021DA  EF7E  F011         	goto	l380
  5265   0021DE                     l370:
  5266                           
  5267                           ; BSR set to: 0
  5268                           ;MCAL_LAYER/ADC/hal_adc.c: 27:         (ADCON0bits.ADON = 0);
  5269   0021DE  90C2               	bcf	194,0,c	;volatile
  5270   0021E0                     
  5271                           ; BSR set to: 0
  5272                           ;MCAL_LAYER/ADC/hal_adc.c: 29:          ADCON2bits.ACQT = _adc->acqusition_time;
  5273   0021E0  EE20 F003          	lfsr	2,3
  5274   0021E4  5183               	movf	ADC_Init@_adc& (0+255),w,b
  5275   0021E6  26D9               	addwf	fsr2l,f,c
  5276   0021E8  5184               	movf	(ADC_Init@_adc+1)& (0+255),w,b
  5277   0021EA  22DA               	addwfc	fsr2h,f,c
  5278   0021EC  50DF               	movf	indf2,w,c
  5279   0021EE  6F85               	movwf	??_ADC_Init& (0+255),b
  5280   0021F0  4785               	rlncf	??_ADC_Init& (0+255),f,b
  5281   0021F2  4785               	rlncf	??_ADC_Init& (0+255),f,b
  5282   0021F4  4785               	rlncf	??_ADC_Init& (0+255),f,b
  5283   0021F6  50C0               	movf	192,w,c	;volatile
  5284   0021F8  1985               	xorwf	??_ADC_Init& (0+255),w,b
  5285   0021FA  0BC7               	andlw	-57
  5286   0021FC  1985               	xorwf	??_ADC_Init& (0+255),w,b
  5287   0021FE  6EC0               	movwf	192,c	;volatile
  5288                           
  5289                           ;MCAL_LAYER/ADC/hal_adc.c: 31:          ADCON2bits.ADCS = _adc->conversion_clock;
  5290   002200  EE20 F004          	lfsr	2,4
  5291   002204  5183               	movf	ADC_Init@_adc& (0+255),w,b
  5292   002206  26D9               	addwf	fsr2l,f,c
  5293   002208  5184               	movf	(ADC_Init@_adc+1)& (0+255),w,b
  5294   00220A  22DA               	addwfc	fsr2h,f,c
  5295   00220C  50DF               	movf	indf2,w,c
  5296   00220E  6F85               	movwf	??_ADC_Init& (0+255),b
  5297   002210  50C0               	movf	192,w,c	;volatile
  5298   002212  1985               	xorwf	??_ADC_Init& (0+255),w,b
  5299   002214  0BF8               	andlw	-8
  5300   002216  1985               	xorwf	??_ADC_Init& (0+255),w,b
  5301   002218  6EC0               	movwf	192,c	;volatile
  5302                           
  5303                           ;MCAL_LAYER/ADC/hal_adc.c: 33:          ADCON0bits.CHS = _adc->adc_channel;
  5304   00221A  EE20 F005          	lfsr	2,5
  5305   00221E  5183               	movf	ADC_Init@_adc& (0+255),w,b
  5306   002220  26D9               	addwf	fsr2l,f,c
  5307   002222  5184               	movf	(ADC_Init@_adc+1)& (0+255),w,b
  5308   002224  22DA               	addwfc	fsr2h,f,c
  5309   002226  50DF               	movf	indf2,w,c
  5310   002228  6F85               	movwf	??_ADC_Init& (0+255),b
  5311   00222A  4785               	rlncf	??_ADC_Init& (0+255),f,b
  5312   00222C  4785               	rlncf	??_ADC_Init& (0+255),f,b
  5313   00222E  50C2               	movf	194,w,c	;volatile
  5314   002230  1985               	xorwf	??_ADC_Init& (0+255),w,b
  5315   002232  0BC3               	andlw	-61
  5316   002234  1985               	xorwf	??_ADC_Init& (0+255),w,b
  5317   002236  6EC2               	movwf	194,c	;volatile
  5318   002238                     
  5319                           ; BSR set to: 0
  5320                           ;MCAL_LAYER/ADC/hal_adc.c: 34:          adc_input_channel_port_configure(_adc->adc_chann
      +                          el);
  5321   002238  EE20 F005          	lfsr	2,5
  5322   00223C  5183               	movf	ADC_Init@_adc& (0+255),w,b
  5323   00223E  26D9               	addwf	fsr2l,f,c
  5324   002240  5184               	movf	(ADC_Init@_adc+1)& (0+255),w,b
  5325   002242  22DA               	addwfc	fsr2h,f,c
  5326   002244  50DF               	movf	indf2,w,c
  5327   002246  ECE8  F015         	call	_adc_input_channel_port_configure
  5328   00224A                     
  5329                           ;MCAL_LAYER/ADC/hal_adc.c: 37:         (PIE1bits.ADIE = 1);
  5330   00224A  8C9D               	bsf	157,6,c	;volatile
  5331   00224C                     
  5332                           ;MCAL_LAYER/ADC/hal_adc.c: 44:         (INTCONbits.GIE = 1);
  5333   00224C  8EF2               	bsf	242,7,c	;volatile
  5334   00224E                     
  5335                           ;MCAL_LAYER/ADC/hal_adc.c: 45:         (INTCONbits.PEIE = 1);
  5336   00224E  8CF2               	bsf	242,6,c	;volatile
  5337   002250                     
  5338                           ;MCAL_LAYER/ADC/hal_adc.c: 47:         (PIR1bits.ADIF = 0);
  5339   002250  9C9E               	bcf	158,6,c	;volatile
  5340   002252                     
  5341                           ;MCAL_LAYER/ADC/hal_adc.c: 57:         ADC_InterruptHandler = _adc->ADC_InterruptHandler
      +                          ;
  5342   002252  C083  FFD9         	movff	ADC_Init@_adc,fsr2l
  5343   002256  C084  FFDA         	movff	ADC_Init@_adc+1,fsr2h
  5344   00225A  CFDE F05E          	movff	postinc2,_ADC_InterruptHandler
  5345   00225E  CFDD F05F          	movff	postdec2,_ADC_InterruptHandler+1
  5346   002262                     
  5347                           ;MCAL_LAYER/ADC/hal_adc.c: 60:         if(_adc->result_format == 0x01U){
  5348   002262  0100               	movlb	0	; () banked
  5349   002264  EE20 F006          	lfsr	2,6
  5350   002268  5183               	movf	ADC_Init@_adc& (0+255),w,b
  5351   00226A  26D9               	addwf	fsr2l,f,c
  5352   00226C  5184               	movf	(ADC_Init@_adc+1)& (0+255),w,b
  5353   00226E  22DA               	addwfc	fsr2h,f,c
  5354   002270  A8DF               	btfss	indf2,4,c
  5355   002272  EF3D  F011         	goto	u7641
  5356   002276  EF3F  F011         	goto	u7640
  5357   00227A                     u7641:
  5358   00227A  EF42  F011         	goto	l7951
  5359   00227E                     u7640:
  5360   00227E                     
  5361                           ; BSR set to: 0
  5362                           ;MCAL_LAYER/ADC/hal_adc.c: 61:             (ADCON2bits.ADFM = 1);
  5363   00227E  8EC0               	bsf	192,7,c	;volatile
  5364                           
  5365                           ;MCAL_LAYER/ADC/hal_adc.c: 62:         }
  5366   002280  EF53  F011         	goto	l7955
  5367   002284                     l7951:
  5368                           
  5369                           ; BSR set to: 0
  5370   002284  EE20 F006          	lfsr	2,6
  5371   002288  5183               	movf	ADC_Init@_adc& (0+255),w,b
  5372   00228A  26D9               	addwf	fsr2l,f,c
  5373   00228C  5184               	movf	(ADC_Init@_adc+1)& (0+255),w,b
  5374   00228E  22DA               	addwfc	fsr2h,f,c
  5375   002290  B8DF               	btfsc	indf2,4,c
  5376   002292  EF4D  F011         	goto	u7651
  5377   002296  EF4F  F011         	goto	u7650
  5378   00229A                     u7651:
  5379   00229A  EF52  F011         	goto	l374
  5380   00229E                     u7650:
  5381   00229E                     
  5382                           ; BSR set to: 0
  5383                           ;MCAL_LAYER/ADC/hal_adc.c: 64:             (ADCON2bits.ADFM = 0);
  5384   00229E  9EC0               	bcf	192,7,c	;volatile
  5385                           
  5386                           ;MCAL_LAYER/ADC/hal_adc.c: 65:         }
  5387   0022A0  EF53  F011         	goto	l7955
  5388   0022A4                     l374:
  5389                           
  5390                           ; BSR set to: 0
  5391                           ;MCAL_LAYER/ADC/hal_adc.c: 67:             (ADCON2bits.ADFM = 1);
  5392   0022A4  8EC0               	bsf	192,7,c	;volatile
  5393   0022A6                     l7955:
  5394                           
  5395                           ; BSR set to: 0
  5396                           ;MCAL_LAYER/ADC/hal_adc.c: 71:         if(_adc->voltage_refrence == 0x01U){
  5397   0022A6  EE20 F006          	lfsr	2,6
  5398   0022AA  5183               	movf	ADC_Init@_adc& (0+255),w,b
  5399   0022AC  26D9               	addwf	fsr2l,f,c
  5400   0022AE  5184               	movf	(ADC_Init@_adc+1)& (0+255),w,b
  5401   0022B0  22DA               	addwfc	fsr2h,f,c
  5402   0022B2  50DF               	movf	223,w,c
  5403   0022B4  0B0F               	andlw	15
  5404   0022B6  06E8               	decf	wreg,f,c
  5405   0022B8  A4D8               	btfss	status,2,c
  5406   0022BA  EF61  F011         	goto	u7661
  5407   0022BE  EF63  F011         	goto	u7660
  5408   0022C2                     u7661:
  5409   0022C2  EF67  F011         	goto	l7959
  5410   0022C6                     u7660:
  5411   0022C6                     
  5412                           ; BSR set to: 0
  5413                           ;MCAL_LAYER/ADC/hal_adc.c: 72:             ADCON1bits.VCFG1 = 1;
  5414   0022C6  8AC1               	bsf	193,5,c	;volatile
  5415                           
  5416                           ;MCAL_LAYER/ADC/hal_adc.c: 73:             ADCON1bits.VCFG0 = 1;
  5417   0022C8  88C1               	bsf	193,4,c	;volatile
  5418                           
  5419                           ;MCAL_LAYER/ADC/hal_adc.c: 74:         }
  5420   0022CA  EF7D  F011         	goto	l377
  5421   0022CE                     l7959:
  5422                           
  5423                           ; BSR set to: 0
  5424   0022CE  EE20 F006          	lfsr	2,6
  5425   0022D2  5183               	movf	ADC_Init@_adc& (0+255),w,b
  5426   0022D4  26D9               	addwf	fsr2l,f,c
  5427   0022D6  5184               	movf	(ADC_Init@_adc+1)& (0+255),w,b
  5428   0022D8  22DA               	addwfc	fsr2h,f,c
  5429   0022DA  50DF               	movf	223,w,c
  5430   0022DC  0B0F               	andlw	15
  5431   0022DE  0900               	iorlw	0
  5432   0022E0  A4D8               	btfss	status,2,c
  5433   0022E2  EF75  F011         	goto	u7671
  5434   0022E6  EF77  F011         	goto	u7670
  5435   0022EA                     u7671:
  5436   0022EA  EF7B  F011         	goto	l378
  5437   0022EE                     u7670:
  5438   0022EE                     
  5439                           ; BSR set to: 0
  5440                           ;MCAL_LAYER/ADC/hal_adc.c: 76:             ADCON1bits.VCFG1 = 0;
  5441   0022EE  9AC1               	bcf	193,5,c	;volatile
  5442                           
  5443                           ;MCAL_LAYER/ADC/hal_adc.c: 77:             ADCON1bits.VCFG0 = 0;
  5444   0022F0  98C1               	bcf	193,4,c	;volatile
  5445                           
  5446                           ;MCAL_LAYER/ADC/hal_adc.c: 78:         }
  5447   0022F2  EF7D  F011         	goto	l377
  5448   0022F6                     l378:
  5449                           
  5450                           ; BSR set to: 0
  5451                           ;MCAL_LAYER/ADC/hal_adc.c: 80:             ADCON1bits.VCFG1 = 0;
  5452   0022F6  9AC1               	bcf	193,5,c	;volatile
  5453                           
  5454                           ;MCAL_LAYER/ADC/hal_adc.c: 81:             ADCON1bits.VCFG0 = 0;
  5455   0022F8  98C1               	bcf	193,4,c	;volatile
  5456   0022FA                     l377:
  5457                           
  5458                           ; BSR set to: 0
  5459                           ;MCAL_LAYER/ADC/hal_adc.c: 84:         (ADCON0bits.ADON = 1);
  5460   0022FA  80C2               	bsf	194,0,c	;volatile
  5461   0022FC                     l380:
  5462                           
  5463                           ; BSR set to: 0
  5464   0022FC  0012               	return		;funcret
  5465   0022FE                     __end_of_ADC_Init:
  5466                           	callstack 0
  5467                           
  5468 ;; *************** function _ADC_StartConversion_by_Interrupt *****************
  5469 ;; Defined at:
  5470 ;;		line 232 in file "MCAL_LAYER/ADC/hal_adc.c"
  5471 ;; Parameters:    Size  Location     Type
  5472 ;;  _adc            2    8[BANK0 ] PTR const struct .
  5473 ;;		 -> adc_1(8), 
  5474 ;;  channel         1   10[BANK0 ] enum E3045
  5475 ;; Auto vars:     Size  Location     Type
  5476 ;;  ret             1   12[BANK0 ] unsigned char 
  5477 ;;  l_conversion    1   11[BANK0 ] unsigned char 
  5478 ;; Return value:  Size  Location     Type
  5479 ;;                  1    wreg      unsigned char 
  5480 ;; Registers used:
  5481 ;;		wreg, status,2, status,0, cstack
  5482 ;; Tracked objects:
  5483 ;;		On entry : 0/0
  5484 ;;		On exit  : 0/0
  5485 ;;		Unchanged: 0/0
  5486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5487 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5488 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5490 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5491 ;;Total ram usage:        5 bytes
  5492 ;; Hardware stack levels used: 1
  5493 ;; Hardware stack levels required when called: 6
  5494 ;; This function calls:
  5495 ;;		_ADC_SelectChannel
  5496 ;;		_ADC_StartConversion
  5497 ;; This function is called by:
  5498 ;;		_main
  5499 ;; This function uses a non-reentrant model
  5500 ;;
  5501                           
  5502                           	psect	text30
  5503   003224                     __ptext30:
  5504                           	callstack 0
  5505   003224                     _ADC_StartConversion_by_Interrupt:
  5506                           	callstack 24
  5507   003224                     
  5508                           ;MCAL_LAYER/ADC/hal_adc.c: 234:     uint8 l_conversion_status = 0;
  5509   003224  0E00               	movlw	0
  5510   003226  0100               	movlb	0	; () banked
  5511   003228  6F8B               	movwf	ADC_StartConversion_by_Interrupt@l_conversion_status& (0+255),b
  5512   00322A                     
  5513                           ; BSR set to: 0
  5514                           ;MCAL_LAYER/ADC/hal_adc.c: 235:     if(((void*)0) == _adc){
  5515   00322A  5188               	movf	ADC_StartConversion_by_Interrupt@_adc& (0+255),w,b
  5516   00322C  1189               	iorwf	(ADC_StartConversion_by_Interrupt@_adc+1)& (0+255),w,b
  5517   00322E  A4D8               	btfss	status,2,c
  5518   003230  EF1C  F019         	goto	u7831
  5519   003234  EF1E  F019         	goto	u7830
  5520   003238                     u7831:
  5521   003238  EF20  F019         	goto	l8113
  5522   00323C                     u7830:
  5523   00323C                     
  5524                           ; BSR set to: 0
  5525                           ;MCAL_LAYER/ADC/hal_adc.c: 237:     }
  5526   00323C  EF32  F019         	goto	l428
  5527   003240                     l8113:
  5528                           
  5529                           ; BSR set to: 0
  5530                           ;MCAL_LAYER/ADC/hal_adc.c: 239:         ret = ADC_SelectChannel( _adc, channel );
  5531   003240  C088  F083         	movff	ADC_StartConversion_by_Interrupt@_adc,ADC_SelectChannel@_adc
  5532   003244  C089  F084         	movff	ADC_StartConversion_by_Interrupt@_adc+1,ADC_SelectChannel@_adc+1
  5533   003248  C08A  F085         	movff	ADC_StartConversion_by_Interrupt@channel,ADC_SelectChannel@channel
  5534   00324C  EC52  F019         	call	_ADC_SelectChannel	;wreg free
  5535   003250  0100               	movlb	0	; () banked
  5536   003252  6F8C               	movwf	ADC_StartConversion_by_Interrupt@ret& (0+255),b
  5537                           
  5538                           ;MCAL_LAYER/ADC/hal_adc.c: 240:         ret &= ADC_StartConversion(_adc);
  5539   003254  C088  F080         	movff	ADC_StartConversion_by_Interrupt@_adc,ADC_StartConversion@_adc
  5540   003258  C089  F081         	movff	ADC_StartConversion_by_Interrupt@_adc+1,ADC_StartConversion@_adc+1
  5541   00325C  ECC2  F019         	call	_ADC_StartConversion	;wreg free
  5542   003260  0100               	movlb	0	; () banked
  5543   003262  178C               	andwf	ADC_StartConversion_by_Interrupt@ret& (0+255),f,b
  5544   003264                     l428:
  5545                           
  5546                           ; BSR set to: 0
  5547   003264  0012               	return		;funcret
  5548   003266                     __end_of_ADC_StartConversion_by_Interrupt:
  5549                           	callstack 0
  5550                           
  5551 ;; *************** function _ADC_StartConversion *****************
  5552 ;; Defined at:
  5553 ;;		line 145 in file "MCAL_LAYER/ADC/hal_adc.c"
  5554 ;; Parameters:    Size  Location     Type
  5555 ;;  _adc            2    0[BANK0 ] PTR const struct .
  5556 ;;		 -> adc_1(8), 
  5557 ;; Auto vars:     Size  Location     Type
  5558 ;;  ret             1    2[BANK0 ] unsigned char 
  5559 ;; Return value:  Size  Location     Type
  5560 ;;                  1    wreg      unsigned char 
  5561 ;; Registers used:
  5562 ;;		wreg, status,2, status,0
  5563 ;; Tracked objects:
  5564 ;;		On entry : 0/0
  5565 ;;		On exit  : 0/0
  5566 ;;		Unchanged: 0/0
  5567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5568 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5569 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5571 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5572 ;;Total ram usage:        3 bytes
  5573 ;; Hardware stack levels used: 1
  5574 ;; Hardware stack levels required when called: 4
  5575 ;; This function calls:
  5576 ;;		Nothing
  5577 ;; This function is called by:
  5578 ;;		_ADC_StartConversion_by_Interrupt
  5579 ;;		_ADC_GetConversion_by_polling
  5580 ;; This function uses a non-reentrant model
  5581 ;;
  5582                           
  5583                           	psect	text31
  5584   003384                     __ptext31:
  5585                           	callstack 0
  5586   003384                     _ADC_StartConversion:
  5587                           	callstack 25
  5588   003384                     
  5589                           ;MCAL_LAYER/ADC/hal_adc.c: 146:     uint8 ret =(Std_ReturnType)0x01;
  5590   003384  0E01               	movlw	1
  5591   003386  0100               	movlb	0	; () banked
  5592   003388  6F82               	movwf	ADC_StartConversion@ret& (0+255),b
  5593   00338A                     
  5594                           ; BSR set to: 0
  5595                           ;MCAL_LAYER/ADC/hal_adc.c: 147:     if( ((void*)0) == _adc){
  5596   00338A  5180               	movf	ADC_StartConversion@_adc& (0+255),w,b
  5597   00338C  1181               	iorwf	(ADC_StartConversion@_adc+1)& (0+255),w,b
  5598   00338E  A4D8               	btfss	status,2,c
  5599   003390  EFCC  F019         	goto	u7691
  5600   003394  EFCE  F019         	goto	u7690
  5601   003398                     u7691:
  5602   003398  EFD2  F019         	goto	l393
  5603   00339C                     u7690:
  5604   00339C                     
  5605                           ; BSR set to: 0
  5606                           ;MCAL_LAYER/ADC/hal_adc.c: 148:         ret=(Std_ReturnType)0x00;
  5607   00339C  0E00               	movlw	0
  5608   00339E  6F82               	movwf	ADC_StartConversion@ret& (0+255),b
  5609                           
  5610                           ;MCAL_LAYER/ADC/hal_adc.c: 149:     }
  5611   0033A0  EFD3  F019         	goto	l7983
  5612   0033A4                     l393:
  5613                           
  5614                           ; BSR set to: 0
  5615                           ;MCAL_LAYER/ADC/hal_adc.c: 151:         (ADCON0bits.GO_nDONE = 1);
  5616   0033A4  82C2               	bsf	194,1,c	;volatile
  5617   0033A6                     l7983:
  5618                           
  5619                           ; BSR set to: 0
  5620                           ;MCAL_LAYER/ADC/hal_adc.c: 153:     return ret;
  5621   0033A6  5182               	movf	ADC_StartConversion@ret& (0+255),w,b
  5622   0033A8                     
  5623                           ; BSR set to: 0
  5624   0033A8  0012               	return		;funcret
  5625   0033AA                     __end_of_ADC_StartConversion:
  5626                           	callstack 0
  5627                           
  5628 ;; *************** function _ADC_SelectChannel *****************
  5629 ;; Defined at:
  5630 ;;		line 126 in file "MCAL_LAYER/ADC/hal_adc.c"
  5631 ;; Parameters:    Size  Location     Type
  5632 ;;  _adc            2    3[BANK0 ] PTR const struct .
  5633 ;;		 -> adc_1(8), 
  5634 ;;  channel         1    5[BANK0 ] enum E3045
  5635 ;; Auto vars:     Size  Location     Type
  5636 ;;  ret             1    7[BANK0 ] unsigned char 
  5637 ;; Return value:  Size  Location     Type
  5638 ;;                  1    wreg      unsigned char 
  5639 ;; Registers used:
  5640 ;;		wreg, status,2, status,0, cstack
  5641 ;; Tracked objects:
  5642 ;;		On entry : 0/0
  5643 ;;		On exit  : 0/0
  5644 ;;		Unchanged: 0/0
  5645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5646 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5647 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5648 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5649 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5650 ;;Total ram usage:        5 bytes
  5651 ;; Hardware stack levels used: 1
  5652 ;; Hardware stack levels required when called: 5
  5653 ;; This function calls:
  5654 ;;		_adc_input_channel_port_configure
  5655 ;; This function is called by:
  5656 ;;		_ADC_StartConversion_by_Interrupt
  5657 ;;		_ADC_GetConversion_by_polling
  5658 ;; This function uses a non-reentrant model
  5659 ;;
  5660                           
  5661                           	psect	text32
  5662   0032A4                     __ptext32:
  5663                           	callstack 0
  5664   0032A4                     _ADC_SelectChannel:
  5665                           	callstack 24
  5666   0032A4                     
  5667                           ;MCAL_LAYER/ADC/hal_adc.c: 127:     uint8 ret =(Std_ReturnType)0x01;
  5668   0032A4  0E01               	movlw	1
  5669   0032A6  0100               	movlb	0	; () banked
  5670   0032A8  6F87               	movwf	ADC_SelectChannel@ret& (0+255),b
  5671   0032AA                     
  5672                           ; BSR set to: 0
  5673                           ;MCAL_LAYER/ADC/hal_adc.c: 128:     if( ((void*)0) == _adc){
  5674   0032AA  5183               	movf	ADC_SelectChannel@_adc& (0+255),w,b
  5675   0032AC  1184               	iorwf	(ADC_SelectChannel@_adc+1)& (0+255),w,b
  5676   0032AE  A4D8               	btfss	status,2,c
  5677   0032B0  EF5C  F019         	goto	u7681
  5678   0032B4  EF5E  F019         	goto	u7680
  5679   0032B8                     u7681:
  5680   0032B8  EF62  F019         	goto	l7969
  5681   0032BC                     u7680:
  5682   0032BC                     
  5683                           ; BSR set to: 0
  5684                           ;MCAL_LAYER/ADC/hal_adc.c: 129:         ret=(Std_ReturnType)0x00;
  5685   0032BC  0E00               	movlw	0
  5686   0032BE  6F87               	movwf	ADC_SelectChannel@ret& (0+255),b
  5687                           
  5688                           ;MCAL_LAYER/ADC/hal_adc.c: 130:     }
  5689   0032C0  EF6E  F019         	goto	l7973
  5690   0032C4                     l7969:
  5691                           
  5692                           ; BSR set to: 0
  5693                           ;MCAL_LAYER/ADC/hal_adc.c: 133:          ADCON0bits.CHS = channel;
  5694   0032C4  C085  F086         	movff	ADC_SelectChannel@channel,??_ADC_SelectChannel
  5695   0032C8  4786               	rlncf	??_ADC_SelectChannel& (0+255),f,b
  5696   0032CA  4786               	rlncf	??_ADC_SelectChannel& (0+255),f,b
  5697   0032CC  50C2               	movf	194,w,c	;volatile
  5698   0032CE  1986               	xorwf	??_ADC_SelectChannel& (0+255),w,b
  5699   0032D0  0BC3               	andlw	-61
  5700   0032D2  1986               	xorwf	??_ADC_SelectChannel& (0+255),w,b
  5701   0032D4  6EC2               	movwf	194,c	;volatile
  5702   0032D6                     
  5703                           ; BSR set to: 0
  5704                           ;MCAL_LAYER/ADC/hal_adc.c: 134:          adc_input_channel_port_configure(channel);
  5705   0032D6  5185               	movf	ADC_SelectChannel@channel& (0+255),w,b
  5706   0032D8  ECE8  F015         	call	_adc_input_channel_port_configure
  5707   0032DC                     l7973:
  5708                           
  5709                           ;MCAL_LAYER/ADC/hal_adc.c: 136:     return ret;
  5710   0032DC  0100               	movlb	0	; () banked
  5711   0032DE  5187               	movf	ADC_SelectChannel@ret& (0+255),w,b
  5712   0032E0                     
  5713                           ; BSR set to: 0
  5714   0032E0  0012               	return		;funcret
  5715   0032E2                     __end_of_ADC_SelectChannel:
  5716                           	callstack 0
  5717                           
  5718 ;; *************** function _adc_input_channel_port_configure *****************
  5719 ;; Defined at:
  5720 ;;		line 244 in file "MCAL_LAYER/ADC/hal_adc.c"
  5721 ;; Parameters:    Size  Location     Type
  5722 ;;  channel         1    wreg     const enum E3045
  5723 ;; Auto vars:     Size  Location     Type
  5724 ;;  channel         1    2[BANK0 ] const enum E3045
  5725 ;; Return value:  Size  Location     Type
  5726 ;;                  1    wreg      void 
  5727 ;; Registers used:
  5728 ;;		wreg, status,2, status,0
  5729 ;; Tracked objects:
  5730 ;;		On entry : 0/0
  5731 ;;		On exit  : 0/0
  5732 ;;		Unchanged: 0/0
  5733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5735 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5736 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5737 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5738 ;;Total ram usage:        3 bytes
  5739 ;; Hardware stack levels used: 1
  5740 ;; Hardware stack levels required when called: 4
  5741 ;; This function calls:
  5742 ;;		Nothing
  5743 ;; This function is called by:
  5744 ;;		_ADC_Init
  5745 ;;		_ADC_SelectChannel
  5746 ;; This function uses a non-reentrant model
  5747 ;;
  5748                           
  5749                           	psect	text33
  5750   002BD0                     __ptext33:
  5751                           	callstack 0
  5752   002BD0                     _adc_input_channel_port_configure:
  5753                           	callstack 24
  5754                           
  5755                           ; BSR set to: 0
  5756                           ;incstack = 0
  5757                           ;adc_input_channel_port_configure@channel stored from wreg
  5758   002BD0  0100               	movlb	0	; () banked
  5759   002BD2  6F82               	movwf	adc_input_channel_port_configure@channel& (0+255),b
  5760   002BD4                     
  5761                           ;MCAL_LAYER/ADC/hal_adc.c: 245:     switch(channel){
  5762   002BD4  EFFE  F015         	goto	l7735
  5763   002BD8                     l7709:
  5764                           
  5765                           ; BSR set to: 0
  5766   002BD8  8092               	bsf	146,0,c	;volatile
  5767   002BDA  EF40  F016         	goto	l447
  5768   002BDE                     l7711:
  5769                           
  5770                           ; BSR set to: 0
  5771   002BDE  8292               	bsf	146,1,c	;volatile
  5772   002BE0  EF40  F016         	goto	l447
  5773   002BE4                     l7713:
  5774                           
  5775                           ; BSR set to: 0
  5776   002BE4  8492               	bsf	146,2,c	;volatile
  5777   002BE6  EF40  F016         	goto	l447
  5778   002BEA                     l7715:
  5779                           
  5780                           ; BSR set to: 0
  5781   002BEA  8692               	bsf	146,3,c	;volatile
  5782   002BEC  EF40  F016         	goto	l447
  5783   002BF0                     l7717:
  5784                           
  5785                           ; BSR set to: 0
  5786   002BF0  8A92               	bsf	146,5,c	;volatile
  5787   002BF2  EF40  F016         	goto	l447
  5788   002BF6                     l7731:
  5789                           
  5790                           ; BSR set to: 0
  5791   002BF6  8892               	bsf	146,4,c	;volatile
  5792   002BF8  EF40  F016         	goto	l447
  5793   002BFC                     l7735:
  5794   002BFC  0100               	movlb	0	; () banked
  5795   002BFE  5182               	movf	adc_input_channel_port_configure@channel& (0+255),w,b
  5796   002C00  6F80               	movwf	??_adc_input_channel_port_configure& (0+255),b
  5797   002C02  6B81               	clrf	(??_adc_input_channel_port_configure+1)& (0+255),b
  5798                           
  5799                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5800                           ; Switch size 1, requested type "simple"
  5801                           ; Number of cases is 1, Range of values is 0 to 0
  5802                           ; switch strategies available:
  5803                           ; Name         Instructions Cycles
  5804                           ; simple_byte            4     3 (average)
  5805                           ;	Chosen strategy is simple_byte
  5806   002C04  5181               	movf	(??_adc_input_channel_port_configure+1)& (0+255),w,b
  5807   002C06  0A00               	xorlw	0	; case 0
  5808   002C08  B4D8               	btfsc	status,2,c
  5809   002C0A  EF09  F016         	goto	l8833
  5810   002C0E  EF40  F016         	goto	l447
  5811   002C12                     l8833:
  5812                           
  5813                           ; BSR set to: 0
  5814                           ; Switch size 1, requested type "simple"
  5815                           ; Number of cases is 13, Range of values is 0 to 12
  5816                           ; switch strategies available:
  5817                           ; Name         Instructions Cycles
  5818                           ; simple_byte           40    21 (average)
  5819                           ;	Chosen strategy is simple_byte
  5820   002C12  5180               	movf	??_adc_input_channel_port_configure& (0+255),w,b
  5821   002C14  0A00               	xorlw	0	; case 0
  5822   002C16  B4D8               	btfsc	status,2,c
  5823   002C18  EFEC  F015         	goto	l7709
  5824   002C1C  0A01               	xorlw	1	; case 1
  5825   002C1E  B4D8               	btfsc	status,2,c
  5826   002C20  EFEF  F015         	goto	l7711
  5827   002C24  0A03               	xorlw	3	; case 2
  5828   002C26  B4D8               	btfsc	status,2,c
  5829   002C28  EFF2  F015         	goto	l7713
  5830   002C2C  0A01               	xorlw	1	; case 3
  5831   002C2E  B4D8               	btfsc	status,2,c
  5832   002C30  EFF5  F015         	goto	l7715
  5833   002C34  0A07               	xorlw	7	; case 4
  5834   002C36  B4D8               	btfsc	status,2,c
  5835   002C38  EFF8  F015         	goto	l7717
  5836   002C3C  0A01               	xorlw	1	; case 5
  5837   002C3E  B4D8               	btfsc	status,2,c
  5838   002C40  EFEC  F015         	goto	l7709
  5839   002C44  0A03               	xorlw	3	; case 6
  5840   002C46  B4D8               	btfsc	status,2,c
  5841   002C48  EFEF  F015         	goto	l7711
  5842   002C4C  0A01               	xorlw	1	; case 7
  5843   002C4E  B4D8               	btfsc	status,2,c
  5844   002C50  EFF2  F015         	goto	l7713
  5845   002C54  0A0F               	xorlw	15	; case 8
  5846   002C56  B4D8               	btfsc	status,2,c
  5847   002C58  EFF2  F015         	goto	l7713
  5848   002C5C  0A01               	xorlw	1	; case 9
  5849   002C5E  B4D8               	btfsc	status,2,c
  5850   002C60  EFF5  F015         	goto	l7715
  5851   002C64  0A03               	xorlw	3	; case 10
  5852   002C66  B4D8               	btfsc	status,2,c
  5853   002C68  EFEF  F015         	goto	l7711
  5854   002C6C  0A01               	xorlw	1	; case 11
  5855   002C6E  B4D8               	btfsc	status,2,c
  5856   002C70  EFFB  F015         	goto	l7731
  5857   002C74  0A07               	xorlw	7	; case 12
  5858   002C76  B4D8               	btfsc	status,2,c
  5859   002C78  EFEC  F015         	goto	l7709
  5860   002C7C  EF40  F016         	goto	l447
  5861   002C80                     l447:
  5862                           
  5863                           ; BSR set to: 0
  5864   002C80  0012               	return		;funcret
  5865   002C82                     __end_of_adc_input_channel_port_configure:
  5866                           	callstack 0
  5867                           
  5868 ;; *************** function _InterruptManager *****************
  5869 ;; Defined at:
  5870 ;;		line 33 in file "MCAL_LAYER/interrupt/mcal_interrupt_manager.c"
  5871 ;; Parameters:    Size  Location     Type
  5872 ;;		None
  5873 ;; Auto vars:     Size  Location     Type
  5874 ;;		None
  5875 ;; Return value:  Size  Location     Type
  5876 ;;                  1    wreg      void 
  5877 ;; Registers used:
  5878 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  5879 ;; Tracked objects:
  5880 ;;		On entry : 0/0
  5881 ;;		On exit  : 0/0
  5882 ;;		Unchanged: 0/0
  5883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5886 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5887 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5888 ;;Total ram usage:        6 bytes
  5889 ;; Hardware stack levels used: 1
  5890 ;; Hardware stack levels required when called: 3
  5891 ;; This function calls:
  5892 ;;		_ADC_ISR
  5893 ;;		_CCP1_ISR
  5894 ;;		_CCP2_ISR
  5895 ;;		_EUSART_RX_ISR
  5896 ;;		_EUSART_TX_ISR
  5897 ;;		_INT0_ISR
  5898 ;;		_INT1_ISR
  5899 ;;		_INT2_ISR
  5900 ;;		_MSSP_I2C_BCL_ISR
  5901 ;;		_MSSP_I2C_ISR
  5902 ;;		_RB4_ISR
  5903 ;;		_RB5_ISR
  5904 ;;		_RB6_ISR
  5905 ;;		_RB7_ISR
  5906 ;;		_Timer0_ISR
  5907 ;;		_Timer1_ISR
  5908 ;;		_Timer2_ISR
  5909 ;;		_Timer3_ISR
  5910 ;; This function is called by:
  5911 ;;		Interrupt level 2
  5912 ;; This function uses a non-reentrant model
  5913 ;;
  5914                           
  5915                           	psect	intcode
  5916   000008                     __pintcode:
  5917                           	callstack 0
  5918   000008                     _InterruptManager:
  5919                           	callstack 18
  5920                           
  5921                           ; BSR set to: 0
  5922                           ;incstack = 0
  5923   000008  826E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5924   00000A  ED37  F00A         	call	int_func,f	;refresh shadow registers
  5925                           
  5926                           	psect	intcode_body
  5927   00146E                     __pintcode_body:
  5928                           	callstack 18
  5929   00146E                     int_func:
  5930                           	callstack 18
  5931   00146E  0006               	pop		; remove dummy address from shadow register refresh
  5932   001470  CFFA F032          	movff	pclath,??_InterruptManager
  5933   001474  CFFB F033          	movff	pclatu,??_InterruptManager+1
  5934   001478  CFD9 F034          	movff	fsr2l,??_InterruptManager+2
  5935   00147C  CFDA F035          	movff	fsr2h,??_InterruptManager+3
  5936   001480  CFF3 F036          	movff	prodl,??_InterruptManager+4
  5937   001484  CFF4 F037          	movff	prodh,??_InterruptManager+5
  5938   001488                     
  5939                           ;MCAL_LAYER/interrupt/mcal_interrupt_manager.c: 34:     if((1 == INTCONbits.INT0IE) && (
      +                          1 == INTCONbits.INT0IF)){
  5940   001488  A8F2               	btfss	242,4,c	;volatile
  5941   00148A  EF49  F00A         	goto	i2u615_41
  5942   00148E  EF4B  F00A         	goto	i2u615_40
  5943   001492                     i2u615_41:
  5944   001492  EF54  F00A         	goto	i2l1088
  5945   001496                     i2u615_40:
  5946   001496  A2F2               	btfss	242,1,c	;volatile
  5947   001498  EF50  F00A         	goto	i2u616_41
  5948   00149C  EF52  F00A         	goto	i2u616_40
  5949   0014A0                     i2u616_41:
  5950   0014A0  EF54  F00A         	goto	i2l1088
  5951   0014A4                     i2u616_40:
  5952   0014A4                     
  5953                           ;MCAL_LAYER/interrupt/mcal_interrupt_manager.c: 35:         INT0_ISR();
  5954   0014A4  EC11  F01A         	call	_INT0_ISR	;wreg free
  5955   0014A8                     i2l1088:
  5956                           
  5957                           ;MCAL_LAYER/interrupt/mcal_interrupt_manager.c: 38:     if((1 == INTCON3bits.INT1IE) && 
      +                          (1 == INTCON3bits.INT1IF)){
  5958   0014A8  A6F0               	btfss	240,3,c	;volatile
  5959   0014AA  EF59  F00A         	goto	i2u617_41
  5960   0014AE  EF5B  F00A         	goto	i2u617_40
  5961   0014B2                     i2u617_41:
  5962   0014B2  EF64  F00A         	goto	i2l1090
  5963   0014B6                     i2u617_40:
  5964   0014B6  A0F0               	btfss	240,0,c	;volatile
  5965   0014B8  EF60  F00A         	goto	i2u618_41
  5966   0014BC  EF62  F00A         	goto	i2u618_40
  5967   0014C0                     i2u618_41:
  5968   0014C0  EF64  F00A         	goto	i2l1090
  5969   0014C4                     i2u618_40:
  5970   0014C4                     
  5971                           ;MCAL_LAYER/interrupt/mcal_interrupt_manager.c: 39:         INT1_ISR();
  5972   0014C4  EC0F  F01A         	call	_INT1_ISR	;wreg free
  5973   0014C8                     i2l1090:
  5974                           
  5975                           ;MCAL_LAYER/interrupt/mcal_interrupt_manager.c: 42:     if((1 == INTCON3bits.INT2IE) && 
      +                          (1 == INTCON3bits.INT2IF)){
  5976   0014C8  A8F0               	btfss	240,4,c	;volatile
  5977   0014CA  EF69  F00A         	goto	i2u619_41
  5978   0014CE  EF6B  F00A         	goto	i2u619_40
  5979   0014D2                     i2u619_41:
  5980   0014D2  EF74  F00A         	goto	i2l1092
  5981   0014D6                     i2u619_40:
  5982   0014D6  A2F0               	btfss	240,1,c	;volatile
  5983   0014D8  EF70  F00A         	goto	i2u620_41
  5984   0014DC  EF72  F00A         	goto	i2u620_40
  5985   0014E0                     i2u620_41:
  5986   0014E0  EF74  F00A         	goto	i2l1092
  5987   0014E4                     i2u620_40:
  5988   0014E4                     
  5989                           ;MCAL_LAYER/interrupt/mcal_interrupt_manager.c: 43:         INT2_ISR();
  5990   0014E4  EC0D  F01A         	call	_INT2_ISR	;wreg free
  5991   0014E8                     i2l1092:
  5992                           
  5993                           ;MCAL_LAYER/interrupt/mcal_interrupt_manager.c: 47:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) && (PORTBbits.RB4 == GPIO_LOW) && (RB4_Flag == 0)){
  5994   0014E8  A6F2               	btfss	242,3,c	;volatile
  5995   0014EA  EF79  F00A         	goto	i2u621_41
  5996   0014EE  EF7B  F00A         	goto	i2u621_40
  5997   0014F2                     i2u621_41:
  5998   0014F2  EF96  F00A         	goto	i2l1094
  5999   0014F6                     i2u621_40:
  6000   0014F6  A0F2               	btfss	242,0,c	;volatile
  6001   0014F8  EF80  F00A         	goto	i2u622_41
  6002   0014FC  EF82  F00A         	goto	i2u622_40
  6003   001500                     i2u622_41:
  6004   001500  EF96  F00A         	goto	i2l1094
  6005   001504                     i2u622_40:
  6006   001504  B881               	btfsc	129,4,c	;volatile
  6007   001506  EF87  F00A         	goto	i2u623_41
  6008   00150A  EF89  F00A         	goto	i2u623_40
  6009   00150E                     i2u623_41:
  6010   00150E  EF96  F00A         	goto	i2l1094
  6011   001512                     i2u623_40:
  6012   001512  506D               	movf	_RB4_Flag^0,w,c	;volatile
  6013   001514  A4D8               	btfss	status,2,c
  6014   001516  EF8F  F00A         	goto	i2u624_41
  6015   00151A  EF91  F00A         	goto	i2u624_40
  6016   00151E                     i2u624_41:
  6017   00151E  EF96  F00A         	goto	i2l1094
  6018   001522                     i2u624_40:
  6019   001522                     
  6020                           ;MCAL_LAYER/interrupt/mcal_interrupt_manager.c: 48:         RB4_Flag=1;
  6021   001522  0E01               	movlw	1
  6022   001524  6E6D               	movwf	_RB4_Flag^0,c	;volatile
  6023   001526                     
  6024                           ;MCAL_LAYER/interrupt/mcal_interrupt_manager.c: 49:         RB4_ISR(0);
  6025   001526  0E00               	movlw	0
  6026   001528  EC0B  F01A         	call	_RB4_ISR
  6027   00152C                     i2l1094:
  6028                           
  6029                           ;MCAL_LAYER/interrupt/mcal_interrupt_manager.c: 52:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) && (PORTBbits.RB4 == GPIO_HIGH) && (RB4_Flag == 1)){
  6030   00152C  A6F2               	btfss	242,3,c	;volatile
  6031   00152E  EF9B  F00A         	goto	i2u625_41
  6032   001532  EF9D  F00A         	goto	i2u625_40
  6033   001536                     i2u625_41:
  6034   001536  EFB8  F00A         	goto	i2l1096
  6035   00153A                     i2u625_40:
  6036   00153A  A0F2               	btfss	242,0,c	;volatile
  6037   00153C  EFA2  F00A         	goto	i2u626_41
  6038   001540  EFA4  F00A         	goto	i2u626_40
  6039   001544                     i2u626_41:
  6040   001544  EFB8  F00A         	goto	i2l1096
  6041   001548                     i2u626_40:
  6042   001548  A881               	btfss	129,4,c	;volatile
  6043   00154A  EFA9  F00A         	goto	i2u627_41
  6044   00154E  EFAB  F00A         	goto	i2u627_40
  6045   001552                     i2u627_41:
  6046   001552  EFB8  F00A         	goto	i2l1096
  6047   001556                     i2u627_40:
  6048   001556  046D               	decf	_RB4_Flag^0,w,c	;volatile
  6049   001558  A4D8               	btfss	status,2,c
  6050   00155A  EFB1  F00A         	goto	i2u628_41
  6051   00155E  EFB3  F00A         	goto	i2u628_40
  6052   001562                     i2u628_41:
  6053   001562  EFB8  F00A         	goto	i2l1096
  6054   001566                     i2u628_40:
  6055   001566                     
  6056                           ;MCAL_LAYER/interrupt/mcal_interrupt_manager.c: 53:         RB4_Flag=0;
  6057   001566  0E00               	movlw	0
  6058   001568  6E6D               	movwf	_RB4_Flag^0,c	;volatile
  6059   00156A                     
  6060                           ;MCAL_LAYER/interrupt/mcal_interrupt_manager.c: 54:         RB4_ISR(1);
  6061   00156A  0E01               	movlw	1
  6062   00156C  EC0B  F01A         	call	_RB4_ISR
  6063   001570                     i2l1096:
  6064                           
  6065                           ;MCAL_LAYER/interrupt/mcal_interrupt_manager.c: 57:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) && (PORTBbits.RB5 == GPIO_LOW) && (RB5_Flag == 0)){
  6066   001570  A6F2               	btfss	242,3,c	;volatile
  6067   001572  EFBD  F00A         	goto	i2u629_41
  6068   001576  EFBF  F00A         	goto	i2u629_40
  6069   00157A                     i2u629_41:
  6070   00157A  EFDA  F00A         	goto	i2l1098
  6071   00157E                     i2u629_40:
  6072   00157E  A0F2               	btfss	242,0,c	;volatile
  6073   001580  EFC4  F00A         	goto	i2u630_41
  6074   001584  EFC6  F00A         	goto	i2u630_40
  6075   001588                     i2u630_41:
  6076   001588  EFDA  F00A         	goto	i2l1098
  6077   00158C                     i2u630_40:
  6078   00158C  BA81               	btfsc	129,5,c	;volatile
  6079   00158E  EFCB  F00A         	goto	i2u631_41
  6080   001592  EFCD  F00A         	goto	i2u631_40
  6081   001596                     i2u631_41:
  6082   001596  EFDA  F00A         	goto	i2l1098
  6083   00159A                     i2u631_40:
  6084   00159A  506C               	movf	_RB5_Flag^0,w,c	;volatile
  6085   00159C  A4D8               	btfss	status,2,c
  6086   00159E  EFD3  F00A         	goto	i2u632_41
  6087   0015A2  EFD5  F00A         	goto	i2u632_40
  6088   0015A6                     i2u632_41:
  6089   0015A6  EFDA  F00A         	goto	i2l1098
  6090   0015AA                     i2u632_40:
  6091   0015AA                     
  6092                           ;MCAL_LAYER/interrupt/mcal_interrupt_manager.c: 58:         RB5_Flag=1;
  6093   0015AA  0E01               	movlw	1
  6094   0015AC  6E6C               	movwf	_RB5_Flag^0,c	;volatile
  6095   0015AE                     
  6096                           ;MCAL_LAYER/interrupt/mcal_interrupt_manager.c: 59:         RB5_ISR(0);
  6097   0015AE  0E00               	movlw	0
  6098   0015B0  EC09  F01A         	call	_RB5_ISR
  6099   0015B4                     i2l1098:
  6100                           
  6101                           ;MCAL_LAYER/interrupt/mcal_interrupt_manager.c: 62:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) && (PORTBbits.RB5 == GPIO_HIGH) && (RB5_Flag == 1)){
  6102   0015B4  A6F2               	btfss	242,3,c	;volatile
  6103   0015B6  EFDF  F00A         	goto	i2u633_41
  6104   0015BA  EFE1  F00A         	goto	i2u633_40
  6105   0015BE                     i2u633_41:
  6106   0015BE  EFFC  F00A         	goto	i2l1100
  6107   0015C2                     i2u633_40:
  6108   0015C2  A0F2               	btfss	242,0,c	;volatile
  6109   0015C4  EFE6  F00A         	goto	i2u634_41
  6110   0015C8  EFE8  F00A         	goto	i2u634_40
  6111   0015CC                     i2u634_41:
  6112   0015CC  EFFC  F00A         	goto	i2l1100
  6113   0015D0                     i2u634_40:
  6114   0015D0  AA81               	btfss	129,5,c	;volatile
  6115   0015D2  EFED  F00A         	goto	i2u635_41
  6116   0015D6  EFEF  F00A         	goto	i2u635_40
  6117   0015DA                     i2u635_41:
  6118   0015DA  EFFC  F00A         	goto	i2l1100
  6119   0015DE                     i2u635_40:
  6120   0015DE  046C               	decf	_RB5_Flag^0,w,c	;volatile
  6121   0015E0  A4D8               	btfss	status,2,c
  6122   0015E2  EFF5  F00A         	goto	i2u636_41
  6123   0015E6  EFF7  F00A         	goto	i2u636_40
  6124   0015EA                     i2u636_41:
  6125   0015EA  EFFC  F00A         	goto	i2l1100
  6126   0015EE                     i2u636_40:
  6127   0015EE                     
  6128                           ;MCAL_LAYER/interrupt/mcal_interrupt_manager.c: 63:         RB5_Flag=0;
  6129   0015EE  0E00               	movlw	0
  6130   0015F0  6E6C               	movwf	_RB5_Flag^0,c	;volatile
  6131   0015F2                     
  6132                           ;MCAL_LAYER/interrupt/mcal_interrupt_manager.c: 64:         RB5_ISR(1);
  6133   0015F2  0E01               	movlw	1
  6134   0015F4  EC09  F01A         	call	_RB5_ISR
  6135   0015F8                     i2l1100:
  6136                           
  6137                           ;MCAL_LAYER/interrupt/mcal_interrupt_manager.c: 67:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) && (PORTBbits.RB6 == GPIO_LOW) && (RB6_Flag == 0)){
  6138   0015F8  A6F2               	btfss	242,3,c	;volatile
  6139   0015FA  EF01  F00B         	goto	i2u637_41
  6140   0015FE  EF03  F00B         	goto	i2u637_40
  6141   001602                     i2u637_41:
  6142   001602  EF1E  F00B         	goto	i2l1102
  6143   001606                     i2u637_40:
  6144   001606  A0F2               	btfss	242,0,c	;volatile
  6145   001608  EF08  F00B         	goto	i2u638_41
  6146   00160C  EF0A  F00B         	goto	i2u638_40
  6147   001610                     i2u638_41:
  6148   001610  EF1E  F00B         	goto	i2l1102
  6149   001614                     i2u638_40:
  6150   001614  BC81               	btfsc	129,6,c	;volatile
  6151   001616  EF0F  F00B         	goto	i2u639_41
  6152   00161A  EF11  F00B         	goto	i2u639_40
  6153   00161E                     i2u639_41:
  6154   00161E  EF1E  F00B         	goto	i2l1102
  6155   001622                     i2u639_40:
  6156   001622  506B               	movf	_RB6_Flag^0,w,c	;volatile
  6157   001624  A4D8               	btfss	status,2,c
  6158   001626  EF17  F00B         	goto	i2u640_41
  6159   00162A  EF19  F00B         	goto	i2u640_40
  6160   00162E                     i2u640_41:
  6161   00162E  EF1E  F00B         	goto	i2l1102
  6162   001632                     i2u640_40:
  6163   001632                     
  6164                           ;MCAL_LAYER/interrupt/mcal_interrupt_manager.c: 68:         RB6_Flag=1;
  6165   001632  0E01               	movlw	1
  6166   001634  6E6B               	movwf	_RB6_Flag^0,c	;volatile
  6167   001636                     
  6168                           ;MCAL_LAYER/interrupt/mcal_interrupt_manager.c: 69:         RB6_ISR(0);
  6169   001636  0E00               	movlw	0
  6170   001638  EC07  F01A         	call	_RB6_ISR
  6171   00163C                     i2l1102:
  6172                           
  6173                           ;MCAL_LAYER/interrupt/mcal_interrupt_manager.c: 72:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) && (PORTBbits.RB6 == GPIO_HIGH) && (RB6_Flag == 1)){
  6174   00163C  A6F2               	btfss	242,3,c	;volatile
  6175   00163E  EF23  F00B         	goto	i2u641_41
  6176   001642  EF25  F00B         	goto	i2u641_40
  6177   001646                     i2u641_41:
  6178   001646  EF40  F00B         	goto	i2l1104
  6179   00164A                     i2u641_40:
  6180   00164A  A0F2               	btfss	242,0,c	;volatile
  6181   00164C  EF2A  F00B         	goto	i2u642_41
  6182   001650  EF2C  F00B         	goto	i2u642_40
  6183   001654                     i2u642_41:
  6184   001654  EF40  F00B         	goto	i2l1104
  6185   001658                     i2u642_40:
  6186   001658  AC81               	btfss	129,6,c	;volatile
  6187   00165A  EF31  F00B         	goto	i2u643_41
  6188   00165E  EF33  F00B         	goto	i2u643_40
  6189   001662                     i2u643_41:
  6190   001662  EF40  F00B         	goto	i2l1104
  6191   001666                     i2u643_40:
  6192   001666  046B               	decf	_RB6_Flag^0,w,c	;volatile
  6193   001668  A4D8               	btfss	status,2,c
  6194   00166A  EF39  F00B         	goto	i2u644_41
  6195   00166E  EF3B  F00B         	goto	i2u644_40
  6196   001672                     i2u644_41:
  6197   001672  EF40  F00B         	goto	i2l1104
  6198   001676                     i2u644_40:
  6199   001676                     
  6200                           ;MCAL_LAYER/interrupt/mcal_interrupt_manager.c: 73:         RB6_Flag=0;
  6201   001676  0E00               	movlw	0
  6202   001678  6E6B               	movwf	_RB6_Flag^0,c	;volatile
  6203   00167A                     
  6204                           ;MCAL_LAYER/interrupt/mcal_interrupt_manager.c: 74:         RB6_ISR(1);
  6205   00167A  0E01               	movlw	1
  6206   00167C  EC07  F01A         	call	_RB6_ISR
  6207   001680                     i2l1104:
  6208                           
  6209                           ;MCAL_LAYER/interrupt/mcal_interrupt_manager.c: 78:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) && (PORTBbits.RB7 == GPIO_LOW) && (RB7_Flag == 0)){
  6210   001680  A6F2               	btfss	242,3,c	;volatile
  6211   001682  EF45  F00B         	goto	i2u645_41
  6212   001686  EF47  F00B         	goto	i2u645_40
  6213   00168A                     i2u645_41:
  6214   00168A  EF62  F00B         	goto	i2l1106
  6215   00168E                     i2u645_40:
  6216   00168E  A0F2               	btfss	242,0,c	;volatile
  6217   001690  EF4C  F00B         	goto	i2u646_41
  6218   001694  EF4E  F00B         	goto	i2u646_40
  6219   001698                     i2u646_41:
  6220   001698  EF62  F00B         	goto	i2l1106
  6221   00169C                     i2u646_40:
  6222   00169C  BE81               	btfsc	129,7,c	;volatile
  6223   00169E  EF53  F00B         	goto	i2u647_41
  6224   0016A2  EF55  F00B         	goto	i2u647_40
  6225   0016A6                     i2u647_41:
  6226   0016A6  EF62  F00B         	goto	i2l1106
  6227   0016AA                     i2u647_40:
  6228   0016AA  506A               	movf	_RB7_Flag^0,w,c	;volatile
  6229   0016AC  A4D8               	btfss	status,2,c
  6230   0016AE  EF5B  F00B         	goto	i2u648_41
  6231   0016B2  EF5D  F00B         	goto	i2u648_40
  6232   0016B6                     i2u648_41:
  6233   0016B6  EF62  F00B         	goto	i2l1106
  6234   0016BA                     i2u648_40:
  6235   0016BA                     
  6236                           ;MCAL_LAYER/interrupt/mcal_interrupt_manager.c: 79:         RB7_Flag=1;
  6237   0016BA  0E01               	movlw	1
  6238   0016BC  6E6A               	movwf	_RB7_Flag^0,c	;volatile
  6239   0016BE                     
  6240                           ;MCAL_LAYER/interrupt/mcal_interrupt_manager.c: 80:         RB7_ISR(0);
  6241   0016BE  0E00               	movlw	0
  6242   0016C0  EC05  F01A         	call	_RB7_ISR
  6243   0016C4                     i2l1106:
  6244                           
  6245                           ;MCAL_LAYER/interrupt/mcal_interrupt_manager.c: 83:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) && (PORTBbits.RB7 == GPIO_HIGH) && (RB7_Flag == 1)){
  6246   0016C4  A6F2               	btfss	242,3,c	;volatile
  6247   0016C6  EF67  F00B         	goto	i2u649_41
  6248   0016CA  EF69  F00B         	goto	i2u649_40
  6249   0016CE                     i2u649_41:
  6250   0016CE  EF84  F00B         	goto	i2l1108
  6251   0016D2                     i2u649_40:
  6252   0016D2  A0F2               	btfss	242,0,c	;volatile
  6253   0016D4  EF6E  F00B         	goto	i2u650_41
  6254   0016D8  EF70  F00B         	goto	i2u650_40
  6255   0016DC                     i2u650_41:
  6256   0016DC  EF84  F00B         	goto	i2l1108
  6257   0016E0                     i2u650_40:
  6258   0016E0  AE81               	btfss	129,7,c	;volatile
  6259   0016E2  EF75  F00B         	goto	i2u651_41
  6260   0016E6  EF77  F00B         	goto	i2u651_40
  6261   0016EA                     i2u651_41:
  6262   0016EA  EF84  F00B         	goto	i2l1108
  6263   0016EE                     i2u651_40:
  6264   0016EE  046A               	decf	_RB7_Flag^0,w,c	;volatile
  6265   0016F0  A4D8               	btfss	status,2,c
  6266   0016F2  EF7D  F00B         	goto	i2u652_41
  6267   0016F6  EF7F  F00B         	goto	i2u652_40
  6268   0016FA                     i2u652_41:
  6269   0016FA  EF84  F00B         	goto	i2l1108
  6270   0016FE                     i2u652_40:
  6271   0016FE                     
  6272                           ;MCAL_LAYER/interrupt/mcal_interrupt_manager.c: 84:         RB7_Flag=0;
  6273   0016FE  0E00               	movlw	0
  6274   001700  6E6A               	movwf	_RB7_Flag^0,c	;volatile
  6275   001702                     
  6276                           ;MCAL_LAYER/interrupt/mcal_interrupt_manager.c: 85:         RB7_ISR(1);
  6277   001702  0E01               	movlw	1
  6278   001704  EC05  F01A         	call	_RB7_ISR
  6279   001708                     i2l1108:
  6280                           
  6281                           ;MCAL_LAYER/interrupt/mcal_interrupt_manager.c: 88:     if((1 == PIE1bits.ADIE) && (1 ==
      +                           PIR1bits.ADIF)){
  6282   001708  AC9D               	btfss	157,6,c	;volatile
  6283   00170A  EF89  F00B         	goto	i2u653_41
  6284   00170E  EF8B  F00B         	goto	i2u653_40
  6285   001712                     i2u653_41:
  6286   001712  EF94  F00B         	goto	i2l1110
  6287   001716                     i2u653_40:
  6288   001716  AC9E               	btfss	158,6,c	;volatile
  6289   001718  EF90  F00B         	goto	i2u654_41
  6290   00171C  EF92  F00B         	goto	i2u654_40
  6291   001720                     i2u654_41:
  6292   001720  EF94  F00B         	goto	i2l1110
  6293   001724                     i2u654_40:
  6294   001724                     
  6295                           ;MCAL_LAYER/interrupt/mcal_interrupt_manager.c: 89:         ADC_ISR();
  6296   001724  ECAB  F019         	call	_ADC_ISR	;wreg free
  6297   001728                     i2l1110:
  6298                           
  6299                           ;MCAL_LAYER/interrupt/mcal_interrupt_manager.c: 92:     if((1 == INTCONbits.TMR0IE) && (
      +                          1 == INTCONbits.TMR0IF)){
  6300   001728  AAF2               	btfss	242,5,c	;volatile
  6301   00172A  EF99  F00B         	goto	i2u655_41
  6302   00172E  EF9B  F00B         	goto	i2u655_40
  6303   001732                     i2u655_41:
  6304   001732  EFA4  F00B         	goto	i2l1112
  6305   001736                     i2u655_40:
  6306   001736  A4F2               	btfss	242,2,c	;volatile
  6307   001738  EFA0  F00B         	goto	i2u656_41
  6308   00173C  EFA2  F00B         	goto	i2u656_40
  6309   001740                     i2u656_41:
  6310   001740  EFA4  F00B         	goto	i2l1112
  6311   001744                     i2u656_40:
  6312   001744                     
  6313                           ;MCAL_LAYER/interrupt/mcal_interrupt_manager.c: 93:         Timer0_ISR();
  6314   001744  ECF9  F019         	call	_Timer0_ISR	;wreg free
  6315   001748                     i2l1112:
  6316                           
  6317                           ;MCAL_LAYER/interrupt/mcal_interrupt_manager.c: 96:     if((1 == PIE1bits.TMR1IE) && (1 
      +                          == PIR1bits.TMR1IF)){
  6318   001748  A09D               	btfss	157,0,c	;volatile
  6319   00174A  EFA9  F00B         	goto	i2u657_41
  6320   00174E  EFAB  F00B         	goto	i2u657_40
  6321   001752                     i2u657_41:
  6322   001752  EFB4  F00B         	goto	i2l1114
  6323   001756                     i2u657_40:
  6324   001756  A09E               	btfss	158,0,c	;volatile
  6325   001758  EFB0  F00B         	goto	i2u658_41
  6326   00175C  EFB2  F00B         	goto	i2u658_40
  6327   001760                     i2u658_41:
  6328   001760  EFB4  F00B         	goto	i2l1114
  6329   001764                     i2u658_40:
  6330   001764                     
  6331                           ;MCAL_LAYER/interrupt/mcal_interrupt_manager.c: 97:         Timer1_ISR();
  6332   001764  ECF3  F019         	call	_Timer1_ISR	;wreg free
  6333   001768                     i2l1114:
  6334                           
  6335                           ;MCAL_LAYER/interrupt/mcal_interrupt_manager.c: 100:     if((1 == PIE1bits.TMR2IE) && (1
      +                           == PIR1bits.TMR2IF)){
  6336   001768  A29D               	btfss	157,1,c	;volatile
  6337   00176A  EFB9  F00B         	goto	i2u659_41
  6338   00176E  EFBB  F00B         	goto	i2u659_40
  6339   001772                     i2u659_41:
  6340   001772  EFC4  F00B         	goto	i2l1116
  6341   001776                     i2u659_40:
  6342   001776  A29E               	btfss	158,1,c	;volatile
  6343   001778  EFC0  F00B         	goto	i2u660_41
  6344   00177C  EFC2  F00B         	goto	i2u660_40
  6345   001780                     i2u660_41:
  6346   001780  EFC4  F00B         	goto	i2l1116
  6347   001784                     i2u660_40:
  6348   001784                     
  6349                           ;MCAL_LAYER/interrupt/mcal_interrupt_manager.c: 101:         Timer2_ISR();
  6350   001784  ECFF  F019         	call	_Timer2_ISR	;wreg free
  6351   001788                     i2l1116:
  6352                           
  6353                           ;MCAL_LAYER/interrupt/mcal_interrupt_manager.c: 104:     if((1 == PIE2bits.TMR3IE) && (1
      +                           == PIR2bits.TMR3IF)){
  6354   001788  A2A0               	btfss	160,1,c	;volatile
  6355   00178A  EFC9  F00B         	goto	i2u661_41
  6356   00178E  EFCB  F00B         	goto	i2u661_40
  6357   001792                     i2u661_41:
  6358   001792  EFD4  F00B         	goto	i2l1118
  6359   001796                     i2u661_40:
  6360   001796  A2A1               	btfss	161,1,c	;volatile
  6361   001798  EFD0  F00B         	goto	i2u662_41
  6362   00179C  EFD2  F00B         	goto	i2u662_40
  6363   0017A0                     i2u662_41:
  6364   0017A0  EFD4  F00B         	goto	i2l1118
  6365   0017A4                     i2u662_40:
  6366   0017A4                     
  6367                           ;MCAL_LAYER/interrupt/mcal_interrupt_manager.c: 105:         Timer3_ISR();
  6368   0017A4  ECED  F019         	call	_Timer3_ISR	;wreg free
  6369   0017A8                     i2l1118:
  6370                           
  6371                           ;MCAL_LAYER/interrupt/mcal_interrupt_manager.c: 108:     if((1 == PIE1bits.CCP1IE) && (1
      +                           ==PIR1bits.CCP1IF)){
  6372   0017A8  A49D               	btfss	157,2,c	;volatile
  6373   0017AA  EFD9  F00B         	goto	i2u663_41
  6374   0017AE  EFDB  F00B         	goto	i2u663_40
  6375   0017B2                     i2u663_41:
  6376   0017B2  EFE4  F00B         	goto	i2l1120
  6377   0017B6                     i2u663_40:
  6378   0017B6  A49E               	btfss	158,2,c	;volatile
  6379   0017B8  EFE0  F00B         	goto	i2u664_41
  6380   0017BC  EFE2  F00B         	goto	i2u664_40
  6381   0017C0                     i2u664_41:
  6382   0017C0  EFE4  F00B         	goto	i2l1120
  6383   0017C4                     i2u664_40:
  6384   0017C4                     
  6385                           ;MCAL_LAYER/interrupt/mcal_interrupt_manager.c: 109:         CCP1_ISR();
  6386   0017C4  EC17  F01A         	call	_CCP1_ISR	;wreg free
  6387   0017C8                     i2l1120:
  6388                           
  6389                           ;MCAL_LAYER/interrupt/mcal_interrupt_manager.c: 112:     if((1 == PIE2bits.CCP2IE) && (1
      +                           ==PIR2bits.CCP2IF)){
  6390   0017C8  A0A0               	btfss	160,0,c	;volatile
  6391   0017CA  EFE9  F00B         	goto	i2u665_41
  6392   0017CE  EFEB  F00B         	goto	i2u665_40
  6393   0017D2                     i2u665_41:
  6394   0017D2  EFF4  F00B         	goto	i2l1122
  6395   0017D6                     i2u665_40:
  6396   0017D6  A0A1               	btfss	161,0,c	;volatile
  6397   0017D8  EFF0  F00B         	goto	i2u666_41
  6398   0017DC  EFF2  F00B         	goto	i2u666_40
  6399   0017E0                     i2u666_41:
  6400   0017E0  EFF4  F00B         	goto	i2l1122
  6401   0017E4                     i2u666_40:
  6402   0017E4                     
  6403                           ;MCAL_LAYER/interrupt/mcal_interrupt_manager.c: 113:         CCP2_ISR();
  6404   0017E4  EC15  F01A         	call	_CCP2_ISR	;wreg free
  6405   0017E8                     i2l1122:
  6406                           
  6407                           ;MCAL_LAYER/interrupt/mcal_interrupt_manager.c: 116:    if((1 == PIE1bits.TXIE) && (1 ==
      +                          PIR1bits.TXIF)){
  6408   0017E8  A89D               	btfss	157,4,c	;volatile
  6409   0017EA  EFF9  F00B         	goto	i2u667_41
  6410   0017EE  EFFB  F00B         	goto	i2u667_40
  6411   0017F2                     i2u667_41:
  6412   0017F2  EF04  F00C         	goto	i2l1124
  6413   0017F6                     i2u667_40:
  6414   0017F6  A89E               	btfss	158,4,c	;volatile
  6415   0017F8  EF00  F00C         	goto	i2u668_41
  6416   0017FC  EF02  F00C         	goto	i2u668_40
  6417   001800                     i2u668_41:
  6418   001800  EF04  F00C         	goto	i2l1124
  6419   001804                     i2u668_40:
  6420   001804                     
  6421                           ;MCAL_LAYER/interrupt/mcal_interrupt_manager.c: 117:         EUSART_TX_ISR();
  6422   001804  EC13  F01A         	call	_EUSART_TX_ISR	;wreg free
  6423   001808                     i2l1124:
  6424                           
  6425                           ;MCAL_LAYER/interrupt/mcal_interrupt_manager.c: 120:     if((1 == PIE1bits.RCIE) && (1 =
      +                          =PIR1bits.RCIF)){
  6426   001808  AA9D               	btfss	157,5,c	;volatile
  6427   00180A  EF09  F00C         	goto	i2u669_41
  6428   00180E  EF0B  F00C         	goto	i2u669_40
  6429   001812                     i2u669_41:
  6430   001812  EF14  F00C         	goto	i2l1126
  6431   001816                     i2u669_40:
  6432   001816  AA9E               	btfss	158,5,c	;volatile
  6433   001818  EF10  F00C         	goto	i2u670_41
  6434   00181C  EF12  F00C         	goto	i2u670_40
  6435   001820                     i2u670_41:
  6436   001820  EF14  F00C         	goto	i2l1126
  6437   001824                     i2u670_40:
  6438   001824                     
  6439                           ;MCAL_LAYER/interrupt/mcal_interrupt_manager.c: 121:         EUSART_RX_ISR();
  6440   001824  EC1C  F01A         	call	_EUSART_RX_ISR	;wreg free
  6441   001828                     i2l1126:
  6442                           
  6443                           ;MCAL_LAYER/interrupt/mcal_interrupt_manager.c: 124:     if((1 == PIE1bits.SSPIE) && (1 
      +                          ==PIR1bits.SSPIF)){
  6444   001828  A69D               	btfss	157,3,c	;volatile
  6445   00182A  EF19  F00C         	goto	i2u671_41
  6446   00182E  EF1B  F00C         	goto	i2u671_40
  6447   001832                     i2u671_41:
  6448   001832  EF24  F00C         	goto	i2l1128
  6449   001836                     i2u671_40:
  6450   001836  A69E               	btfss	158,3,c	;volatile
  6451   001838  EF20  F00C         	goto	i2u672_41
  6452   00183C  EF22  F00C         	goto	i2u672_40
  6453   001840                     i2u672_41:
  6454   001840  EF24  F00C         	goto	i2l1128
  6455   001844                     i2u672_40:
  6456   001844                     
  6457                           ;MCAL_LAYER/interrupt/mcal_interrupt_manager.c: 125:         MSSP_I2C_ISR();
  6458   001844  EC1A  F01A         	call	_MSSP_I2C_ISR	;wreg free
  6459   001848                     i2l1128:
  6460                           
  6461                           ;MCAL_LAYER/interrupt/mcal_interrupt_manager.c: 128:     if((1 == PIE2bits.BCLIE) && (1 
      +                          == PIR2bits.BCLIF)){
  6462   001848  A6A0               	btfss	160,3,c	;volatile
  6463   00184A  EF29  F00C         	goto	i2u673_41
  6464   00184E  EF2B  F00C         	goto	i2u673_40
  6465   001852                     i2u673_41:
  6466   001852  EF34  F00C         	goto	i2l1131
  6467   001856                     i2u673_40:
  6468   001856  A6A1               	btfss	161,3,c	;volatile
  6469   001858  EF30  F00C         	goto	i2u674_41
  6470   00185C  EF32  F00C         	goto	i2u674_40
  6471   001860                     i2u674_41:
  6472   001860  EF34  F00C         	goto	i2l1131
  6473   001864                     i2u674_40:
  6474   001864                     
  6475                           ;MCAL_LAYER/interrupt/mcal_interrupt_manager.c: 129:         MSSP_I2C_BCL_ISR();
  6476   001864  EC1B  F01A         	call	_MSSP_I2C_BCL_ISR	;wreg free
  6477   001868                     i2l1131:
  6478   001868  C037  FFF4         	movff	??_InterruptManager+5,prodh
  6479   00186C  C036  FFF3         	movff	??_InterruptManager+4,prodl
  6480   001870  C035  FFDA         	movff	??_InterruptManager+3,fsr2h
  6481   001874  C034  FFD9         	movff	??_InterruptManager+2,fsr2l
  6482   001878  C033  FFFB         	movff	??_InterruptManager+1,pclatu
  6483   00187C  C032  FFFA         	movff	??_InterruptManager,pclath
  6484   001880  926E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6485   001882  0011               	retfie		f
  6486   001884                     __end_of_InterruptManager:
  6487                           	callstack 0
  6488                           
  6489 ;; *************** function _Timer3_ISR *****************
  6490 ;; Defined at:
  6491 ;;		line 126 in file "MCAL_LAYER/Timer3/hal_timer3.c"
  6492 ;; Parameters:    Size  Location     Type
  6493 ;;		None
  6494 ;; Auto vars:     Size  Location     Type
  6495 ;;		None
  6496 ;; Return value:  Size  Location     Type
  6497 ;;                  1    wreg      void 
  6498 ;; Registers used:
  6499 ;;		wreg, status,2
  6500 ;; Tracked objects:
  6501 ;;		On entry : 0/0
  6502 ;;		On exit  : 0/0
  6503 ;;		Unchanged: 0/0
  6504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6509 ;;Total ram usage:        0 bytes
  6510 ;; Hardware stack levels used: 1
  6511 ;; This function calls:
  6512 ;;		Nothing
  6513 ;; This function is called by:
  6514 ;;		_InterruptManager
  6515 ;; This function uses a non-reentrant model
  6516 ;;
  6517                           
  6518                           	psect	text35
  6519   0033DA                     __ptext35:
  6520                           	callstack 0
  6521   0033DA                     _Timer3_ISR:
  6522                           	callstack 20
  6523   0033DA                     
  6524                           ;MCAL_LAYER/Timer3/hal_timer3.c: 128:     (PIR2bits.TMR3IF = 0);
  6525   0033DA  92A1               	bcf	161,1,c	;volatile
  6526   0033DC                     
  6527                           ;MCAL_LAYER/Timer3/hal_timer3.c: 129:     TMR3H = (timer3_preload) >>8;
  6528   0033DC  5039               	movf	(_timer3_preload+1)^0,w,c
  6529   0033DE  6EB3               	movwf	179,c	;volatile
  6530   0033E0                     
  6531                           ;MCAL_LAYER/Timer3/hal_timer3.c: 130:     TMR3L = (uint8)(timer3_preload);
  6532   0033E0  C038  FFB2         	movff	_timer3_preload,4018	;volatile
  6533   0033E4  0012               	return		;funcret
  6534   0033E6                     __end_of_Timer3_ISR:
  6535                           	callstack 0
  6536                           
  6537 ;; *************** function _Timer2_ISR *****************
  6538 ;; Defined at:
  6539 ;;		line 118 in file "MCAL_LAYER/Timer2/hal_timer2.c"
  6540 ;; Parameters:    Size  Location     Type
  6541 ;;		None
  6542 ;; Auto vars:     Size  Location     Type
  6543 ;;		None
  6544 ;; Return value:  Size  Location     Type
  6545 ;;                  1    wreg      void 
  6546 ;; Registers used:
  6547 ;;		None
  6548 ;; Tracked objects:
  6549 ;;		On entry : 0/0
  6550 ;;		On exit  : 0/0
  6551 ;;		Unchanged: 0/0
  6552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6557 ;;Total ram usage:        0 bytes
  6558 ;; Hardware stack levels used: 1
  6559 ;; This function calls:
  6560 ;;		Nothing
  6561 ;; This function is called by:
  6562 ;;		_InterruptManager
  6563 ;; This function uses a non-reentrant model
  6564 ;;
  6565                           
  6566                           	psect	text36
  6567   0033FE                     __ptext36:
  6568                           	callstack 0
  6569   0033FE                     _Timer2_ISR:
  6570                           	callstack 20
  6571   0033FE                     
  6572                           ;MCAL_LAYER/Timer2/hal_timer2.c: 120:     (PIR1bits.TMR2IF = 0);
  6573   0033FE  929E               	bcf	158,1,c	;volatile
  6574                           
  6575                           ;MCAL_LAYER/Timer2/hal_timer2.c: 121:     TMR2 = timer2_preload;
  6576   003400  C060  FFCC         	movff	_timer2_preload,4044	;volatile
  6577   003404  0012               	return		;funcret
  6578   003406                     __end_of_Timer2_ISR:
  6579                           	callstack 0
  6580                           
  6581 ;; *************** function _Timer1_ISR *****************
  6582 ;; Defined at:
  6583 ;;		line 126 in file "MCAL_LAYER/Timer1/hal_timer1.c"
  6584 ;; Parameters:    Size  Location     Type
  6585 ;;		None
  6586 ;; Auto vars:     Size  Location     Type
  6587 ;;		None
  6588 ;; Return value:  Size  Location     Type
  6589 ;;                  1    wreg      void 
  6590 ;; Registers used:
  6591 ;;		wreg, status,2
  6592 ;; Tracked objects:
  6593 ;;		On entry : 0/0
  6594 ;;		On exit  : 0/0
  6595 ;;		Unchanged: 0/0
  6596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6601 ;;Total ram usage:        0 bytes
  6602 ;; Hardware stack levels used: 1
  6603 ;; This function calls:
  6604 ;;		Nothing
  6605 ;; This function is called by:
  6606 ;;		_InterruptManager
  6607 ;; This function uses a non-reentrant model
  6608 ;;
  6609                           
  6610                           	psect	text37
  6611   0033E6                     __ptext37:
  6612                           	callstack 0
  6613   0033E6                     _Timer1_ISR:
  6614                           	callstack 20
  6615   0033E6                     
  6616                           ;MCAL_LAYER/Timer1/hal_timer1.c: 128:     (PIR1bits.TMR1IF = 0);
  6617   0033E6  909E               	bcf	158,0,c	;volatile
  6618   0033E8                     
  6619                           ;MCAL_LAYER/Timer1/hal_timer1.c: 129:     TMR1H = (timer1_preload) >>8;
  6620   0033E8  503B               	movf	(_timer1_preload+1)^0,w,c
  6621   0033EA  6ECF               	movwf	207,c	;volatile
  6622   0033EC                     
  6623                           ;MCAL_LAYER/Timer1/hal_timer1.c: 130:     TMR1L = (uint8)(timer1_preload);
  6624   0033EC  C03A  FFCE         	movff	_timer1_preload,4046	;volatile
  6625   0033F0  0012               	return		;funcret
  6626   0033F2                     __end_of_Timer1_ISR:
  6627                           	callstack 0
  6628                           
  6629 ;; *************** function _Timer0_ISR *****************
  6630 ;; Defined at:
  6631 ;;		line 131 in file "MCAL_LAYER/Timer/hal_timer0.c"
  6632 ;; Parameters:    Size  Location     Type
  6633 ;;		None
  6634 ;; Auto vars:     Size  Location     Type
  6635 ;;		None
  6636 ;; Return value:  Size  Location     Type
  6637 ;;                  1    wreg      void 
  6638 ;; Registers used:
  6639 ;;		wreg, status,2
  6640 ;; Tracked objects:
  6641 ;;		On entry : 0/0
  6642 ;;		On exit  : 0/0
  6643 ;;		Unchanged: 0/0
  6644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6649 ;;Total ram usage:        0 bytes
  6650 ;; Hardware stack levels used: 1
  6651 ;; This function calls:
  6652 ;;		Nothing
  6653 ;; This function is called by:
  6654 ;;		_InterruptManager
  6655 ;; This function uses a non-reentrant model
  6656 ;;
  6657                           
  6658                           	psect	text38
  6659   0033F2                     __ptext38:
  6660                           	callstack 0
  6661   0033F2                     _Timer0_ISR:
  6662                           	callstack 20
  6663   0033F2                     
  6664                           ;MCAL_LAYER/Timer/hal_timer0.c: 133:     (INTCONbits.TMR0IF = 0);
  6665   0033F2  94F2               	bcf	242,2,c	;volatile
  6666   0033F4                     
  6667                           ;MCAL_LAYER/Timer/hal_timer0.c: 134:     TMR0H = (timer0_preload) >>8;
  6668   0033F4  503F               	movf	(_timer0_preload+1)^0,w,c
  6669   0033F6  6ED7               	movwf	215,c	;volatile
  6670   0033F8                     
  6671                           ;MCAL_LAYER/Timer/hal_timer0.c: 135:     TMR0L = (uint8)(timer0_preload);
  6672   0033F8  C03E  FFD6         	movff	_timer0_preload,4054	;volatile
  6673   0033FC  0012               	return		;funcret
  6674   0033FE                     __end_of_Timer0_ISR:
  6675                           	callstack 0
  6676                           
  6677 ;; *************** function _RB7_ISR *****************
  6678 ;; Defined at:
  6679 ;;		line 92 in file "MCAL_LAYER/interrupt/mcal_external_interrupt.c"
  6680 ;; Parameters:    Size  Location     Type
  6681 ;;  pin7_source     1    wreg     unsigned char 
  6682 ;; Auto vars:     Size  Location     Type
  6683 ;;  pin7_source     1    0[COMRAM] unsigned char 
  6684 ;; Return value:  Size  Location     Type
  6685 ;;                  1    wreg      void 
  6686 ;; Registers used:
  6687 ;;		wreg
  6688 ;; Tracked objects:
  6689 ;;		On entry : 0/0
  6690 ;;		On exit  : 0/0
  6691 ;;		Unchanged: 0/0
  6692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6694 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6696 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6697 ;;Total ram usage:        1 bytes
  6698 ;; Hardware stack levels used: 1
  6699 ;; This function calls:
  6700 ;;		Nothing
  6701 ;; This function is called by:
  6702 ;;		_InterruptManager
  6703 ;; This function uses a non-reentrant model
  6704 ;;
  6705                           
  6706                           	psect	text39
  6707   00340A                     __ptext39:
  6708                           	callstack 0
  6709   00340A                     _RB7_ISR:
  6710                           	callstack 20
  6711   00340A                     
  6712                           ;MCAL_LAYER/interrupt/mcal_external_interrupt.c: 94:     (INTCONbits.RBIF = 0);
  6713   00340A  90F2               	bcf	242,0,c	;volatile
  6714   00340C  0012               	return		;funcret
  6715   00340E                     __end_of_RB7_ISR:
  6716                           	callstack 0
  6717                           
  6718 ;; *************** function _RB6_ISR *****************
  6719 ;; Defined at:
  6720 ;;		line 80 in file "MCAL_LAYER/interrupt/mcal_external_interrupt.c"
  6721 ;; Parameters:    Size  Location     Type
  6722 ;;  pin6_source     1    wreg     unsigned char 
  6723 ;; Auto vars:     Size  Location     Type
  6724 ;;  pin6_source     1    0[COMRAM] unsigned char 
  6725 ;; Return value:  Size  Location     Type
  6726 ;;                  1    wreg      void 
  6727 ;; Registers used:
  6728 ;;		wreg
  6729 ;; Tracked objects:
  6730 ;;		On entry : 0/0
  6731 ;;		On exit  : 0/0
  6732 ;;		Unchanged: 0/0
  6733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6735 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6737 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6738 ;;Total ram usage:        1 bytes
  6739 ;; Hardware stack levels used: 1
  6740 ;; This function calls:
  6741 ;;		Nothing
  6742 ;; This function is called by:
  6743 ;;		_InterruptManager
  6744 ;; This function uses a non-reentrant model
  6745 ;;
  6746                           
  6747                           	psect	text40
  6748   00340E                     __ptext40:
  6749                           	callstack 0
  6750   00340E                     _RB6_ISR:
  6751                           	callstack 20
  6752   00340E                     
  6753                           ;MCAL_LAYER/interrupt/mcal_external_interrupt.c: 82:     (INTCONbits.RBIF = 0);
  6754   00340E  90F2               	bcf	242,0,c	;volatile
  6755   003410  0012               	return		;funcret
  6756   003412                     __end_of_RB6_ISR:
  6757                           	callstack 0
  6758                           
  6759 ;; *************** function _RB5_ISR *****************
  6760 ;; Defined at:
  6761 ;;		line 68 in file "MCAL_LAYER/interrupt/mcal_external_interrupt.c"
  6762 ;; Parameters:    Size  Location     Type
  6763 ;;  pin5_source     1    wreg     unsigned char 
  6764 ;; Auto vars:     Size  Location     Type
  6765 ;;  pin5_source     1    0[COMRAM] unsigned char 
  6766 ;; Return value:  Size  Location     Type
  6767 ;;                  1    wreg      void 
  6768 ;; Registers used:
  6769 ;;		wreg
  6770 ;; Tracked objects:
  6771 ;;		On entry : 0/0
  6772 ;;		On exit  : 0/0
  6773 ;;		Unchanged: 0/0
  6774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6776 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6778 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6779 ;;Total ram usage:        1 bytes
  6780 ;; Hardware stack levels used: 1
  6781 ;; This function calls:
  6782 ;;		Nothing
  6783 ;; This function is called by:
  6784 ;;		_InterruptManager
  6785 ;; This function uses a non-reentrant model
  6786 ;;
  6787                           
  6788                           	psect	text41
  6789   003412                     __ptext41:
  6790                           	callstack 0
  6791   003412                     _RB5_ISR:
  6792                           	callstack 20
  6793   003412                     
  6794                           ;MCAL_LAYER/interrupt/mcal_external_interrupt.c: 70:     (INTCONbits.RBIF = 0);
  6795   003412  90F2               	bcf	242,0,c	;volatile
  6796   003414  0012               	return		;funcret
  6797   003416                     __end_of_RB5_ISR:
  6798                           	callstack 0
  6799                           
  6800 ;; *************** function _RB4_ISR *****************
  6801 ;; Defined at:
  6802 ;;		line 56 in file "MCAL_LAYER/interrupt/mcal_external_interrupt.c"
  6803 ;; Parameters:    Size  Location     Type
  6804 ;;  pin4_source     1    wreg     unsigned char 
  6805 ;; Auto vars:     Size  Location     Type
  6806 ;;  pin4_source     1    0[COMRAM] unsigned char 
  6807 ;; Return value:  Size  Location     Type
  6808 ;;                  1    wreg      void 
  6809 ;; Registers used:
  6810 ;;		wreg
  6811 ;; Tracked objects:
  6812 ;;		On entry : 0/0
  6813 ;;		On exit  : 0/0
  6814 ;;		Unchanged: 0/0
  6815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6817 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6819 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6820 ;;Total ram usage:        1 bytes
  6821 ;; Hardware stack levels used: 1
  6822 ;; This function calls:
  6823 ;;		Nothing
  6824 ;; This function is called by:
  6825 ;;		_InterruptManager
  6826 ;; This function uses a non-reentrant model
  6827 ;;
  6828                           
  6829                           	psect	text42
  6830   003416                     __ptext42:
  6831                           	callstack 0
  6832   003416                     _RB4_ISR:
  6833                           	callstack 20
  6834   003416                     
  6835                           ;MCAL_LAYER/interrupt/mcal_external_interrupt.c: 58:     (INTCONbits.RBIF = 0);
  6836   003416  90F2               	bcf	242,0,c	;volatile
  6837   003418  0012               	return		;funcret
  6838   00341A                     __end_of_RB4_ISR:
  6839                           	callstack 0
  6840                           
  6841 ;; *************** function _MSSP_I2C_ISR *****************
  6842 ;; Defined at:
  6843 ;;		line 248 in file "MCAL_LAYER/I2C/hal_i2c.c"
  6844 ;; Parameters:    Size  Location     Type
  6845 ;;		None
  6846 ;; Auto vars:     Size  Location     Type
  6847 ;;		None
  6848 ;; Return value:  Size  Location     Type
  6849 ;;                  1    wreg      void 
  6850 ;; Registers used:
  6851 ;;		None
  6852 ;; Tracked objects:
  6853 ;;		On entry : 0/0
  6854 ;;		On exit  : 0/0
  6855 ;;		Unchanged: 0/0
  6856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6861 ;;Total ram usage:        0 bytes
  6862 ;; Hardware stack levels used: 1
  6863 ;; This function calls:
  6864 ;;		Nothing
  6865 ;; This function is called by:
  6866 ;;		_InterruptManager
  6867 ;; This function uses a non-reentrant model
  6868 ;;
  6869                           
  6870                           	psect	text43
  6871   003434                     __ptext43:
  6872                           	callstack 0
  6873   003434                     _MSSP_I2C_ISR:
  6874                           	callstack 20
  6875   003434  0012               	return		;funcret
  6876   003436                     __end_of_MSSP_I2C_ISR:
  6877                           	callstack 0
  6878                           
  6879 ;; *************** function _MSSP_I2C_BCL_ISR *****************
  6880 ;; Defined at:
  6881 ;;		line 258 in file "MCAL_LAYER/I2C/hal_i2c.c"
  6882 ;; Parameters:    Size  Location     Type
  6883 ;;		None
  6884 ;; Auto vars:     Size  Location     Type
  6885 ;;		None
  6886 ;; Return value:  Size  Location     Type
  6887 ;;                  1    wreg      void 
  6888 ;; Registers used:
  6889 ;;		None
  6890 ;; Tracked objects:
  6891 ;;		On entry : 0/0
  6892 ;;		On exit  : 0/0
  6893 ;;		Unchanged: 0/0
  6894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6899 ;;Total ram usage:        0 bytes
  6900 ;; Hardware stack levels used: 1
  6901 ;; This function calls:
  6902 ;;		Nothing
  6903 ;; This function is called by:
  6904 ;;		_InterruptManager
  6905 ;; This function uses a non-reentrant model
  6906 ;;
  6907                           
  6908                           	psect	text44
  6909   003436                     __ptext44:
  6910                           	callstack 0
  6911   003436                     _MSSP_I2C_BCL_ISR:
  6912                           	callstack 20
  6913   003436  0012               	return		;funcret
  6914   003438                     __end_of_MSSP_I2C_BCL_ISR:
  6915                           	callstack 0
  6916                           
  6917 ;; *************** function _INT2_ISR *****************
  6918 ;; Defined at:
  6919 ;;		line 49 in file "MCAL_LAYER/interrupt/mcal_external_interrupt.c"
  6920 ;; Parameters:    Size  Location     Type
  6921 ;;		None
  6922 ;; Auto vars:     Size  Location     Type
  6923 ;;		None
  6924 ;; Return value:  Size  Location     Type
  6925 ;;                  1    wreg      void 
  6926 ;; Registers used:
  6927 ;;		None
  6928 ;; Tracked objects:
  6929 ;;		On entry : 0/0
  6930 ;;		On exit  : 0/0
  6931 ;;		Unchanged: 0/0
  6932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6937 ;;Total ram usage:        0 bytes
  6938 ;; Hardware stack levels used: 1
  6939 ;; This function calls:
  6940 ;;		Nothing
  6941 ;; This function is called by:
  6942 ;;		_InterruptManager
  6943 ;; This function uses a non-reentrant model
  6944 ;;
  6945                           
  6946                           	psect	text45
  6947   00341A                     __ptext45:
  6948                           	callstack 0
  6949   00341A                     _INT2_ISR:
  6950                           	callstack 20
  6951   00341A                     
  6952                           ;MCAL_LAYER/interrupt/mcal_external_interrupt.c: 51:     (INTCON3bits.INT2IF = 0);
  6953   00341A  92F0               	bcf	240,1,c	;volatile
  6954   00341C  0012               	return		;funcret
  6955   00341E                     __end_of_INT2_ISR:
  6956                           	callstack 0
  6957                           
  6958 ;; *************** function _INT1_ISR *****************
  6959 ;; Defined at:
  6960 ;;		line 42 in file "MCAL_LAYER/interrupt/mcal_external_interrupt.c"
  6961 ;; Parameters:    Size  Location     Type
  6962 ;;		None
  6963 ;; Auto vars:     Size  Location     Type
  6964 ;;		None
  6965 ;; Return value:  Size  Location     Type
  6966 ;;                  1    wreg      void 
  6967 ;; Registers used:
  6968 ;;		None
  6969 ;; Tracked objects:
  6970 ;;		On entry : 0/0
  6971 ;;		On exit  : 0/0
  6972 ;;		Unchanged: 0/0
  6973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6978 ;;Total ram usage:        0 bytes
  6979 ;; Hardware stack levels used: 1
  6980 ;; This function calls:
  6981 ;;		Nothing
  6982 ;; This function is called by:
  6983 ;;		_InterruptManager
  6984 ;; This function uses a non-reentrant model
  6985 ;;
  6986                           
  6987                           	psect	text46
  6988   00341E                     __ptext46:
  6989                           	callstack 0
  6990   00341E                     _INT1_ISR:
  6991                           	callstack 20
  6992   00341E                     
  6993                           ;MCAL_LAYER/interrupt/mcal_external_interrupt.c: 44:     (INTCON3bits.INT1IF = 0);
  6994   00341E  90F0               	bcf	240,0,c	;volatile
  6995   003420  0012               	return		;funcret
  6996   003422                     __end_of_INT1_ISR:
  6997                           	callstack 0
  6998                           
  6999 ;; *************** function _INT0_ISR *****************
  7000 ;; Defined at:
  7001 ;;		line 35 in file "MCAL_LAYER/interrupt/mcal_external_interrupt.c"
  7002 ;; Parameters:    Size  Location     Type
  7003 ;;		None
  7004 ;; Auto vars:     Size  Location     Type
  7005 ;;		None
  7006 ;; Return value:  Size  Location     Type
  7007 ;;                  1    wreg      void 
  7008 ;; Registers used:
  7009 ;;		None
  7010 ;; Tracked objects:
  7011 ;;		On entry : 0/0
  7012 ;;		On exit  : 0/0
  7013 ;;		Unchanged: 0/0
  7014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7019 ;;Total ram usage:        0 bytes
  7020 ;; Hardware stack levels used: 1
  7021 ;; This function calls:
  7022 ;;		Nothing
  7023 ;; This function is called by:
  7024 ;;		_InterruptManager
  7025 ;; This function uses a non-reentrant model
  7026 ;;
  7027                           
  7028                           	psect	text47
  7029   003422                     __ptext47:
  7030                           	callstack 0
  7031   003422                     _INT0_ISR:
  7032                           	callstack 20
  7033   003422                     
  7034                           ;MCAL_LAYER/interrupt/mcal_external_interrupt.c: 37:     (INTCONbits.INT0IF = 0);
  7035   003422  92F2               	bcf	242,1,c	;volatile
  7036   003424  0012               	return		;funcret
  7037   003426                     __end_of_INT0_ISR:
  7038                           	callstack 0
  7039                           
  7040 ;; *************** function _EUSART_TX_ISR *****************
  7041 ;; Defined at:
  7042 ;;		line 243 in file "MCAL_LAYER/USART/hal_usart.c"
  7043 ;; Parameters:    Size  Location     Type
  7044 ;;		None
  7045 ;; Auto vars:     Size  Location     Type
  7046 ;;		None
  7047 ;; Return value:  Size  Location     Type
  7048 ;;                  1    wreg      void 
  7049 ;; Registers used:
  7050 ;;		None
  7051 ;; Tracked objects:
  7052 ;;		On entry : 0/0
  7053 ;;		On exit  : 0/0
  7054 ;;		Unchanged: 0/0
  7055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7060 ;;Total ram usage:        0 bytes
  7061 ;; Hardware stack levels used: 1
  7062 ;; This function calls:
  7063 ;;		Nothing
  7064 ;; This function is called by:
  7065 ;;		_InterruptManager
  7066 ;; This function uses a non-reentrant model
  7067 ;;
  7068                           
  7069                           	psect	text48
  7070   003426                     __ptext48:
  7071                           	callstack 0
  7072   003426                     _EUSART_TX_ISR:
  7073                           	callstack 20
  7074   003426                     
  7075                           ;MCAL_LAYER/USART/hal_usart.c: 245:     PIE1bits.TXIE = 0;
  7076   003426  989D               	bcf	157,4,c	;volatile
  7077   003428  0012               	return		;funcret
  7078   00342A                     __end_of_EUSART_TX_ISR:
  7079                           	callstack 0
  7080                           
  7081 ;; *************** function _EUSART_RX_ISR *****************
  7082 ;; Defined at:
  7083 ;;		line 250 in file "MCAL_LAYER/USART/hal_usart.c"
  7084 ;; Parameters:    Size  Location     Type
  7085 ;;		None
  7086 ;; Auto vars:     Size  Location     Type
  7087 ;;		None
  7088 ;; Return value:  Size  Location     Type
  7089 ;;                  1    wreg      void 
  7090 ;; Registers used:
  7091 ;;		wreg, status,2, status,0
  7092 ;; Tracked objects:
  7093 ;;		On entry : 0/0
  7094 ;;		On exit  : 0/0
  7095 ;;		Unchanged: 0/0
  7096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7101 ;;Total ram usage:        0 bytes
  7102 ;; Hardware stack levels used: 1
  7103 ;; This function calls:
  7104 ;;		Nothing
  7105 ;; This function is called by:
  7106 ;;		_InterruptManager
  7107 ;; This function uses a non-reentrant model
  7108 ;;
  7109                           
  7110                           	psect	text49
  7111   003438                     __ptext49:
  7112                           	callstack 0
  7113   003438                     _EUSART_RX_ISR:
  7114                           	callstack 20
  7115   003438  0012               	return		;funcret
  7116   00343A                     __end_of_EUSART_RX_ISR:
  7117                           	callstack 0
  7118                           
  7119 ;; *************** function _CCP2_ISR *****************
  7120 ;; Defined at:
  7121 ;;		line 291 in file "MCAL_LAYER/CCP1/hal_ccp1.c"
  7122 ;; Parameters:    Size  Location     Type
  7123 ;;		None
  7124 ;; Auto vars:     Size  Location     Type
  7125 ;;		None
  7126 ;; Return value:  Size  Location     Type
  7127 ;;                  1    wreg      void 
  7128 ;; Registers used:
  7129 ;;		None
  7130 ;; Tracked objects:
  7131 ;;		On entry : 0/0
  7132 ;;		On exit  : 0/0
  7133 ;;		Unchanged: 0/0
  7134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7139 ;;Total ram usage:        0 bytes
  7140 ;; Hardware stack levels used: 1
  7141 ;; This function calls:
  7142 ;;		Nothing
  7143 ;; This function is called by:
  7144 ;;		_InterruptManager
  7145 ;; This function uses a non-reentrant model
  7146 ;;
  7147                           
  7148                           	psect	text50
  7149   00342A                     __ptext50:
  7150                           	callstack 0
  7151   00342A                     _CCP2_ISR:
  7152                           	callstack 20
  7153   00342A                     
  7154                           ;MCAL_LAYER/CCP1/hal_ccp1.c: 293:     (PIR2bits.CCP2IF = 0);
  7155   00342A  90A1               	bcf	161,0,c	;volatile
  7156   00342C  0012               	return		;funcret
  7157   00342E                     __end_of_CCP2_ISR:
  7158                           	callstack 0
  7159                           
  7160 ;; *************** function _CCP1_ISR *****************
  7161 ;; Defined at:
  7162 ;;		line 284 in file "MCAL_LAYER/CCP1/hal_ccp1.c"
  7163 ;; Parameters:    Size  Location     Type
  7164 ;;		None
  7165 ;; Auto vars:     Size  Location     Type
  7166 ;;		None
  7167 ;; Return value:  Size  Location     Type
  7168 ;;                  1    wreg      void 
  7169 ;; Registers used:
  7170 ;;		None
  7171 ;; Tracked objects:
  7172 ;;		On entry : 0/0
  7173 ;;		On exit  : 0/0
  7174 ;;		Unchanged: 0/0
  7175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7180 ;;Total ram usage:        0 bytes
  7181 ;; Hardware stack levels used: 1
  7182 ;; This function calls:
  7183 ;;		Nothing
  7184 ;; This function is called by:
  7185 ;;		_InterruptManager
  7186 ;; This function uses a non-reentrant model
  7187 ;;
  7188                           
  7189                           	psect	text51
  7190   00342E                     __ptext51:
  7191                           	callstack 0
  7192   00342E                     _CCP1_ISR:
  7193                           	callstack 20
  7194   00342E                     
  7195                           ;MCAL_LAYER/CCP1/hal_ccp1.c: 286:     (PIR1bits.CCP1IF = 0);
  7196   00342E  949E               	bcf	158,2,c	;volatile
  7197   003430  0012               	return		;funcret
  7198   003432                     __end_of_CCP1_ISR:
  7199                           	callstack 0
  7200                           
  7201 ;; *************** function _ADC_ISR *****************
  7202 ;; Defined at:
  7203 ;;		line 264 in file "MCAL_LAYER/ADC/hal_adc.c"
  7204 ;; Parameters:    Size  Location     Type
  7205 ;;		None
  7206 ;; Auto vars:     Size  Location     Type
  7207 ;;		None
  7208 ;; Return value:  Size  Location     Type
  7209 ;;                  1    wreg      void 
  7210 ;; Registers used:
  7211 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  7212 ;; Tracked objects:
  7213 ;;		On entry : 0/0
  7214 ;;		On exit  : 0/0
  7215 ;;		Unchanged: 0/0
  7216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7221 ;;Total ram usage:        0 bytes
  7222 ;; Hardware stack levels used: 1
  7223 ;; Hardware stack levels required when called: 2
  7224 ;; This function calls:
  7225 ;;		NULL
  7226 ;;		_ADC_handler
  7227 ;; This function is called by:
  7228 ;;		_InterruptManager
  7229 ;; This function uses a non-reentrant model
  7230 ;;
  7231                           
  7232                           	psect	text52
  7233   003356                     __ptext52:
  7234                           	callstack 0
  7235   003356                     _ADC_ISR:
  7236                           	callstack 18
  7237   003356                     
  7238                           ;MCAL_LAYER/ADC/hal_adc.c: 266:     (PIR1bits.ADIF = 0);
  7239   003356  9C9E               	bcf	158,6,c	;volatile
  7240   003358                     
  7241                           ;MCAL_LAYER/ADC/hal_adc.c: 269:     if(ADC_InterruptHandler){ ADC_InterruptHandler(); }
  7242   003358  505E               	movf	_ADC_InterruptHandler^0,w,c
  7243   00335A  105F               	iorwf	(_ADC_InterruptHandler+1)^0,w,c
  7244   00335C  B4D8               	btfsc	status,2,c
  7245   00335E  EFB3  F019         	goto	i2u525_41
  7246   003362  EFB5  F019         	goto	i2u525_40
  7247   003366                     i2u525_41:
  7248   003366  EFC1  F019         	goto	i2l451
  7249   00336A                     i2u525_40:
  7250   00336A  D802               	call	i2u526_48
  7251   00336C  EFC1  F019         	goto	i2u526_49
  7252   003370                     i2u526_48:
  7253   003370  0005               	push	
  7254   003372  6EFA               	movwf	pclath,c
  7255   003374  505E               	movf	_ADC_InterruptHandler^0,w,c
  7256   003376  6EFD               	movwf	tosl,c
  7257   003378  505F               	movf	(_ADC_InterruptHandler+1)^0,w,c
  7258   00337A  6EFE               	movwf	tosh,c
  7259   00337C  6AFF               	clrf	tosu,c
  7260   00337E  50FA               	movf	pclath,w,c
  7261   003380  0012               	return		;indir
  7262   003382                     i2u526_49:
  7263   003382                     i2l451:
  7264   003382  0012               	return		;funcret
  7265   003384                     __end_of_ADC_ISR:
  7266                           	callstack 0
  7267                           
  7268 ;; *************** function _ADC_handler *****************
  7269 ;; Defined at:
  7270 ;;		line 120 in file "application.c"
  7271 ;; Parameters:    Size  Location     Type
  7272 ;;		None
  7273 ;; Auto vars:     Size  Location     Type
  7274 ;;		None
  7275 ;; Return value:  Size  Location     Type
  7276 ;;                  1    wreg      void 
  7277 ;; Registers used:
  7278 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7279 ;; Tracked objects:
  7280 ;;		On entry : 0/0
  7281 ;;		On exit  : 0/0
  7282 ;;		Unchanged: 0/0
  7283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7288 ;;Total ram usage:        0 bytes
  7289 ;; Hardware stack levels used: 1
  7290 ;; Hardware stack levels required when called: 1
  7291 ;; This function calls:
  7292 ;;		_ADC_GetConversionResult
  7293 ;;		___flmul
  7294 ;;		___fltol
  7295 ;;		___xxtofl
  7296 ;; This function is called by:
  7297 ;;		_ADC_ISR
  7298 ;; This function uses a non-reentrant model
  7299 ;;
  7300                           
  7301                           	psect	text53
  7302   002664                     __ptext53:
  7303                           	callstack 0
  7304   002664                     _ADC_handler:
  7305                           	callstack 18
  7306   002664                     
  7307                           ;application.c: 121:     if(adcflag == 0){
  7308   002664  0100               	movlb	0	; () banked
  7309   002666  51E6               	movf	_adcflag& (0+255),w,b
  7310   002668  A4D8               	btfss	status,2,c
  7311   00266A  EF39  F013         	goto	i2u509_41
  7312   00266E  EF3B  F013         	goto	i2u509_40
  7313   002672                     i2u509_41:
  7314   002672  EF73  F013         	goto	i2l6057
  7315   002676                     i2u509_40:
  7316   002676                     
  7317                           ; BSR set to: 0
  7318                           ;application.c: 122:     ADC_GetConversionResult(&adc_1,&adcres1);
  7319   002676  0E52               	movlw	low _adc_1
  7320   002678  6E01               	movwf	ADC_GetConversionResult@_adc^0,c
  7321   00267A  0E01               	movlw	high _adc_1
  7322   00267C  6E02               	movwf	(ADC_GetConversionResult@_adc+1)^0,c
  7323   00267E  0EE9               	movlw	low _adcres1
  7324   002680  6E03               	movwf	ADC_GetConversionResult@conversion_result^0,c
  7325   002682  0E00               	movlw	high _adcres1
  7326   002684  6E04               	movwf	(ADC_GetConversionResult@conversion_result+1)^0,c
  7327   002686  EC7B  F014         	call	_ADC_GetConversionResult	;wreg free
  7328   00268A                     
  7329                           ;application.c: 123:     adcres1=adcres1*0.488f;
  7330   00268A  0E23               	movlw	35
  7331   00268C  6E13               	movwf	___flmul@a^0,c
  7332   00268E  0EDB               	movlw	219
  7333   002690  6E14               	movwf	(___flmul@a+1)^0,c
  7334   002692  0EF9               	movlw	249
  7335   002694  6E15               	movwf	(___flmul@a+2)^0,c
  7336   002696  0E3E               	movlw	62
  7337   002698  6E16               	movwf	(___flmul@a+3)^0,c
  7338   00269A  C0E9  F001         	movff	_adcres1,___xxtofl@val
  7339   00269E  C0EA  F002         	movff	_adcres1+1,___xxtofl@val+1
  7340   0026A2  6A03               	clrf	(___xxtofl@val+2)^0,c
  7341   0026A4  6A04               	clrf	(___xxtofl@val+3)^0,c
  7342   0026A6  0E00               	movlw	0
  7343   0026A8  EC3B  F00D         	call	___xxtofl
  7344   0026AC  C001  F00F         	movff	?___xxtofl,___flmul@b
  7345   0026B0  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  7346   0026B4  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  7347   0026B8  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  7348   0026BC  EC22  F008         	call	___flmul	;wreg free
  7349   0026C0  C00F  F028         	movff	?___flmul,___fltol@f1
  7350   0026C4  C010  F029         	movff	?___flmul+1,___fltol@f1+1
  7351   0026C8  C011  F02A         	movff	?___flmul+2,___fltol@f1+2
  7352   0026CC  C012  F02B         	movff	?___flmul+3,___fltol@f1+3
  7353   0026D0  ECAF  F012         	call	___fltol	;wreg free
  7354   0026D4  C028  F0E9         	movff	?___fltol,_adcres1
  7355   0026D8  C029  F0EA         	movff	?___fltol+1,_adcres1+1
  7356   0026DC                     
  7357                           ;application.c: 124:     adcflag = 1;
  7358   0026DC  0E01               	movlw	1
  7359   0026DE  0100               	movlb	0	; () banked
  7360   0026E0  6FE6               	movwf	_adcflag& (0+255),b
  7361                           
  7362                           ;application.c: 125:     }
  7363   0026E2  EFB1  F013         	goto	i2l1535
  7364   0026E6                     i2l6057:
  7365                           
  7366                           ; BSR set to: 0
  7367   0026E6  05E6               	decf	_adcflag& (0+255),w,b
  7368   0026E8  A4D8               	btfss	status,2,c
  7369   0026EA  EF79  F013         	goto	i2u510_41
  7370   0026EE  EF7B  F013         	goto	i2u510_40
  7371   0026F2                     i2u510_41:
  7372   0026F2  EFB1  F013         	goto	i2l1535
  7373   0026F6                     i2u510_40:
  7374   0026F6                     
  7375                           ; BSR set to: 0
  7376                           ;application.c: 127:     ADC_GetConversionResult(&adc_1,&adcres2);
  7377   0026F6  0E52               	movlw	low _adc_1
  7378   0026F8  6E01               	movwf	ADC_GetConversionResult@_adc^0,c
  7379   0026FA  0E01               	movlw	high _adc_1
  7380   0026FC  6E02               	movwf	(ADC_GetConversionResult@_adc+1)^0,c
  7381   0026FE  0EE7               	movlw	low _adcres2
  7382   002700  6E03               	movwf	ADC_GetConversionResult@conversion_result^0,c
  7383   002702  0E00               	movlw	high _adcres2
  7384   002704  6E04               	movwf	(ADC_GetConversionResult@conversion_result+1)^0,c
  7385   002706  EC7B  F014         	call	_ADC_GetConversionResult	;wreg free
  7386   00270A                     
  7387                           ;application.c: 128:     adcres2=adcres2*0.488f;
  7388   00270A  0E23               	movlw	35
  7389   00270C  6E13               	movwf	___flmul@a^0,c
  7390   00270E  0EDB               	movlw	219
  7391   002710  6E14               	movwf	(___flmul@a+1)^0,c
  7392   002712  0EF9               	movlw	249
  7393   002714  6E15               	movwf	(___flmul@a+2)^0,c
  7394   002716  0E3E               	movlw	62
  7395   002718  6E16               	movwf	(___flmul@a+3)^0,c
  7396   00271A  C0E7  F001         	movff	_adcres2,___xxtofl@val
  7397   00271E  C0E8  F002         	movff	_adcres2+1,___xxtofl@val+1
  7398   002722  6A03               	clrf	(___xxtofl@val+2)^0,c
  7399   002724  6A04               	clrf	(___xxtofl@val+3)^0,c
  7400   002726  0E00               	movlw	0
  7401   002728  EC3B  F00D         	call	___xxtofl
  7402   00272C  C001  F00F         	movff	?___xxtofl,___flmul@b
  7403   002730  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  7404   002734  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  7405   002738  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  7406   00273C  EC22  F008         	call	___flmul	;wreg free
  7407   002740  C00F  F028         	movff	?___flmul,___fltol@f1
  7408   002744  C010  F029         	movff	?___flmul+1,___fltol@f1+1
  7409   002748  C011  F02A         	movff	?___flmul+2,___fltol@f1+2
  7410   00274C  C012  F02B         	movff	?___flmul+3,___fltol@f1+3
  7411   002750  ECAF  F012         	call	___fltol	;wreg free
  7412   002754  C028  F0E7         	movff	?___fltol,_adcres2
  7413   002758  C029  F0E8         	movff	?___fltol+1,_adcres2+1
  7414   00275C                     
  7415                           ;application.c: 129:     adcflag = 0;
  7416   00275C  0E00               	movlw	0
  7417   00275E  0100               	movlb	0	; () banked
  7418   002760  6FE6               	movwf	_adcflag& (0+255),b
  7419   002762                     i2l1535:
  7420                           
  7421                           ; BSR set to: 0
  7422   002762  0012               	return		;funcret
  7423   002764                     __end_of_ADC_handler:
  7424                           	callstack 0
  7425                           
  7426 ;; *************** function ___xxtofl *****************
  7427 ;; Defined at:
  7428 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\xxtofl.c"
  7429 ;; Parameters:    Size  Location     Type
  7430 ;;  sign            1    wreg     unsigned char 
  7431 ;;  val             4    0[COMRAM] long 
  7432 ;; Auto vars:     Size  Location     Type
  7433 ;;  sign            1    8[COMRAM] unsigned char 
  7434 ;;  arg             4   10[COMRAM] unsigned long 
  7435 ;;  exp             1    9[COMRAM] unsigned char 
  7436 ;; Return value:  Size  Location     Type
  7437 ;;                  4    0[COMRAM] unsigned char 
  7438 ;; Registers used:
  7439 ;;		wreg, status,2, status,0
  7440 ;; Tracked objects:
  7441 ;;		On entry : 0/0
  7442 ;;		On exit  : 0/0
  7443 ;;		Unchanged: 0/0
  7444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7445 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7446 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7447 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7448 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7449 ;;Total ram usage:       14 bytes
  7450 ;; Hardware stack levels used: 1
  7451 ;; This function calls:
  7452 ;;		Nothing
  7453 ;; This function is called by:
  7454 ;;		_ADC_handler
  7455 ;;		_I2C_Master_Mode_Clock_configuration
  7456 ;;		_EUSART_Baud_Rate_Calculations
  7457 ;; This function uses a non-reentrant model
  7458 ;;
  7459                           
  7460                           	psect	text54
  7461   001A76                     __ptext54:
  7462                           	callstack 0
  7463   001A76                     ___xxtofl:
  7464                           	callstack 18
  7465                           
  7466                           ; BSR set to: 0
  7467                           ;incstack = 0
  7468                           ;___xxtofl@sign stored from wreg
  7469   001A76  6E09               	movwf	___xxtofl@sign^0,c
  7470   001A78  5009               	movf	___xxtofl@sign^0,w,c
  7471   001A7A  B4D8               	btfsc	status,2,c
  7472   001A7C  EF42  F00D         	goto	i2u475_41
  7473   001A80  EF44  F00D         	goto	i2u475_40
  7474   001A84                     i2u475_41:
  7475   001A84  EF66  F00D         	goto	i2l2196
  7476   001A88                     i2u475_40:
  7477   001A88  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7478   001A8A  EF4B  F00D         	goto	i2u476_40
  7479   001A8E  EF49  F00D         	goto	i2u476_41
  7480   001A92                     i2u476_41:
  7481   001A92  EF66  F00D         	goto	i2l2196
  7482   001A96                     i2u476_40:
  7483   001A96  C001  F005         	movff	___xxtofl@val,??___xxtofl
  7484   001A9A  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  7485   001A9E  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7486   001AA2  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7487   001AA6  1E05               	comf	??___xxtofl^0,f,c
  7488   001AA8  1E06               	comf	(??___xxtofl+1)^0,f,c
  7489   001AAA  1E07               	comf	(??___xxtofl+2)^0,f,c
  7490   001AAC  1E08               	comf	(??___xxtofl+3)^0,f,c
  7491   001AAE  2A05               	incf	??___xxtofl^0,f,c
  7492   001AB0  0E00               	movlw	0
  7493   001AB2  2206               	addwfc	(??___xxtofl+1)^0,f,c
  7494   001AB4  2207               	addwfc	(??___xxtofl+2)^0,f,c
  7495   001AB6  2208               	addwfc	(??___xxtofl+3)^0,f,c
  7496   001AB8  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7497   001ABC  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7498   001AC0  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7499   001AC4  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7500   001AC8  EF6E  F00D         	goto	i2l5765
  7501   001ACC                     i2l2196:
  7502   001ACC  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7503   001AD0  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7504   001AD4  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7505   001AD8  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7506   001ADC                     i2l5765:
  7507   001ADC  5001               	movf	___xxtofl@val^0,w,c
  7508   001ADE  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  7509   001AE0  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  7510   001AE2  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  7511   001AE4  A4D8               	btfss	status,2,c
  7512   001AE6  EF77  F00D         	goto	i2u477_41
  7513   001AEA  EF79  F00D         	goto	i2u477_40
  7514   001AEE                     i2u477_41:
  7515   001AEE  EF83  F00D         	goto	i2l5771
  7516   001AF2                     i2u477_40:
  7517   001AF2  0E00               	movlw	0
  7518   001AF4  6E01               	movwf	?___xxtofl^0,c
  7519   001AF6  0E00               	movlw	0
  7520   001AF8  6E02               	movwf	(?___xxtofl+1)^0,c
  7521   001AFA  0E00               	movlw	0
  7522   001AFC  6E03               	movwf	(?___xxtofl+2)^0,c
  7523   001AFE  0E00               	movlw	0
  7524   001B00  6E04               	movwf	(?___xxtofl+3)^0,c
  7525   001B02  EF14  F00E         	goto	i2l2199
  7526   001B06                     i2l5771:
  7527   001B06  0E96               	movlw	150
  7528   001B08  6E0A               	movwf	___xxtofl@exp^0,c
  7529   001B0A  EF8D  F00D         	goto	i2l5775
  7530   001B0E                     i2l5773:
  7531   001B0E  2A0A               	incf	___xxtofl@exp^0,f,c
  7532   001B10  90D8               	bcf	status,0,c
  7533   001B12  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7534   001B14  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7535   001B16  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7536   001B18  320B               	rrcf	___xxtofl@arg^0,f,c
  7537   001B1A                     i2l5775:
  7538   001B1A  0E00               	movlw	0
  7539   001B1C  140B               	andwf	___xxtofl@arg^0,w,c
  7540   001B1E  6E05               	movwf	??___xxtofl^0,c
  7541   001B20  0E00               	movlw	0
  7542   001B22  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7543   001B24  6E06               	movwf	(??___xxtofl+1)^0,c
  7544   001B26  0E00               	movlw	0
  7545   001B28  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7546   001B2A  6E07               	movwf	(??___xxtofl+2)^0,c
  7547   001B2C  0EFE               	movlw	254
  7548   001B2E  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7549   001B30  6E08               	movwf	(??___xxtofl+3)^0,c
  7550   001B32  5005               	movf	??___xxtofl^0,w,c
  7551   001B34  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7552   001B36  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7553   001B38  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7554   001B3A  A4D8               	btfss	status,2,c
  7555   001B3C  EFA2  F00D         	goto	i2u478_41
  7556   001B40  EFA4  F00D         	goto	i2u478_40
  7557   001B44                     i2u478_41:
  7558   001B44  EF87  F00D         	goto	i2l5773
  7559   001B48                     i2u478_40:
  7560   001B48  EFB2  F00D         	goto	i2l2203
  7561   001B4C                     i2l5777:
  7562   001B4C  2A0A               	incf	___xxtofl@exp^0,f,c
  7563   001B4E  0E01               	movlw	1
  7564   001B50  260B               	addwf	___xxtofl@arg^0,f,c
  7565   001B52  0E00               	movlw	0
  7566   001B54  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  7567   001B56  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  7568   001B58  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  7569   001B5A  90D8               	bcf	status,0,c
  7570   001B5C  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7571   001B5E  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7572   001B60  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7573   001B62  320B               	rrcf	___xxtofl@arg^0,f,c
  7574   001B64                     i2l2203:
  7575   001B64  0E00               	movlw	0
  7576   001B66  140B               	andwf	___xxtofl@arg^0,w,c
  7577   001B68  6E05               	movwf	??___xxtofl^0,c
  7578   001B6A  0E00               	movlw	0
  7579   001B6C  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7580   001B6E  6E06               	movwf	(??___xxtofl+1)^0,c
  7581   001B70  0E00               	movlw	0
  7582   001B72  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7583   001B74  6E07               	movwf	(??___xxtofl+2)^0,c
  7584   001B76  0EFF               	movlw	255
  7585   001B78  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7586   001B7A  6E08               	movwf	(??___xxtofl+3)^0,c
  7587   001B7C  5005               	movf	??___xxtofl^0,w,c
  7588   001B7E  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7589   001B80  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7590   001B82  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7591   001B84  A4D8               	btfss	status,2,c
  7592   001B86  EFC7  F00D         	goto	i2u479_41
  7593   001B8A  EFC9  F00D         	goto	i2u479_40
  7594   001B8E                     i2u479_41:
  7595   001B8E  EFA6  F00D         	goto	i2l5777
  7596   001B92                     i2u479_40:
  7597   001B92  EFD1  F00D         	goto	i2l5785
  7598   001B96                     i2l5783:
  7599   001B96  060A               	decf	___xxtofl@exp^0,f,c
  7600   001B98  90D8               	bcf	status,0,c
  7601   001B9A  360B               	rlcf	___xxtofl@arg^0,f,c
  7602   001B9C  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  7603   001B9E  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  7604   001BA0  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  7605   001BA2                     i2l5785:
  7606   001BA2  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  7607   001BA4  EFD6  F00D         	goto	i2u480_41
  7608   001BA8  EFD8  F00D         	goto	i2u480_40
  7609   001BAC                     i2u480_41:
  7610   001BAC  EFE0  F00D         	goto	i2l2210
  7611   001BB0                     i2u480_40:
  7612   001BB0  0E02               	movlw	2
  7613   001BB2  600A               	cpfslt	___xxtofl@exp^0,c
  7614   001BB4  EFDE  F00D         	goto	i2u481_41
  7615   001BB8  EFE0  F00D         	goto	i2u481_40
  7616   001BBC                     i2u481_41:
  7617   001BBC  EFCB  F00D         	goto	i2l5783
  7618   001BC0                     i2u481_40:
  7619   001BC0                     i2l2210:
  7620   001BC0  B00A               	btfsc	___xxtofl@exp^0,0,c
  7621   001BC2  EFE5  F00D         	goto	i2u482_41
  7622   001BC6  EFE7  F00D         	goto	i2u482_40
  7623   001BCA                     i2u482_41:
  7624   001BCA  EFE8  F00D         	goto	i2l5791
  7625   001BCE                     i2u482_40:
  7626   001BCE  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  7627   001BD0                     i2l5791:
  7628   001BD0  90D8               	bcf	status,0,c
  7629   001BD2  320A               	rrcf	___xxtofl@exp^0,f,c
  7630   001BD4  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  7631   001BD8  6A06               	clrf	(??___xxtofl+1)^0,c
  7632   001BDA  6A07               	clrf	(??___xxtofl+2)^0,c
  7633   001BDC  6A08               	clrf	(??___xxtofl+3)^0,c
  7634   001BDE  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  7635   001BE2  6A07               	clrf	(??___xxtofl+2)^0,c
  7636   001BE4  6A06               	clrf	(??___xxtofl+1)^0,c
  7637   001BE6  6A05               	clrf	??___xxtofl^0,c
  7638   001BE8  5005               	movf	??___xxtofl^0,w,c
  7639   001BEA  120B               	iorwf	___xxtofl@arg^0,f,c
  7640   001BEC  5006               	movf	(??___xxtofl+1)^0,w,c
  7641   001BEE  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  7642   001BF0  5007               	movf	(??___xxtofl+2)^0,w,c
  7643   001BF2  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  7644   001BF4  5008               	movf	(??___xxtofl+3)^0,w,c
  7645   001BF6  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  7646   001BF8  5009               	movf	___xxtofl@sign^0,w,c
  7647   001BFA  B4D8               	btfsc	status,2,c
  7648   001BFC  EF02  F00E         	goto	i2u483_41
  7649   001C00  EF04  F00E         	goto	i2u483_40
  7650   001C04                     i2u483_41:
  7651   001C04  EF0C  F00E         	goto	i2l5801
  7652   001C08                     i2u483_40:
  7653   001C08  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7654   001C0A  EF0B  F00E         	goto	i2u484_40
  7655   001C0E  EF09  F00E         	goto	i2u484_41
  7656   001C12                     i2u484_41:
  7657   001C12  EF0C  F00E         	goto	i2l5801
  7658   001C16                     i2u484_40:
  7659   001C16  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  7660   001C18                     i2l5801:
  7661   001C18  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  7662   001C1C  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  7663   001C20  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  7664   001C24  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  7665   001C28                     i2l2199:
  7666   001C28  0012               	return		;funcret
  7667   001C2A                     __end_of___xxtofl:
  7668                           	callstack 0
  7669                           
  7670 ;; *************** function ___fltol *****************
  7671 ;; Defined at:
  7672 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
  7673 ;; Parameters:    Size  Location     Type
  7674 ;;  f1              4   39[COMRAM] unsigned char 
  7675 ;; Auto vars:     Size  Location     Type
  7676 ;;  exp1            1   48[COMRAM] unsigned char 
  7677 ;;  sign1           1   47[COMRAM] unsigned char 
  7678 ;; Return value:  Size  Location     Type
  7679 ;;                  4   39[COMRAM] long 
  7680 ;; Registers used:
  7681 ;;		wreg, status,2, status,0
  7682 ;; Tracked objects:
  7683 ;;		On entry : 0/0
  7684 ;;		On exit  : 0/0
  7685 ;;		Unchanged: 0/0
  7686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7687 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7688 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7689 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7690 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7691 ;;Total ram usage:       10 bytes
  7692 ;; Hardware stack levels used: 1
  7693 ;; This function calls:
  7694 ;;		Nothing
  7695 ;; This function is called by:
  7696 ;;		_ADC_handler
  7697 ;;		_I2C_Master_Mode_Clock_configuration
  7698 ;;		_EUSART_Baud_Rate_Calculations
  7699 ;; This function uses a non-reentrant model
  7700 ;;
  7701                           
  7702                           	psect	text55
  7703   00255E                     __ptext55:
  7704                           	callstack 0
  7705   00255E                     ___fltol:
  7706                           	callstack 18
  7707   00255E  342A               	rlcf	(___fltol@f1+2)^0,w,c
  7708   002560  342B               	rlcf	(___fltol@f1+3)^0,w,c
  7709   002562  6E31               	movwf	___fltol@exp1^0,c
  7710   002564  5031               	movf	___fltol@exp1^0,w,c
  7711   002566  A4D8               	btfss	status,2,c
  7712   002568  EFB8  F012         	goto	i2u468_41
  7713   00256C  EFBA  F012         	goto	i2u468_40
  7714   002570                     i2u468_41:
  7715   002570  EFC4  F012         	goto	i2l5721
  7716   002574                     i2u468_40:
  7717   002574                     i2l5717:
  7718   002574  0E00               	movlw	0
  7719   002576  6E28               	movwf	?___fltol^0,c
  7720   002578  0E00               	movlw	0
  7721   00257A  6E29               	movwf	(?___fltol+1)^0,c
  7722   00257C  0E00               	movlw	0
  7723   00257E  6E2A               	movwf	(?___fltol+2)^0,c
  7724   002580  0E00               	movlw	0
  7725   002582  6E2B               	movwf	(?___fltol+3)^0,c
  7726   002584  EF31  F013         	goto	i2l1838
  7727   002588                     i2l5721:
  7728   002588  C028  F02C         	movff	___fltol@f1,??___fltol
  7729   00258C  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
  7730   002590  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
  7731   002594  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
  7732   002598  0E20               	movlw	32
  7733   00259A  EFD4  F012         	goto	i2u469_40
  7734   00259E                     i2u469_45:
  7735   00259E  90D8               	bcf	status,0,c
  7736   0025A0  322F               	rrcf	(??___fltol+3)^0,f,c
  7737   0025A2  322E               	rrcf	(??___fltol+2)^0,f,c
  7738   0025A4  322D               	rrcf	(??___fltol+1)^0,f,c
  7739   0025A6  322C               	rrcf	??___fltol^0,f,c
  7740   0025A8                     i2u469_40:
  7741   0025A8  2EE8               	decfsz	wreg,f,c
  7742   0025AA  EFCF  F012         	goto	i2u469_45
  7743   0025AE  502C               	movf	??___fltol^0,w,c
  7744   0025B0  6E30               	movwf	___fltol@sign1^0,c
  7745   0025B2  8E2A               	bsf	(___fltol@f1+2)^0,7,c
  7746   0025B4  0EFF               	movlw	255
  7747   0025B6  1628               	andwf	___fltol@f1^0,f,c
  7748   0025B8  0EFF               	movlw	255
  7749   0025BA  1629               	andwf	(___fltol@f1+1)^0,f,c
  7750   0025BC  0EFF               	movlw	255
  7751   0025BE  162A               	andwf	(___fltol@f1+2)^0,f,c
  7752   0025C0  0E00               	movlw	0
  7753   0025C2  162B               	andwf	(___fltol@f1+3)^0,f,c
  7754   0025C4  0E96               	movlw	150
  7755   0025C6  5E31               	subwf	___fltol@exp1^0,f,c
  7756   0025C8  BE31               	btfsc	___fltol@exp1^0,7,c
  7757   0025CA  EFEB  F012         	goto	i2u470_40
  7758   0025CE  EFE9  F012         	goto	i2u470_41
  7759   0025D2                     i2u470_41:
  7760   0025D2  EF01  F013         	goto	i2l5741
  7761   0025D6                     i2u470_40:
  7762   0025D6  5031               	movf	___fltol@exp1^0,w,c
  7763   0025D8  0A80               	xorlw	128
  7764   0025DA  0F97               	addlw	151
  7765   0025DC  B0D8               	btfsc	status,0,c
  7766   0025DE  EFF3  F012         	goto	i2u471_41
  7767   0025E2  EFF5  F012         	goto	i2u471_40
  7768   0025E6                     i2u471_41:
  7769   0025E6  EFF7  F012         	goto	i2l5737
  7770   0025EA                     i2u471_40:
  7771   0025EA  EFBA  F012         	goto	i2l5717
  7772   0025EE                     i2l5737:
  7773   0025EE  90D8               	bcf	status,0,c
  7774   0025F0  322B               	rrcf	(___fltol@f1+3)^0,f,c
  7775   0025F2  322A               	rrcf	(___fltol@f1+2)^0,f,c
  7776   0025F4  3229               	rrcf	(___fltol@f1+1)^0,f,c
  7777   0025F6  3228               	rrcf	___fltol@f1^0,f,c
  7778   0025F8  3E31               	incfsz	___fltol@exp1^0,f,c
  7779   0025FA  EFF7  F012         	goto	i2l5737
  7780   0025FE  EF19  F013         	goto	i2l5751
  7781   002602                     i2l5741:
  7782   002602  0E1F               	movlw	31
  7783   002604  6431               	cpfsgt	___fltol@exp1^0,c
  7784   002606  EF07  F013         	goto	i2u472_41
  7785   00260A  EF09  F013         	goto	i2u472_40
  7786   00260E                     i2u472_41:
  7787   00260E  EF11  F013         	goto	i2l5749
  7788   002612                     i2u472_40:
  7789   002612  EFBA  F012         	goto	i2l5717
  7790   002616                     i2l5747:
  7791   002616  90D8               	bcf	status,0,c
  7792   002618  3628               	rlcf	___fltol@f1^0,f,c
  7793   00261A  3629               	rlcf	(___fltol@f1+1)^0,f,c
  7794   00261C  362A               	rlcf	(___fltol@f1+2)^0,f,c
  7795   00261E  362B               	rlcf	(___fltol@f1+3)^0,f,c
  7796   002620  0631               	decf	___fltol@exp1^0,f,c
  7797   002622                     i2l5749:
  7798   002622  5031               	movf	___fltol@exp1^0,w,c
  7799   002624  A4D8               	btfss	status,2,c
  7800   002626  EF17  F013         	goto	i2u473_41
  7801   00262A  EF19  F013         	goto	i2u473_40
  7802   00262E                     i2u473_41:
  7803   00262E  EF0B  F013         	goto	i2l5747
  7804   002632                     i2u473_40:
  7805   002632                     i2l5751:
  7806   002632  5030               	movf	___fltol@sign1^0,w,c
  7807   002634  B4D8               	btfsc	status,2,c
  7808   002636  EF1F  F013         	goto	i2u474_41
  7809   00263A  EF21  F013         	goto	i2u474_40
  7810   00263E                     i2u474_41:
  7811   00263E  EF29  F013         	goto	i2l5755
  7812   002642                     i2u474_40:
  7813   002642  1E2B               	comf	(___fltol@f1+3)^0,f,c
  7814   002644  1E2A               	comf	(___fltol@f1+2)^0,f,c
  7815   002646  1E29               	comf	(___fltol@f1+1)^0,f,c
  7816   002648  6C28               	negf	___fltol@f1^0,c
  7817   00264A  0E00               	movlw	0
  7818   00264C  2229               	addwfc	(___fltol@f1+1)^0,f,c
  7819   00264E  222A               	addwfc	(___fltol@f1+2)^0,f,c
  7820   002650  222B               	addwfc	(___fltol@f1+3)^0,f,c
  7821   002652                     i2l5755:
  7822   002652  C028  F028         	movff	___fltol@f1,?___fltol
  7823   002656  C029  F029         	movff	___fltol@f1+1,?___fltol+1
  7824   00265A  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
  7825   00265E  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
  7826   002662                     i2l1838:
  7827   002662  0012               	return		;funcret
  7828   002664                     __end_of___fltol:
  7829                           	callstack 0
  7830                           
  7831 ;; *************** function ___flmul *****************
  7832 ;; Defined at:
  7833 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcmul.c"
  7834 ;; Parameters:    Size  Location     Type
  7835 ;;  b               4   14[COMRAM] long 
  7836 ;;  a               4   18[COMRAM] long 
  7837 ;; Auto vars:     Size  Location     Type
  7838 ;;  prod            4   33[COMRAM] struct .
  7839 ;;  grs             4   27[COMRAM] unsigned long 
  7840 ;;  temp            2   37[COMRAM] struct .
  7841 ;;  bexp            1   32[COMRAM] unsigned char 
  7842 ;;  aexp            1   31[COMRAM] unsigned char 
  7843 ;;  sign            1   26[COMRAM] unsigned char 
  7844 ;; Return value:  Size  Location     Type
  7845 ;;                  4   14[COMRAM] unsigned char 
  7846 ;; Registers used:
  7847 ;;		wreg, status,2, status,0, prodl, prodh
  7848 ;; Tracked objects:
  7849 ;;		On entry : 0/0
  7850 ;;		On exit  : 0/0
  7851 ;;		Unchanged: 0/0
  7852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7853 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7854 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7855 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7856 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7857 ;;Total ram usage:       25 bytes
  7858 ;; Hardware stack levels used: 1
  7859 ;; This function calls:
  7860 ;;		Nothing
  7861 ;; This function is called by:
  7862 ;;		_ADC_handler
  7863 ;; This function uses a non-reentrant model
  7864 ;;
  7865                           
  7866                           	psect	text56
  7867   001044                     __ptext56:
  7868                           	callstack 0
  7869   001044                     ___flmul:
  7870                           	callstack 18
  7871   001044  5012               	movf	(___flmul@b+3)^0,w,c
  7872   001046  0B80               	andlw	128
  7873   001048  6E1B               	movwf	___flmul@sign^0,c
  7874   00104A  5012               	movf	(___flmul@b+3)^0,w,c
  7875   00104C  2412               	addwf	(___flmul@b+3)^0,w,c
  7876   00104E  6E21               	movwf	___flmul@bexp^0,c
  7877   001050  AE11               	btfss	(___flmul@b+2)^0,7,c
  7878   001052  EF2D  F008         	goto	i2u449_41
  7879   001056  EF2F  F008         	goto	i2u449_40
  7880   00105A                     i2u449_41:
  7881   00105A  EF30  F008         	goto	i2l5591
  7882   00105E                     i2u449_40:
  7883   00105E  8021               	bsf	___flmul@bexp^0,0,c
  7884   001060                     i2l5591:
  7885   001060  5021               	movf	___flmul@bexp^0,w,c
  7886   001062  B4D8               	btfsc	status,2,c
  7887   001064  EF36  F008         	goto	i2u450_41
  7888   001068  EF38  F008         	goto	i2u450_40
  7889   00106C                     i2u450_41:
  7890   00106C  EF4B  F008         	goto	i2l5599
  7891   001070                     i2u450_40:
  7892   001070  2821               	incf	___flmul@bexp^0,w,c
  7893   001072  A4D8               	btfss	status,2,c
  7894   001074  EF3E  F008         	goto	i2u451_41
  7895   001078  EF40  F008         	goto	i2u451_40
  7896   00107C                     i2u451_41:
  7897   00107C  EF48  F008         	goto	i2l5597
  7898   001080                     i2u451_40:
  7899   001080  0E00               	movlw	0
  7900   001082  6E0F               	movwf	___flmul@b^0,c
  7901   001084  0E00               	movlw	0
  7902   001086  6E10               	movwf	(___flmul@b+1)^0,c
  7903   001088  0E00               	movlw	0
  7904   00108A  6E11               	movwf	(___flmul@b+2)^0,c
  7905   00108C  0E00               	movlw	0
  7906   00108E  6E12               	movwf	(___flmul@b+3)^0,c
  7907   001090                     i2l5597:
  7908   001090  8E11               	bsf	(___flmul@b+2)^0,7,c
  7909   001092  EF53  F008         	goto	i2l5601
  7910   001096                     i2l5599:
  7911   001096  0E00               	movlw	0
  7912   001098  6E0F               	movwf	___flmul@b^0,c
  7913   00109A  0E00               	movlw	0
  7914   00109C  6E10               	movwf	(___flmul@b+1)^0,c
  7915   00109E  0E00               	movlw	0
  7916   0010A0  6E11               	movwf	(___flmul@b+2)^0,c
  7917   0010A2  0E00               	movlw	0
  7918   0010A4  6E12               	movwf	(___flmul@b+3)^0,c
  7919   0010A6                     i2l5601:
  7920   0010A6  5016               	movf	(___flmul@a+3)^0,w,c
  7921   0010A8  0B80               	andlw	128
  7922   0010AA  1A1B               	xorwf	___flmul@sign^0,f,c
  7923   0010AC  5016               	movf	(___flmul@a+3)^0,w,c
  7924   0010AE  2416               	addwf	(___flmul@a+3)^0,w,c
  7925   0010B0  6E20               	movwf	___flmul@aexp^0,c
  7926   0010B2  AE15               	btfss	(___flmul@a+2)^0,7,c
  7927   0010B4  EF5E  F008         	goto	i2u452_41
  7928   0010B8  EF60  F008         	goto	i2u452_40
  7929   0010BC                     i2u452_41:
  7930   0010BC  EF61  F008         	goto	i2l5609
  7931   0010C0                     i2u452_40:
  7932   0010C0  8020               	bsf	___flmul@aexp^0,0,c
  7933   0010C2                     i2l5609:
  7934   0010C2  5020               	movf	___flmul@aexp^0,w,c
  7935   0010C4  B4D8               	btfsc	status,2,c
  7936   0010C6  EF67  F008         	goto	i2u453_41
  7937   0010CA  EF69  F008         	goto	i2u453_40
  7938   0010CE                     i2u453_41:
  7939   0010CE  EF7C  F008         	goto	i2l5617
  7940   0010D2                     i2u453_40:
  7941   0010D2  2820               	incf	___flmul@aexp^0,w,c
  7942   0010D4  A4D8               	btfss	status,2,c
  7943   0010D6  EF6F  F008         	goto	i2u454_41
  7944   0010DA  EF71  F008         	goto	i2u454_40
  7945   0010DE                     i2u454_41:
  7946   0010DE  EF79  F008         	goto	i2l5615
  7947   0010E2                     i2u454_40:
  7948   0010E2  0E00               	movlw	0
  7949   0010E4  6E13               	movwf	___flmul@a^0,c
  7950   0010E6  0E00               	movlw	0
  7951   0010E8  6E14               	movwf	(___flmul@a+1)^0,c
  7952   0010EA  0E00               	movlw	0
  7953   0010EC  6E15               	movwf	(___flmul@a+2)^0,c
  7954   0010EE  0E00               	movlw	0
  7955   0010F0  6E16               	movwf	(___flmul@a+3)^0,c
  7956   0010F2                     i2l5615:
  7957   0010F2  8E15               	bsf	(___flmul@a+2)^0,7,c
  7958   0010F4  EF84  F008         	goto	i2l2155
  7959   0010F8                     i2l5617:
  7960   0010F8  0E00               	movlw	0
  7961   0010FA  6E13               	movwf	___flmul@a^0,c
  7962   0010FC  0E00               	movlw	0
  7963   0010FE  6E14               	movwf	(___flmul@a+1)^0,c
  7964   001100  0E00               	movlw	0
  7965   001102  6E15               	movwf	(___flmul@a+2)^0,c
  7966   001104  0E00               	movlw	0
  7967   001106  6E16               	movwf	(___flmul@a+3)^0,c
  7968   001108                     i2l2155:
  7969   001108  5020               	movf	___flmul@aexp^0,w,c
  7970   00110A  B4D8               	btfsc	status,2,c
  7971   00110C  EF8A  F008         	goto	i2u455_41
  7972   001110  EF8C  F008         	goto	i2u455_40
  7973   001114                     i2u455_41:
  7974   001114  EF94  F008         	goto	i2l5621
  7975   001118                     i2u455_40:
  7976   001118  5021               	movf	___flmul@bexp^0,w,c
  7977   00111A  A4D8               	btfss	status,2,c
  7978   00111C  EF92  F008         	goto	i2u456_41
  7979   001120  EF94  F008         	goto	i2u456_40
  7980   001124                     i2u456_41:
  7981   001124  EF9E  F008         	goto	i2l5625
  7982   001128                     i2u456_40:
  7983   001128                     i2l5621:
  7984   001128  0E00               	movlw	0
  7985   00112A  6E0F               	movwf	?___flmul^0,c
  7986   00112C  0E00               	movlw	0
  7987   00112E  6E10               	movwf	(?___flmul+1)^0,c
  7988   001130  0E00               	movlw	0
  7989   001132  6E11               	movwf	(?___flmul+2)^0,c
  7990   001134  0E00               	movlw	0
  7991   001136  6E12               	movwf	(?___flmul+3)^0,c
  7992   001138  EF36  F00A         	goto	i2l2159
  7993   00113C                     i2l5625:
  7994   00113C  5015               	movf	(___flmul@a+2)^0,w,c
  7995   00113E  020F               	mulwf	___flmul@b^0,c
  7996   001140  CFF3 F026          	movff	prodl,___flmul@temp
  7997   001144  CFF4 F027          	movff	prodh,___flmul@temp+1
  7998   001148  5026               	movf	___flmul@temp^0,w,c
  7999   00114A  6E1C               	movwf	___flmul@grs^0,c
  8000   00114C  6A1D               	clrf	(___flmul@grs+1)^0,c
  8001   00114E  6A1E               	clrf	(___flmul@grs+2)^0,c
  8002   001150  6A1F               	clrf	(___flmul@grs+3)^0,c
  8003   001152  5027               	movf	(___flmul@temp+1)^0,w,c
  8004   001154  6E22               	movwf	___flmul@prod^0,c
  8005   001156  6A23               	clrf	(___flmul@prod+1)^0,c
  8006   001158  6A24               	clrf	(___flmul@prod+2)^0,c
  8007   00115A  6A25               	clrf	(___flmul@prod+3)^0,c
  8008   00115C  5014               	movf	(___flmul@a+1)^0,w,c
  8009   00115E  0210               	mulwf	(___flmul@b+1)^0,c
  8010   001160  CFF3 F026          	movff	prodl,___flmul@temp
  8011   001164  CFF4 F027          	movff	prodh,___flmul@temp+1
  8012   001168  5026               	movf	___flmul@temp^0,w,c
  8013   00116A  261C               	addwf	___flmul@grs^0,f,c
  8014   00116C  0E00               	movlw	0
  8015   00116E  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8016   001170  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8017   001172  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8018   001174  5027               	movf	(___flmul@temp+1)^0,w,c
  8019   001176  2622               	addwf	___flmul@prod^0,f,c
  8020   001178  0E00               	movlw	0
  8021   00117A  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8022   00117C  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8023   00117E  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8024   001180  5013               	movf	___flmul@a^0,w,c
  8025   001182  0211               	mulwf	(___flmul@b+2)^0,c
  8026   001184  CFF3 F026          	movff	prodl,___flmul@temp
  8027   001188  CFF4 F027          	movff	prodh,___flmul@temp+1
  8028   00118C  5026               	movf	___flmul@temp^0,w,c
  8029   00118E  261C               	addwf	___flmul@grs^0,f,c
  8030   001190  0E00               	movlw	0
  8031   001192  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8032   001194  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8033   001196  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8034   001198  5027               	movf	(___flmul@temp+1)^0,w,c
  8035   00119A  2622               	addwf	___flmul@prod^0,f,c
  8036   00119C  0E00               	movlw	0
  8037   00119E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8038   0011A0  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8039   0011A2  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8040   0011A4  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8041   0011A8  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8042   0011AC  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8043   0011B0  6A1C               	clrf	___flmul@grs^0,c
  8044   0011B2  5013               	movf	___flmul@a^0,w,c
  8045   0011B4  0210               	mulwf	(___flmul@b+1)^0,c
  8046   0011B6  CFF3 F026          	movff	prodl,___flmul@temp
  8047   0011BA  CFF4 F027          	movff	prodh,___flmul@temp+1
  8048   0011BE  5026               	movf	___flmul@temp^0,w,c
  8049   0011C0  261C               	addwf	___flmul@grs^0,f,c
  8050   0011C2  5027               	movf	(___flmul@temp+1)^0,w,c
  8051   0011C4  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8052   0011C6  0E00               	movlw	0
  8053   0011C8  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8054   0011CA  0E00               	movlw	0
  8055   0011CC  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8056   0011CE  5014               	movf	(___flmul@a+1)^0,w,c
  8057   0011D0  020F               	mulwf	___flmul@b^0,c
  8058   0011D2  CFF3 F026          	movff	prodl,___flmul@temp
  8059   0011D6  CFF4 F027          	movff	prodh,___flmul@temp+1
  8060   0011DA  5026               	movf	___flmul@temp^0,w,c
  8061   0011DC  261C               	addwf	___flmul@grs^0,f,c
  8062   0011DE  5027               	movf	(___flmul@temp+1)^0,w,c
  8063   0011E0  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8064   0011E2  0E00               	movlw	0
  8065   0011E4  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8066   0011E6  0E00               	movlw	0
  8067   0011E8  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8068   0011EA  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8069   0011EE  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8070   0011F2  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8071   0011F6  6A1C               	clrf	___flmul@grs^0,c
  8072   0011F8  5013               	movf	___flmul@a^0,w,c
  8073   0011FA  020F               	mulwf	___flmul@b^0,c
  8074   0011FC  CFF3 F026          	movff	prodl,___flmul@temp
  8075   001200  CFF4 F027          	movff	prodh,___flmul@temp+1
  8076   001204  5026               	movf	___flmul@temp^0,w,c
  8077   001206  261C               	addwf	___flmul@grs^0,f,c
  8078   001208  5027               	movf	(___flmul@temp+1)^0,w,c
  8079   00120A  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8080   00120C  0E00               	movlw	0
  8081   00120E  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8082   001210  0E00               	movlw	0
  8083   001212  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8084   001214  5015               	movf	(___flmul@a+2)^0,w,c
  8085   001216  0210               	mulwf	(___flmul@b+1)^0,c
  8086   001218  CFF3 F026          	movff	prodl,___flmul@temp
  8087   00121C  CFF4 F027          	movff	prodh,___flmul@temp+1
  8088   001220  5026               	movf	___flmul@temp^0,w,c
  8089   001222  2622               	addwf	___flmul@prod^0,f,c
  8090   001224  5027               	movf	(___flmul@temp+1)^0,w,c
  8091   001226  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8092   001228  0E00               	movlw	0
  8093   00122A  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8094   00122C  0E00               	movlw	0
  8095   00122E  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8096   001230  5014               	movf	(___flmul@a+1)^0,w,c
  8097   001232  0211               	mulwf	(___flmul@b+2)^0,c
  8098   001234  CFF3 F026          	movff	prodl,___flmul@temp
  8099   001238  CFF4 F027          	movff	prodh,___flmul@temp+1
  8100   00123C  5026               	movf	___flmul@temp^0,w,c
  8101   00123E  2622               	addwf	___flmul@prod^0,f,c
  8102   001240  5027               	movf	(___flmul@temp+1)^0,w,c
  8103   001242  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8104   001244  0E00               	movlw	0
  8105   001246  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8106   001248  0E00               	movlw	0
  8107   00124A  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8108   00124C  5015               	movf	(___flmul@a+2)^0,w,c
  8109   00124E  0211               	mulwf	(___flmul@b+2)^0,c
  8110   001250  CFF3 F026          	movff	prodl,___flmul@temp
  8111   001254  CFF4 F027          	movff	prodh,___flmul@temp+1
  8112   001258  5026               	movf	___flmul@temp^0,w,c
  8113   00125A  6E17               	movwf	??___flmul^0,c
  8114   00125C  5027               	movf	(___flmul@temp+1)^0,w,c
  8115   00125E  6E18               	movwf	(??___flmul+1)^0,c
  8116   001260  6A19               	clrf	(??___flmul+2)^0,c
  8117   001262  6A1A               	clrf	(??___flmul+3)^0,c
  8118   001264  C019  F01A         	movff	??___flmul+2,??___flmul+3
  8119   001268  C018  F019         	movff	??___flmul+1,??___flmul+2
  8120   00126C  C017  F018         	movff	??___flmul,??___flmul+1
  8121   001270  6A17               	clrf	??___flmul^0,c
  8122   001272  5017               	movf	??___flmul^0,w,c
  8123   001274  2622               	addwf	___flmul@prod^0,f,c
  8124   001276  5018               	movf	(??___flmul+1)^0,w,c
  8125   001278  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8126   00127A  5019               	movf	(??___flmul+2)^0,w,c
  8127   00127C  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8128   00127E  501A               	movf	(??___flmul+3)^0,w,c
  8129   001280  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8130   001282  C01C  F017         	movff	___flmul@grs,??___flmul
  8131   001286  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  8132   00128A  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  8133   00128E  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  8134   001292  0E19               	movlw	25
  8135   001294  EF51  F009         	goto	i2u457_40
  8136   001298                     i2u457_45:
  8137   001298  90D8               	bcf	status,0,c
  8138   00129A  321A               	rrcf	(??___flmul+3)^0,f,c
  8139   00129C  3219               	rrcf	(??___flmul+2)^0,f,c
  8140   00129E  3218               	rrcf	(??___flmul+1)^0,f,c
  8141   0012A0  3217               	rrcf	??___flmul^0,f,c
  8142   0012A2                     i2u457_40:
  8143   0012A2  2EE8               	decfsz	wreg,f,c
  8144   0012A4  EF4C  F009         	goto	i2u457_45
  8145   0012A8  5017               	movf	??___flmul^0,w,c
  8146   0012AA  2622               	addwf	___flmul@prod^0,f,c
  8147   0012AC  5018               	movf	(??___flmul+1)^0,w,c
  8148   0012AE  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8149   0012B0  5019               	movf	(??___flmul+2)^0,w,c
  8150   0012B2  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8151   0012B4  501A               	movf	(??___flmul+3)^0,w,c
  8152   0012B6  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8153   0012B8  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8154   0012BC  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8155   0012C0  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8156   0012C4  6A1C               	clrf	___flmul@grs^0,c
  8157   0012C6  5020               	movf	___flmul@aexp^0,w,c
  8158   0012C8  C021  F017         	movff	___flmul@bexp,??___flmul
  8159   0012CC  6A18               	clrf	(??___flmul+1)^0,c
  8160   0012CE  2617               	addwf	??___flmul^0,f,c
  8161   0012D0  0E00               	movlw	0
  8162   0012D2  2218               	addwfc	(??___flmul+1)^0,f,c
  8163   0012D4  0E82               	movlw	130
  8164   0012D6  2417               	addwf	??___flmul^0,w,c
  8165   0012D8  6E26               	movwf	___flmul@temp^0,c
  8166   0012DA  0EFF               	movlw	255
  8167   0012DC  2018               	addwfc	(??___flmul+1)^0,w,c
  8168   0012DE  6E27               	movwf	(___flmul@temp+1)^0,c
  8169   0012E0  EF87  F009         	goto	i2l5673
  8170   0012E4                     i2l5667:
  8171   0012E4  90D8               	bcf	status,0,c
  8172   0012E6  3622               	rlcf	___flmul@prod^0,f,c
  8173   0012E8  3623               	rlcf	(___flmul@prod+1)^0,f,c
  8174   0012EA  3624               	rlcf	(___flmul@prod+2)^0,f,c
  8175   0012EC  3625               	rlcf	(___flmul@prod+3)^0,f,c
  8176   0012EE  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  8177   0012F0  EF7C  F009         	goto	i2u458_41
  8178   0012F4  EF7E  F009         	goto	i2u458_40
  8179   0012F8                     i2u458_41:
  8180   0012F8  EF7F  F009         	goto	i2l2162
  8181   0012FC                     i2u458_40:
  8182   0012FC  8022               	bsf	___flmul@prod^0,0,c
  8183   0012FE                     i2l2162:
  8184   0012FE  90D8               	bcf	status,0,c
  8185   001300  361C               	rlcf	___flmul@grs^0,f,c
  8186   001302  361D               	rlcf	(___flmul@grs+1)^0,f,c
  8187   001304  361E               	rlcf	(___flmul@grs+2)^0,f,c
  8188   001306  361F               	rlcf	(___flmul@grs+3)^0,f,c
  8189   001308  0626               	decf	___flmul@temp^0,f,c
  8190   00130A  A0D8               	btfss	status,0,c
  8191   00130C  0627               	decf	(___flmul@temp+1)^0,f,c
  8192   00130E                     i2l5673:
  8193   00130E  AE24               	btfss	(___flmul@prod+2)^0,7,c
  8194   001310  EF8C  F009         	goto	i2u459_41
  8195   001314  EF8E  F009         	goto	i2u459_40
  8196   001318                     i2u459_41:
  8197   001318  EF72  F009         	goto	i2l5667
  8198   00131C                     i2u459_40:
  8199   00131C  0E00               	movlw	0
  8200   00131E  6E20               	movwf	___flmul@aexp^0,c
  8201   001320  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  8202   001322  EF95  F009         	goto	i2u460_41
  8203   001326  EF97  F009         	goto	i2u460_40
  8204   00132A                     i2u460_41:
  8205   00132A  EFBB  F009         	goto	i2l2164
  8206   00132E                     i2u460_40:
  8207   00132E  0EFF               	movlw	255
  8208   001330  141C               	andwf	___flmul@grs^0,w,c
  8209   001332  6E17               	movwf	??___flmul^0,c
  8210   001334  0EFF               	movlw	255
  8211   001336  141D               	andwf	(___flmul@grs+1)^0,w,c
  8212   001338  6E18               	movwf	(??___flmul+1)^0,c
  8213   00133A  0EFF               	movlw	255
  8214   00133C  141E               	andwf	(___flmul@grs+2)^0,w,c
  8215   00133E  6E19               	movwf	(??___flmul+2)^0,c
  8216   001340  0E7F               	movlw	127
  8217   001342  141F               	andwf	(___flmul@grs+3)^0,w,c
  8218   001344  6E1A               	movwf	(??___flmul+3)^0,c
  8219   001346  5017               	movf	??___flmul^0,w,c
  8220   001348  1018               	iorwf	(??___flmul+1)^0,w,c
  8221   00134A  1019               	iorwf	(??___flmul+2)^0,w,c
  8222   00134C  101A               	iorwf	(??___flmul+3)^0,w,c
  8223   00134E  B4D8               	btfsc	status,2,c
  8224   001350  EFAC  F009         	goto	i2u461_41
  8225   001354  EFAE  F009         	goto	i2u461_40
  8226   001358                     i2u461_41:
  8227   001358  EFB2  F009         	goto	i2l2165
  8228   00135C                     i2u461_40:
  8229   00135C                     i2l5681:
  8230   00135C  0E01               	movlw	1
  8231   00135E  6E20               	movwf	___flmul@aexp^0,c
  8232   001360  EFBB  F009         	goto	i2l2164
  8233   001364                     i2l2165:
  8234   001364  A022               	btfss	___flmul@prod^0,0,c
  8235   001366  EFB7  F009         	goto	i2u462_41
  8236   00136A  EFB9  F009         	goto	i2u462_40
  8237   00136E                     i2u462_41:
  8238   00136E  EFBB  F009         	goto	i2l2164
  8239   001372                     i2u462_40:
  8240   001372  EFAE  F009         	goto	i2l5681
  8241   001376                     i2l2164:
  8242   001376  5020               	movf	___flmul@aexp^0,w,c
  8243   001378  B4D8               	btfsc	status,2,c
  8244   00137A  EFC1  F009         	goto	i2u463_41
  8245   00137E  EFC3  F009         	goto	i2u463_40
  8246   001382                     i2u463_41:
  8247   001382  EFE7  F009         	goto	i2l5693
  8248   001386                     i2u463_40:
  8249   001386  0E01               	movlw	1
  8250   001388  2622               	addwf	___flmul@prod^0,f,c
  8251   00138A  0E00               	movlw	0
  8252   00138C  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8253   00138E  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8254   001390  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8255   001392  A025               	btfss	(___flmul@prod+3)^0,0,c
  8256   001394  EFCE  F009         	goto	i2u464_41
  8257   001398  EFD0  F009         	goto	i2u464_40
  8258   00139C                     i2u464_41:
  8259   00139C  EFE7  F009         	goto	i2l5693
  8260   0013A0                     i2u464_40:
  8261   0013A0  C022  F017         	movff	___flmul@prod,??___flmul
  8262   0013A4  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  8263   0013A8  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  8264   0013AC  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  8265   0013B0  341A               	rlcf	(??___flmul+3)^0,w,c
  8266   0013B2  321A               	rrcf	(??___flmul+3)^0,f,c
  8267   0013B4  3219               	rrcf	(??___flmul+2)^0,f,c
  8268   0013B6  3218               	rrcf	(??___flmul+1)^0,f,c
  8269   0013B8  3217               	rrcf	??___flmul^0,f,c
  8270   0013BA  C017  F022         	movff	??___flmul,___flmul@prod
  8271   0013BE  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  8272   0013C2  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  8273   0013C6  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  8274   0013CA  4A26               	infsnz	___flmul@temp^0,f,c
  8275   0013CC  2A27               	incf	(___flmul@temp+1)^0,f,c
  8276   0013CE                     i2l5693:
  8277   0013CE  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  8278   0013D0  EFF2  F009         	goto	i2u465_41
  8279   0013D4  5027               	movf	(___flmul@temp+1)^0,w,c
  8280   0013D6  E108               	bnz	i2u465_40
  8281   0013D8  2826               	incf	___flmul@temp^0,w,c
  8282   0013DA  A0D8               	btfss	status,0,c
  8283   0013DC  EFF2  F009         	goto	i2u465_41
  8284   0013E0  EFF4  F009         	goto	i2u465_40
  8285   0013E4                     i2u465_41:
  8286   0013E4  EFFE  F009         	goto	i2l5697
  8287   0013E8                     i2u465_40:
  8288   0013E8  0E00               	movlw	0
  8289   0013EA  6E22               	movwf	___flmul@prod^0,c
  8290   0013EC  0E00               	movlw	0
  8291   0013EE  6E23               	movwf	(___flmul@prod+1)^0,c
  8292   0013F0  0E80               	movlw	128
  8293   0013F2  6E24               	movwf	(___flmul@prod+2)^0,c
  8294   0013F4  0E7F               	movlw	127
  8295   0013F6  6E25               	movwf	(___flmul@prod+3)^0,c
  8296   0013F8  EF2C  F00A         	goto	i2l5709
  8297   0013FC                     i2l5697:
  8298   0013FC  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  8299   0013FE  EF0B  F00A         	goto	i2u466_40
  8300   001402  5027               	movf	(___flmul@temp+1)^0,w,c
  8301   001404  E106               	bnz	i2u466_41
  8302   001406  0426               	decf	___flmul@temp^0,w,c
  8303   001408  B0D8               	btfsc	status,0,c
  8304   00140A  EF09  F00A         	goto	i2u466_41
  8305   00140E  EF0B  F00A         	goto	i2u466_40
  8306   001412                     i2u466_41:
  8307   001412  EF17  F00A         	goto	i2l2172
  8308   001416                     i2u466_40:
  8309   001416  0E00               	movlw	0
  8310   001418  6E22               	movwf	___flmul@prod^0,c
  8311   00141A  0E00               	movlw	0
  8312   00141C  6E23               	movwf	(___flmul@prod+1)^0,c
  8313   00141E  0E00               	movlw	0
  8314   001420  6E24               	movwf	(___flmul@prod+2)^0,c
  8315   001422  0E00               	movlw	0
  8316   001424  6E25               	movwf	(___flmul@prod+3)^0,c
  8317   001426  0E00               	movlw	0
  8318   001428  6E1B               	movwf	___flmul@sign^0,c
  8319   00142A  EF2C  F00A         	goto	i2l5709
  8320   00142E                     i2l2172:
  8321   00142E  C026  F021         	movff	___flmul@temp,___flmul@bexp
  8322   001432  0EFF               	movlw	255
  8323   001434  1622               	andwf	___flmul@prod^0,f,c
  8324   001436  0EFF               	movlw	255
  8325   001438  1623               	andwf	(___flmul@prod+1)^0,f,c
  8326   00143A  0E7F               	movlw	127
  8327   00143C  1624               	andwf	(___flmul@prod+2)^0,f,c
  8328   00143E  0E00               	movlw	0
  8329   001440  1625               	andwf	(___flmul@prod+3)^0,f,c
  8330   001442  A021               	btfss	___flmul@bexp^0,0,c
  8331   001444  EF26  F00A         	goto	i2u467_41
  8332   001448  EF28  F00A         	goto	i2u467_40
  8333   00144C                     i2u467_41:
  8334   00144C  EF29  F00A         	goto	i2l5707
  8335   001450                     i2u467_40:
  8336   001450  8E24               	bsf	(___flmul@prod+2)^0,7,c
  8337   001452                     i2l5707:
  8338   001452  90D8               	bcf	status,0,c
  8339   001454  3021               	rrcf	___flmul@bexp^0,w,c
  8340   001456  6E25               	movwf	(___flmul@prod+3)^0,c
  8341   001458                     i2l5709:
  8342   001458  501B               	movf	___flmul@sign^0,w,c
  8343   00145A  1225               	iorwf	(___flmul@prod+3)^0,f,c
  8344   00145C  C022  F00F         	movff	___flmul@prod,?___flmul
  8345   001460  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  8346   001464  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  8347   001468  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  8348   00146C                     i2l2159:
  8349   00146C  0012               	return		;funcret
  8350   00146E                     __end_of___flmul:
  8351                           	callstack 0
  8352                           
  8353 ;; *************** function _ADC_GetConversionResult *****************
  8354 ;; Defined at:
  8355 ;;		line 181 in file "MCAL_LAYER/ADC/hal_adc.c"
  8356 ;; Parameters:    Size  Location     Type
  8357 ;;  _adc            2    0[COMRAM] PTR const struct .
  8358 ;;		 -> adc_1(8), 
  8359 ;;  conversion_r    2    2[COMRAM] PTR unsigned short 
  8360 ;;		 -> adcres2(2), adcres1(2), 
  8361 ;; Auto vars:     Size  Location     Type
  8362 ;;  ret             1    7[COMRAM] unsigned char 
  8363 ;; Return value:  Size  Location     Type
  8364 ;;                  1    wreg      unsigned char 
  8365 ;; Registers used:
  8366 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8367 ;; Tracked objects:
  8368 ;;		On entry : 0/0
  8369 ;;		On exit  : 0/0
  8370 ;;		Unchanged: 0/0
  8371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8372 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8373 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8374 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8375 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8376 ;;Total ram usage:        8 bytes
  8377 ;; Hardware stack levels used: 1
  8378 ;; This function calls:
  8379 ;;		Nothing
  8380 ;; This function is called by:
  8381 ;;		_ADC_handler
  8382 ;;		_ADC_GetConversion_by_polling
  8383 ;; This function uses a non-reentrant model
  8384 ;;
  8385                           
  8386                           	psect	text57
  8387   0028F6                     __ptext57:
  8388                           	callstack 0
  8389   0028F6                     _ADC_GetConversionResult:
  8390                           	callstack 18
  8391   0028F6                     
  8392                           ;MCAL_LAYER/ADC/hal_adc.c: 182:     uint8 ret =(Std_ReturnType)0x01;
  8393   0028F6  0E01               	movlw	1
  8394   0028F8  6E08               	movwf	ADC_GetConversionResult@ret^0,c
  8395   0028FA                     
  8396                           ;MCAL_LAYER/ADC/hal_adc.c: 183:     if( (((void*)0) == _adc) || (((void*)0) == conversio
      +                          n_result)){
  8397   0028FA  5001               	movf	ADC_GetConversionResult@_adc^0,w,c
  8398   0028FC  1002               	iorwf	(ADC_GetConversionResult@_adc+1)^0,w,c
  8399   0028FE  B4D8               	btfsc	status,2,c
  8400   002900  EF84  F014         	goto	i2u444_41
  8401   002904  EF86  F014         	goto	i2u444_40
  8402   002908                     i2u444_41:
  8403   002908  EF8F  F014         	goto	i2l5569
  8404   00290C                     i2u444_40:
  8405   00290C  5003               	movf	ADC_GetConversionResult@conversion_result^0,w,c
  8406   00290E  1004               	iorwf	(ADC_GetConversionResult@conversion_result+1)^0,w,c
  8407   002910  A4D8               	btfss	status,2,c
  8408   002912  EF8D  F014         	goto	i2u445_41
  8409   002916  EF8F  F014         	goto	i2u445_40
  8410   00291A                     i2u445_41:
  8411   00291A  EF93  F014         	goto	i2l5571
  8412   00291E                     i2u445_40:
  8413   00291E                     i2l5569:
  8414                           
  8415                           ;MCAL_LAYER/ADC/hal_adc.c: 184:         ret=(Std_ReturnType)0x00;
  8416   00291E  0E00               	movlw	0
  8417   002920  6E08               	movwf	ADC_GetConversionResult@ret^0,c
  8418                           
  8419                           ;MCAL_LAYER/ADC/hal_adc.c: 185:     }
  8420   002922  EFDB  F014         	goto	i2l5581
  8421   002926                     i2l5571:
  8422                           
  8423                           ;MCAL_LAYER/ADC/hal_adc.c: 187:         if(_adc->result_format == 0x01U){
  8424   002926  EE20 F006          	lfsr	2,6
  8425   00292A  5001               	movf	ADC_GetConversionResult@_adc^0,w,c
  8426   00292C  26D9               	addwf	fsr2l,f,c
  8427   00292E  5002               	movf	(ADC_GetConversionResult@_adc+1)^0,w,c
  8428   002930  22DA               	addwfc	fsr2h,f,c
  8429   002932  A8DF               	btfss	indf2,4,c
  8430   002934  EF9E  F014         	goto	i2u446_41
  8431   002938  EFA0  F014         	goto	i2u446_40
  8432   00293C                     i2u446_41:
  8433   00293C  EFB4  F014         	goto	i2l5575
  8434   002940                     i2u446_40:
  8435   002940                     i2l5573:
  8436                           
  8437                           ;MCAL_LAYER/ADC/hal_adc.c: 188:             *conversion_result = (adc_result_t)((ADRESH 
      +                          << 8) +ADRESL);
  8438   002940  50C3               	movf	195,w,c	;volatile
  8439   002942  CFC4 F005          	movff	4036,??_ADC_GetConversionResult	;volatile
  8440   002946  6A06               	clrf	(??_ADC_GetConversionResult+1)^0,c
  8441   002948  C005  F006         	movff	??_ADC_GetConversionResult,??_ADC_GetConversionResult+1
  8442   00294C  6A05               	clrf	??_ADC_GetConversionResult^0,c
  8443   00294E  2605               	addwf	??_ADC_GetConversionResult^0,f,c
  8444   002950  0E00               	movlw	0
  8445   002952  2206               	addwfc	(??_ADC_GetConversionResult+1)^0,f,c
  8446   002954  C003  FFD9         	movff	ADC_GetConversionResult@conversion_result,fsr2l
  8447   002958  C004  FFDA         	movff	ADC_GetConversionResult@conversion_result+1,fsr2h
  8448   00295C  C005  FFDE         	movff	??_ADC_GetConversionResult,postinc2
  8449   002960  C006  FFDD         	movff	??_ADC_GetConversionResult+1,postdec2
  8450                           
  8451                           ;MCAL_LAYER/ADC/hal_adc.c: 189:         }
  8452   002964  EFDB  F014         	goto	i2l5581
  8453   002968                     i2l5575:
  8454   002968  EE20 F006          	lfsr	2,6
  8455   00296C  5001               	movf	ADC_GetConversionResult@_adc^0,w,c
  8456   00296E  26D9               	addwf	fsr2l,f,c
  8457   002970  5002               	movf	(ADC_GetConversionResult@_adc+1)^0,w,c
  8458   002972  22DA               	addwfc	fsr2h,f,c
  8459   002974  B8DF               	btfsc	indf2,4,c
  8460   002976  EFBF  F014         	goto	i2u447_41
  8461   00297A  EFC1  F014         	goto	i2u447_40
  8462   00297E                     i2u447_41:
  8463   00297E  EFA0  F014         	goto	i2l5573
  8464   002982                     i2u447_40:
  8465   002982                     
  8466                           ;MCAL_LAYER/ADC/hal_adc.c: 191:             *conversion_result = (adc_result_t)(((ADRESH
      +                           << 8) + ADRESL) >> 6);
  8467   002982  50C3               	movf	195,w,c	;volatile
  8468   002984  CFC4 F005          	movff	4036,??_ADC_GetConversionResult	;volatile
  8469   002988  6A06               	clrf	(??_ADC_GetConversionResult+1)^0,c
  8470   00298A  C005  F006         	movff	??_ADC_GetConversionResult,??_ADC_GetConversionResult+1
  8471   00298E  6A05               	clrf	??_ADC_GetConversionResult^0,c
  8472   002990  2605               	addwf	??_ADC_GetConversionResult^0,f,c
  8473   002992  0E00               	movlw	0
  8474   002994  2206               	addwfc	(??_ADC_GetConversionResult+1)^0,f,c
  8475   002996  0E06               	movlw	6
  8476   002998  6E07               	movwf	(??_ADC_GetConversionResult+2)^0,c
  8477   00299A                     i2u448_45:
  8478   00299A  3406               	rlcf	(??_ADC_GetConversionResult+1)^0,w,c
  8479   00299C  3206               	rrcf	(??_ADC_GetConversionResult+1)^0,f,c
  8480   00299E  3205               	rrcf	??_ADC_GetConversionResult^0,f,c
  8481   0029A0  2E07               	decfsz	(??_ADC_GetConversionResult+2)^0,f,c
  8482   0029A2  EFCD  F014         	goto	i2u448_45
  8483   0029A6  C003  FFD9         	movff	ADC_GetConversionResult@conversion_result,fsr2l
  8484   0029AA  C004  FFDA         	movff	ADC_GetConversionResult@conversion_result+1,fsr2h
  8485   0029AE  C005  FFDE         	movff	??_ADC_GetConversionResult,postinc2
  8486   0029B2  C006  FFDD         	movff	??_ADC_GetConversionResult+1,postdec2
  8487   0029B6                     i2l5581:
  8488                           
  8489                           ;MCAL_LAYER/ADC/hal_adc.c: 197:     return ret;
  8490   0029B6  5008               	movf	ADC_GetConversionResult@ret^0,w,c
  8491   0029B8  0012               	return		;funcret
  8492   0029BA                     __end_of_ADC_GetConversionResult:
  8493                           	callstack 0
  8494                           
  8495                           	psect	text58
  8496   000000                     __ptext58:
  8497                           	callstack 0
  8498   000000                     
  8499                           	psect	rparam
  8500   000000                     
  8501                           	psect	temp
  8502   00006E                     btemp:
  8503                           	callstack 0
  8504   00006E                     	ds	1
  8505   000000                     int$flags	set	btemp
  8506   000000                     wtemp8	set	btemp+1
  8507   000000                     ttemp5	set	btemp+1
  8508   000000                     ttemp6	set	btemp+4
  8509   000000                     ttemp7	set	btemp+8
  8510                           
  8511                           	psect	config
  8512                           
  8513                           ; Padding undefined space
  8514   300000                     	org	3145728
  8515   300000  FF                 	db	255
  8516                           
  8517                           ;Config register CONFIG1H @ 0x300001
  8518                           ;	Oscillator Selection bits
  8519                           ;	OSC = HS, HS oscillator
  8520                           ;	Fail-Safe Clock Monitor Enable bit
  8521                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8522                           ;	Internal/External Oscillator Switchover bit
  8523                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8524   300001                     	org	3145729
  8525   300001  02                 	db	2
  8526                           
  8527                           ;Config register CONFIG2L @ 0x300002
  8528                           ;	Power-up Timer Enable bit
  8529                           ;	PWRT = OFF, PWRT disabled
  8530                           ;	Brown-out Reset Enable bits
  8531                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  8532                           ;	Brown Out Reset Voltage bits
  8533                           ;	BORV = 1, 
  8534   300002                     	org	3145730
  8535   300002  09                 	db	9
  8536                           
  8537                           ;Config register CONFIG2H @ 0x300003
  8538                           ;	Watchdog Timer Enable bit
  8539                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8540                           ;	Watchdog Timer Postscale Select bits
  8541                           ;	WDTPS = 32768, 1:32768
  8542   300003                     	org	3145731
  8543   300003  1E                 	db	30
  8544                           
  8545                           ; Padding undefined space
  8546   300004                     	org	3145732
  8547   300004  FF                 	db	255
  8548                           
  8549                           ;Config register CONFIG3H @ 0x300005
  8550                           ;	CCP2 MUX bit
  8551                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  8552                           ;	PORTB A/D Enable bit
  8553                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8554                           ;	Low-Power Timer1 Oscillator Enable bit
  8555                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8556                           ;	MCLR Pin Enable bit
  8557                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  8558   300005                     	org	3145733
  8559   300005  81                 	db	129
  8560                           
  8561                           ;Config register CONFIG4L @ 0x300006
  8562                           ;	Stack Full/Underflow Reset Enable bit
  8563                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8564                           ;	Single-Supply ICSP Enable bit
  8565                           ;	LVP = OFF, Single-Supply ICSP disabled
  8566                           ;	Extended Instruction Set Enable bit
  8567                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8568                           ;	Background Debugger Enable bit
  8569                           ;	DEBUG = 0x1, unprogrammed default
  8570   300006                     	org	3145734
  8571   300006  81                 	db	129
  8572                           
  8573                           ; Padding undefined space
  8574   300007                     	org	3145735
  8575   300007  FF                 	db	255
  8576                           
  8577                           ;Config register CONFIG5L @ 0x300008
  8578                           ;	Code Protection bit
  8579                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  8580                           ;	Code Protection bit
  8581                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  8582                           ;	Code Protection bit
  8583                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  8584                           ;	Code Protection bit
  8585                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  8586   300008                     	org	3145736
  8587   300008  0F                 	db	15
  8588                           
  8589                           ;Config register CONFIG5H @ 0x300009
  8590                           ;	Boot Block Code Protection bit
  8591                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  8592                           ;	Data EEPROM Code Protection bit
  8593                           ;	CPD = OFF, Data EEPROM not code-protected
  8594   300009                     	org	3145737
  8595   300009  C0                 	db	192
  8596                           
  8597                           ;Config register CONFIG6L @ 0x30000A
  8598                           ;	Write Protection bit
  8599                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  8600                           ;	Write Protection bit
  8601                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  8602                           ;	Write Protection bit
  8603                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  8604                           ;	Write Protection bit
  8605                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  8606   30000A                     	org	3145738
  8607   30000A  0F                 	db	15
  8608                           
  8609                           ;Config register CONFIG6H @ 0x30000B
  8610                           ;	Configuration Register Write Protection bit
  8611                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  8612                           ;	Boot Block Write Protection bit
  8613                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  8614                           ;	Data EEPROM Write Protection bit
  8615                           ;	WRTD = OFF, Data EEPROM not write-protected
  8616   30000B                     	org	3145739
  8617   30000B  E0                 	db	224
  8618                           
  8619                           ;Config register CONFIG7L @ 0x30000C
  8620                           ;	Table Read Protection bit
  8621                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  8622                           ;	Table Read Protection bit
  8623                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  8624                           ;	Table Read Protection bit
  8625                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  8626                           ;	Table Read Protection bit
  8627                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  8628   30000C                     	org	3145740
  8629   30000C  0F                 	db	15
  8630                           
  8631                           ;Config register CONFIG7H @ 0x30000D
  8632                           ;	Boot Block Table Read Protection bit
  8633                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  8634   30000D                     	org	3145741
  8635   30000D  40                 	db	64
  8636                           tosu	equ	0xFFF
  8637                           tosh	equ	0xFFE
  8638                           tosl	equ	0xFFD
  8639                           stkptr	equ	0xFFC
  8640                           pclatu	equ	0xFFB
  8641                           pclath	equ	0xFFA
  8642                           pcl	equ	0xFF9
  8643                           tblptru	equ	0xFF8
  8644                           tblptrh	equ	0xFF7
  8645                           tblptrl	equ	0xFF6
  8646                           tablat	equ	0xFF5
  8647                           prodh	equ	0xFF4
  8648                           prodl	equ	0xFF3
  8649                           indf0	equ	0xFEF
  8650                           postinc0	equ	0xFEE
  8651                           postdec0	equ	0xFED
  8652                           preinc0	equ	0xFEC
  8653                           plusw0	equ	0xFEB
  8654                           fsr0h	equ	0xFEA
  8655                           fsr0l	equ	0xFE9
  8656                           wreg	equ	0xFE8
  8657                           indf1	equ	0xFE7
  8658                           postinc1	equ	0xFE6
  8659                           postdec1	equ	0xFE5
  8660                           preinc1	equ	0xFE4
  8661                           plusw1	equ	0xFE3
  8662                           fsr1h	equ	0xFE2
  8663                           fsr1l	equ	0xFE1
  8664                           bsr	equ	0xFE0
  8665                           indf2	equ	0xFDF
  8666                           postinc2	equ	0xFDE
  8667                           postdec2	equ	0xFDD
  8668                           preinc2	equ	0xFDC
  8669                           plusw2	equ	0xFDB
  8670                           fsr2h	equ	0xFDA
  8671                           fsr2l	equ	0xFD9
  8672                           status	equ	0xFD8

Data Sizes:
    Strings     50
    Constant    16
    Data        52
    BSS         138
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     55     109
    BANK0           128     81     127
    BANK1           256     16     106
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S4403$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 12
		 -> convert_uint32_to_string@Temp_String(COMRAM[12]), convert_uint16_to_string@Temp_String(BANK0[6]), convert_uint8_to_string@Temp_String(COMRAM[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S4350$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S4350$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 6
		 -> adcres2txt(BANK1[6]), adcres1txt(BANK1[6]), 

    memset@s	PTR unsigned char  size(2) Largest target is 6
		 -> adcres2txt(BANK1[6]), adcres1txt(BANK1[6]), 

    adc_1.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_handler(), 

    ESUART_Overrun_Error_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ESUART_Framing_Error_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ESUART_RX_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_ASYNC_RX_Init@eusart.EUSART_OverrunErrorHandle	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Init@eusart.EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Init@eusart.EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Init@eusart.EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    ESUART_TX_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_ASYNC_TX_Init@eusart.EUSART_OverrunErrorHandle	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@eusart.EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@eusart.EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@eusart.EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S3368$EUSART_OverrunErrorHandle	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculations@eusart.EUSART_OverrunErrorHandle	PTR FTN()void  size(2) Largest target is 0

    S3368$EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculations@eusart.EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    S3368$EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculations@eusart.EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S3368$EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculations@eusart.EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer3_Mode_Select@_timer.Timer3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S3174$Timer3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer3_Init@_timer.Timer3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S3043$Timer2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer2_Init@_timer.Timer2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Mode_Select@_timer.Timer1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S2854$Timer1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Init@_timer.Timer1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Register_Size_Config@_timer.Timer0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Mode_Select@_timer.Timer0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Prescaler_Config@_timer.Timer0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S2684$Timer0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Init@_timer.Timer0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_SetInterruptHandler@int_obj.EXT_interruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Clear_Flag@int_obj.EXT_interruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_Init@int_obj.EXT_interruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_Init@int_obj.EXT_interruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Disable@int_obj.EXT_interruptHandler	PTR FTN()void  size(2) Largest target is 0

    S2162$EXT_interruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@int_obj.EXT_interruptHandler	PTR FTN()void  size(2) Largest target is 0

    S2200$EXT_interruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@int_obj.EXT_interruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    S2200$EXT_interruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@int_obj.EXT_interruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    RB7_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    gpio_pin_initialize@_pin_config	PTR const struct . size(2) Largest target is 6
		 -> motor2.dc_motor_pin(BANK0[2]), motor2(BANK0[2]), motor1.dc_motor_pin(BANK0[2]), motor1(BANK0[2]), 
		 -> relay_initialization@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), lcd1.lcd_data(BANK0[4]), lcd1(BANK0[6]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(2) Largest target is 6
		 -> motor2.dc_motor_pin(BANK0[2]), motor2(BANK0[2]), motor1.dc_motor_pin(BANK0[2]), motor1(BANK0[2]), 
		 -> relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), relay_initialization@pin_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), 
		 -> led_turn_on@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), lcd1.lcd_data(BANK0[4]), lcd1(BANK0[6]), 

    gpio_pin_direction_initialize@_pin_config	PTR const struct . size(2) Largest target is 6
		 -> motor2.dc_motor_pin(BANK0[2]), motor2(BANK0[2]), motor1.dc_motor_pin(BANK0[2]), motor1(BANK0[2]), 
		 -> relay_initialization@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), lcd1.lcd_data(BANK0[4]), lcd1(BANK0[6]), 

    port_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRlllll[1]), PORTD(BITBIGSFRlllll[1]), PORTC(BITBIGSFRlllll[1]), PORTB(BITBIGSFRlllll[1]), 
		 -> PORTA(BITBIGSFRlllll[1]), 

    lat_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRllllh[1]), LATD(BITBIGSFRllllh[1]), LATC(BITBIGSFRllllh[1]), LATB(BITBIGSFRllllh[1]), 
		 -> LATA(BITBIGSFRlllll[1]), 

    tris_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRlllh[1]), TRISD(BITBIGSFRlllh[1]), TRISC(BITBIGSFRlllh[1]), TRISB(BITBIGSFRlllh[1]), 
		 -> TRISA(BITBIGSFRlllll[1]), 

    CCP_Capture_Mode_Timer_Select@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Capture_Mode_Timer_Select@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Interrupt_Config@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Interrupt_Config@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_Compare_Mode_Set_Value@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Compare_Mode_Set_Value@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_IsCompareComplete@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_IsCompareComplete@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_DeInit@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_DeInit@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1106$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Init@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1106$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Init@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    ADC_StartConversion_by_Interrupt@_adc	PTR const struct . size(2) Largest target is 8
		 -> adc_1(BANK1[8]), 

    ADC_GetConversionResult@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_handler(), 

    ADC_GetConversionResult@conversion_result	PTR unsigned short  size(2) Largest target is 2
		 -> adcres2(BANK0[2]), adcres1(BANK0[2]), 

    ADC_GetConversionResult@_adc	PTR const struct . size(2) Largest target is 8
		 -> adc_1(BANK1[8]), 

    ADC_StartConversion@_adc	PTR const struct . size(2) Largest target is 8
		 -> adc_1(BANK1[8]), 

    ADC_SelectChannel@_adc	PTR const struct . size(2) Largest target is 8
		 -> adc_1(BANK1[8]), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_handler(), NULL(), 

    S724$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_handler(), 

    ADC_Init@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_handler(), 

    ADC_Init@_adc	PTR const struct . size(2) Largest target is 8
		 -> adc_1(BANK1[8]), 

    dc_motor_stop@_dc_motor	PTR const struct . size(2) Largest target is 2
		 -> motor2(BANK0[2]), motor1(BANK0[2]), 

    dc_motor_turn_left@_dc_motor	PTR const struct . size(2) Largest target is 2
		 -> motor2(BANK0[2]), motor1(BANK0[2]), 

    dc_motor_initialization@_dc_motor	PTR const struct . size(2) Largest target is 2
		 -> motor2(BANK0[2]), motor1(BANK0[2]), 

    lcd_4bit_send_set_cursor@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_enable_signal@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    send_4bits@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    convert_uint16_to_string@str	PTR unsigned char  size(2) Largest target is 6
		 -> adcres2txt(BANK1[6]), adcres1txt(BANK1[6]), 

    sp__memset	PTR void  size(2) Largest target is 6
		 -> adcres2txt(BANK1[6]), adcres1txt(BANK1[6]), 

    lcd_4bit_char_string_pos@str	PTR unsigned char  size(2) Largest target is 14
		 -> adcres2txt(BANK1[6]), adcres1txt(BANK1[6]), STR_7(CODE[10]), STR_6(CODE[10]), 
		 -> STR_5(CODE[14]), STR_4(CODE[13]), 

    lcd_4bit_char_string_pos@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_char_string@str	PTR unsigned char  size(2) Largest target is 14
		 -> adcres2txt(BANK1[6]), adcres1txt(BANK1[6]), STR_7(CODE[10]), STR_6(CODE[10]), 
		 -> STR_5(CODE[14]), STR_4(CODE[13]), 

    lcd_4bit_char_string@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_char_data@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_initialize@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptManager in COMRAM

    _ADC_handler->___fltol
    ___fltol->___flmul
    ___flmul->___xxtofl

Critical Paths under _main in BANK0

    _main->_convert_uint16_to_string
    _lcd_4bit_char_string_pos->_lcd_4bit_send_set_cursor
    _lcd_4bit_send_set_cursor->_lcd_4bit_send_command
    _lcd_4bit_char_string->_lcd_4bit_char_data
    _lcd_4bit_char_data->_send_4bits
    _dc_motor_turn_left->_gpio_pin_write_logic
    _dc_motor_stop->_gpio_pin_write_logic
    _convert_uint16_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _application_initialization->_lcd_4bit_initialize
    _lcd_4bit_initialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_send_4bits
    _send_4bits->_gpio_pin_write_logic
    _lcd_4bit_send_enable_signal->_gpio_pin_write_logic
    _dc_motor_initialization->_gpio_pin_initialize
    _gpio_pin_initialize->_gpio_pin_write_logic
    _ADC_Init->_adc_input_channel_port_configure
    _ADC_StartConversion_by_Interrupt->_ADC_SelectChannel
    _ADC_SelectChannel->_adc_input_channel_port_configure

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _convert_uint16_to_string->_sprintf

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  131084
                                             14 BANK1      2     2      0
   _ADC_StartConversion_by_Interrupt
         _application_initialization
           _convert_uint16_to_string
                      _dc_motor_stop
                 _dc_motor_turn_left
           _lcd_4bit_char_string_pos
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_char_string_pos                             7     1      6   45465
                                             24 BANK0      6     0      6
               _lcd_4bit_char_string
           _lcd_4bit_send_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_set_cursor                             7     3      4   22892
                                             18 BANK0      6     2      4
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_char_string                                 5     1      4   20208
                                             18 BANK0      5     1      4
                 _lcd_4bit_char_data
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_char_data                                   4     1      3   19861
                                             14 BANK0      4     1      3
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                         _send_4bits
 ---------------------------------------------------------------------------------
 (1) _dc_motor_turn_left                                   3     1      2    6129
                                             10 BANK0      3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_stop                                        3     1      2    6129
                                             10 BANK0      3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _convert_uint16_to_string                            12     8      4   10210
                                             70 BANK0     11     7      4
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             24    16      8    7642
                                             62 BANK0      8     0      8
                                              0 BANK1     14    14      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6796
                                             54 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           19    13      6    6335
                                             40 BANK0     14     8      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                13     9      4    4768
                                             27 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2533
                                             16 BANK0     11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1177
                                              9 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     857
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                              6 BANK0      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _memset                                              12     6      6    1827
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (1) _application_initialization                           0     0      0   39855
                           _ADC_Init
            _dc_motor_initialization
                _lcd_4bit_initialize
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_initialize                                  6     4      2   30937
                                             18 BANK0      6     4      2
                _gpio_pin_initialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_command                                4     1      3   22021
                                             14 BANK0      4     1      3
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                         _send_4bits
 ---------------------------------------------------------------------------------
 (2) _send_4bits                                           4     1      3    6885
                                             10 BANK0      4     1      3
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_enable_signal                          3     1      2    6299
                                             10 BANK0      3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _dc_motor_initialization                              3     1      2    8474
                                             14 BANK0      3     1      2
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_initialize                                  4     2      2    8182
                                             10 BANK0      4     2      2
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_write_logic                                10     7      3    5837
                                              0 BANK0     10     7      3
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_initialize                        9     7      2     707
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             4     2      2     444
                                              3 BANK0      3     1      2
   _adc_input_channel_port_configure
 ---------------------------------------------------------------------------------
 (1) _ADC_StartConversion_by_Interrupt                     5     2      3    1275
                                              8 BANK0      5     2      3
                  _ADC_SelectChannel
                _ADC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADC_StartConversion                                  3     1      2     248
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _ADC_SelectChannel                                    5     2      3     521
                                              3 BANK0      5     2      3
   _adc_input_channel_port_configure
 ---------------------------------------------------------------------------------
 (3) _adc_input_channel_port_configure                     3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptManager                                    6     6      0    4205
                                             49 COMRAM     6     6      0
                            _ADC_ISR
                           _CCP1_ISR
                           _CCP2_ISR
                      _EUSART_RX_ISR
                      _EUSART_TX_ISR
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                   _MSSP_I2C_BCL_ISR
                       _MSSP_I2C_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
                         _Timer0_ISR
                         _Timer1_ISR
                         _Timer2_ISR
                         _Timer3_ISR
 ---------------------------------------------------------------------------------
 (11) _Timer3_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _Timer2_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _Timer1_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _Timer0_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _RB7_ISR                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _RB6_ISR                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _RB5_ISR                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _RB4_ISR                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _MSSP_I2C_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _MSSP_I2C_BCL_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _INT2_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _INT1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _INT0_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_TX_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_RX_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _CCP2_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _CCP1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADC_ISR                                             0     0      0    4145
                                NULL *
                        _ADC_handler *
 ---------------------------------------------------------------------------------
 (12) _ADC_handler                                         0     0      0    4145
            _ADC_GetConversionResult
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (13) ___xxtofl                                           14    10      4    1006
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (13) ___fltol                                            10     6      4     609
                                             39 COMRAM    10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (13) ___flmul                                            25    17      8    1896
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (13) _ADC_GetConversionResult                             8     4      4     634
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (12) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_StartConversion_by_Interrupt
     _ADC_SelectChannel
       _adc_input_channel_port_configure
     _ADC_StartConversion
   _application_initialization
     _ADC_Init
       _adc_input_channel_port_configure
     _dc_motor_initialization
       _gpio_pin_initialize
         _gpio_pin_direction_initialize
         _gpio_pin_write_logic
     _lcd_4bit_initialize
       _gpio_pin_initialize
       _lcd_4bit_send_command
         _gpio_pin_write_logic
         _lcd_4bit_send_enable_signal
           _gpio_pin_write_logic
         _send_4bits
           _gpio_pin_write_logic
   _convert_uint16_to_string
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
   _dc_motor_stop
     _gpio_pin_write_logic
   _dc_motor_turn_left
     _gpio_pin_write_logic
   _lcd_4bit_char_string_pos
     _lcd_4bit_char_string
       _lcd_4bit_char_data
         _gpio_pin_write_logic
         _lcd_4bit_send_enable_signal
         _send_4bits
     _lcd_4bit_send_set_cursor
       _lcd_4bit_send_command
   _lcd_4bit_send_command

 _InterruptManager (ROOT)
   _ADC_ISR
     NULL(Fake) *
     _ADC_handler *
       _ADC_GetConversionResult
       ___flmul
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
   _CCP1_ISR
   _CCP2_ISR
   _EUSART_RX_ISR
   _EUSART_TX_ISR
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _MSSP_I2C_BCL_ISR
   _MSSP_I2C_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR
   _Timer0_ISR
   _Timer1_ISR
   _Timer2_ISR
   _Timer3_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      49        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     10      6A       7       41.4%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     51      7F       5       99.2%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     37      6D       1       86.5%
BITBIGSFRhlhhhl     18      0       0      38        0.0%
BITBIGSFRhh          D      0       0      37        0.0%
BITBIGSFRlllh        6      0       0      46        0.0%
BITBIGSFRhlhhhl      5      0       0      39        0.0%
BITBIGSFRllhllh      4      0       0      43        0.0%
BITBIGSFRllllh       4      0       0      47        0.0%
BITBIGSFRllhllh      4      0       0      44        0.0%
BITBIGSFRlllll       4      0       0      48        0.0%
BITBIGSFRllhh        2      0       0      41        0.0%
BITBIGSFRllhllh      1      0       0      42        0.0%
BITBIGSFRhlhhhl      1      0       0      40        0.0%
BITBIGSFRllhlll      1      0       0      45        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     156      12        0.0%
DATA                 0      0     156       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Oct 05 17:48:32 2023

                                 ??_InterruptManager 0032                                          _SSPSTATbits 0FC7  
                                                 l60 2FAC                                                   l55 21C4  
                                                 l65 2EB0                                                   l83 31E0  
                                                 l78 2D12                                         ___awdiv@sign 0085  
                    __end_of_dc_motor_initialization 32A4                                                  l202 2A6A  
                                                l220 3158                                                  l230 319E  
                                                l215 32A2                                                  l171 2DA4  
                                                l156 2B1C                                                  l174 3354  
                                                l370 21DE                                                  l428 3264  
                                                l380 22FC                                                  l390 32E0  
                                                l374 22A4                                                  l447 2C80  
                                                l393 33A4                                                  l377 22FA  
                                                l378 22F6                                                  l395 33A8  
                                                l657 2084                                                  l676 242E  
                                                l697 301E                                                  _abs 31E2  
                                                _pad 2EB2                            _RB5_InterruptHandler_HIGH 004A  
                                    __end_of_ADC_ISR 3384                  __end_of_lcd_4bit_send_enable_signal 3356  
                        _lcd_4bit_send_enable_signal 331C                                         ___awmod@sign 0085  
                          ?_lcd_4bit_char_string_pos 0098                                  led_initialize@F3049 0067  
                                                prod 0FF3                                                  tosl 0FFD  
                                                wreg 0FE8                                         ___flmul@aexp 0020  
                                       ___flmul@bexp 0021                                         ___flmul@sign 001B  
                                       ___flmul@temp 0026                                         ___flmul@prod 0022  
                          ?_convert_uint16_to_string 00C6                                      __end_of_RB4_ISR 341A  
                                    __end_of_RB5_ISR 3416                                      __end_of_RB6_ISR 3412  
                                    __end_of_RB7_ISR 340E                                         ___fltol@exp1 0031  
                                               ?_abs 0086                           dc_motor_initialization@ret 0090  
                                               l2216 1F3A                                                 l2306 282E  
                                               l2314 3112                                                 l2251 2ED6  
                                               l2260 1C72                                                 l2317 3432  
                                               l2229 3076                                                 l2262 1C7A  
                                               l2255 2F2E                                                 l2263 1CC0  
                                               l2281 255C                                                 l1538 331A  
                                               l2274 1DC2                                                 l2291 321A  
                                               l2294 3222                                                 l2287 30CA  
                                               l1772 28F4                                                 l1785 2BCE  
                                               ?_pad 0090                                                 l8001 31A0  
                                               l8003 31B4                                                 l8101 316E  
                                               l8005 31B8                                                 l8111 323C  
                                               l8103 3172                                                 l8007 31CC  
                                               l8113 3240                                                 l8121 32FE  
                                               l7401 2778                                                 l8107 3224  
                                               l8123 330C                                                 l7403 278A  
                                               l8109 322A                                                 l8117 32E2  
                                               l7421 2830                                                 l7405 2794  
                                               l7413 30CC                                                 l7501 2EB2  
                                               l8119 32F0                                                 l7431 285E  
                                               l7423 2836                                                 l7407 27B2  
                                               l7415 30DA                                                 l7511 2EFC  
                                               l7503 2EC2                                                 l8071 2A7E  
                                               l7601 1F7E                                                 l7521 2304  
                                               l7441 288C                                                 l7433 2866  
                                               l7425 2844                                                 l7409 27E8  
                                               l7417 30EC                                                 l7513 2F1A  
                                               l7505 2ECE                                                 l8081 2AE0  
                                               l8073 2A90                                                 l8065 2A6C  
                                               l7603 1FE2                                                 l7523 2316  
                                               l7451 28C6                                                 l7443 2894  
                                               l7435 286A                                                 l7427 284C  
                                               l7515 31E2                                                 l7419 30F2  
                                               l7507 2EE2                                                 l8083 2AFC  
                                               l8075 2A94                                                 l8067 2A6C  
                                               l8091 3128                                                 l7533 2402  
                                               l7525 2338                                                 l7621 2D28  
                                               l7461 28EC                                                 l7453 28C8  
                                               l7445 28A2                                                 l7437 2872  
                                               l7429 2850                                                 l7517 31FE  
                                               l7509 2EF6                                                 l8085 2AFE  
                                               l8077 2AB0                                                 l8069 2A78  
                                               l8093 312C                                                 l7701 2E50  
                                               l7711 2BDE                                                 l7607 2040  
                                               l7527 2340                                                 l7535 242C  
                                               l7519 22FE                                                 l7631 331C  
                                               l7623 2D30                                                 l7455 28CE  
                                               l7447 28A8                                                 l7439 2884  
                                               l7471 2B3A                                                 l7551 1C66  
                                               l7543 1C2A                                                 l8079 2AC0  
                                               l8087 3114                                                 l7703 2EAE  
                                               l7713 2BE4                                                 l7609 2082  
                                               l7529 23A4                                                 l7633 3332  
                                               l7625 2DA2                                                 l7617 2D14  
                                               l7449 28BE                                                 l7457 28D4  
                                               l7481 2B6E                                                 l7473 2B3E  
                                               l7465 2B1E                                                 l7561 1CB4  
                                               l7553 1C82                                                 l7545 1C40  
                                               l7641 2456                                                 l8097 315A  
                                               l8089 3114                                                 l7801 29CE  
                                               l7731 2BF6                                                 l7715 2BEA  
                                               l7707 2BD4                                                 l7635 3338  
                                               l7619 2D14                                                 l7459 28E4  
                                               l7491 2BA8                                                 l7483 2B76  
                                               l7475 2B4C                                                 l7467 2B24  
                                               l7571 1D0C                                                 l7563 1CBC  
                                               l7555 1C92                                                 l7547 1C50  
                                               l7651 24A4                                                 l7643 2464  
                                               l8099 315A                                                 l7811 2A1A  
                                               l7803 29D2                                                 l7717 2BF0  
                                               l7709 2BD8                                                 l7629 331C  
                                               l7901 1F24                                                 l7485 2B84  
                                               l7493 2BAE                                                 l7477 2B54  
                                               l7469 2B32                                                 l7581 1D62  
                                               l7573 1D12                                                 l7565 1CC8  
                                               l7557 1C98                                                 l7549 1C58  
                                               l7653 24C2                                                 l7645 2472  
                                               l7821 2C88                                                 l7805 29D8  
                                               l7813 2A30                                                 l8701 18F0  
                                               l7735 2BFC                                                 l7671 2FAE  
                                               l7903 1F28                                                 l7495 2BBE  
                                               l7487 2B9A                                                 l7479 2B66  
                                               l7399 2764                                                 l7583 1D7C  
                                               l7575 1D18                                                 l7567 1CD2  
                                               l7559 1CA8                                                 l7655 2506  
                                               l7647 2476                                                 l7663 2530  
                                               l7639 2430                                                 l7743 3078  
                                               l7911 3042                                                 l7831 2D0E  
                                               l7823 2C9A                                                 l7807 29EE  
                                               l8711 1962                                                 l8703 190E  
                                               l7593 1F3C                                                 l7673 2FC2  
                                               l7921 327A                                                 l7761 20C6  
                                               l7753 2086                                                 l7497 2BC6  
                                               l7489 2BA2                                                 l7585 1D8C  
                                               l7569 1CD8                                                 l7577 1D34  
                                               l7649 2486                                                 l7745 3084  
                                               l7913 3060                                                 l7905 3020  
                                               l7825 2CA2                                                 l7809 2A04  
                                               l8721 19DA                                                 l8713 1972  
                                               l8705 192C                                                 l7931 21DA  
                                               l7595 1F42                                                 l7675 2FE4  
                                               l7923 327E                                                 l7691 2FAA  
                                               l7683 2F30                                                 l7771 20EA  
                                               l7755 208C                                                 l7587 1D92  
                                               l7579 1D50                                                 l7659 251E  
                                               l7747 30A2                                                 l7907 3032  
                                               l7827 2CD8                                                 l7819 2C82  
                                               l8731 1A3C                                                 l8723 19F2  
                                               l8715 1988                                                 l8707 193E  
                                               l7941 224E                                                 l7933 21E0  
                                               l7597 1F54                                                 l7677 2FEC  
                                               l7669 2FAE                                                 l7917 3266  
                                               l7685 2F30                                                 l7781 2146  
                                               l7773 20FA                                                 l7757 209E  
                                               l7589 1DA2                                                 l7749 30C0  
                                               l7909 303A                                                 l7829 2CDC  
                                               l8733 1A4C                                                 l8725 1A02  
                                               l8717 19A6                                                 l8709 1952  
                                               l7951 2284                                                 l7943 2250  
                                               l7935 2238                                                 l7927 21C6  
                                               l8831 206C                                                 l7599 1F76  
                                               l7679 301C                                                 l7919 3266  
                                               l7687 2F44                                                 l7791 21A0  
                                               l7783 2158                                                 l7775 210C  
                                               l7767 20CA                                                 l7759 20A2  
                                               l7695 2E34                                                 l8735 1A62  
                                               l8727 1A18                                                 l8719 19BC  
                                               l8833 2C12                                                 l7961 22EE  
                                               l7953 229E                                                 l7945 2252  
                                               l7937 224A                                                 l7929 21C6  
                                               l7689 2F4C                                                 l7793 21B2  
                                               l7785 216A                                                 l7777 211E  
                                               l7769 20E6                                                 l7873 1DC4  
                                               l7697 2E34                                                 l8729 1A24  
                                               l7971 32D6                                                 l7963 32A4  
                                               l7955 22A6                                                 l7947 2262  
                                               l7939 224C                                                 l7787 217C  
                                               l7779 2140                                                 l7891 1EC4  
                                               l7883 1E26                                                 l7699 2E48  
                                               l8827 2A44                                                 l8691 1884  
                                               l7973 32DC                                                 l7965 32AA  
                                               l7981 339C                                                 l7957 22C6  
                                               l7949 227E                                                 l8829 2416  
                                               l7789 218E                                                 l7885 1E7E  
                                               l7877 1DE4                                                 l7797 29BA  
                                               l8693 1888                                                 l7967 32BC  
                                               l7983 33A6                                                 l7959 22CE  
                                               l7895 1EDE                                                 l7879 1DF0  
                                               l7799 29BA                                                 l8695 18A6  
                                               l7969 32C4                                                 l7977 3384  
                                               l7897 1F12                                                 l7889 1E98  
                                               l8697 18C0                                                 l7979 338A  
                                               l7899 1F1E                                                 l8699 18D2  
                                               l7999 31A0                                                 STR_1 1040  
                                               STR_2 1040                                                 STR_4 101F  
                                               STR_5 1011                                                 STR_6 102C  
                                               STR_7 1036                                                 _LATA 0F89  
                                               _LATB 0F8A                                                 _LATC 0F8B  
                                               _LATD 0F8C                                                 _LATE 0F8D  
                                               u7000 27B2                                                 u7001 27AE  
                                               u7010 27E8                                                 u7011 27E4  
                                               u7100 2B4C                                                 u7020 3112  
                                               u7101 2B48                                                 u7021 310E  
                                               u7030 2844                                                 u7110 2B66  
                                               u7031 2840                                                 u7111 2B62  
                                               u7040 285E                                                 u7120 2B84  
                                               u7041 285A                                                 u7121 2B80  
                                               u7050 2884                                                 u7130 2B9A  
                                               u7051 2880                                                 u7131 2B96  
                                               u7204 2360                                                 u7060 28A2  
                                               u7140 2BBE                                                 u7300 1D7C  
                                               u7220 1C3C                                                 u7205 235C  
                                               u7061 289E                                                 u7141 2BBA  
                                               u7301 1D78                                                 u7221 1C36  
                                               u7214 23C4                                                 u7070 28BE  
                                               u7150 2EC2                                                 u7310 1D8C  
                                               u7230 1C3E                                                 u7215 23C0  
                                               u7071 28BA                                                 u7151 2EBE  
                                               u7311 1D88                                                 u7320 1F54  
                                               u7080 28E4                                                 u7160 2F1A  
                                               u7240 1C50                                                 u7400 24A4  
                                               u7321 1F50                                                 u7081 28E0  
                                               u7161 2F16                                                 u7241 1C4C  
                                               u7401 24A0                                                 u7330 1F76  
                                               u7090 2B32                                                 u7170 31FE  
                                               u7250 1C66                                                 u7410 24C2  
                                               u7331 1F72                                                 u7091 2B2E  
                                               u7171 31FA                                                 u7251 1C62  
                                               u7411 24BE                                                 u7180 2316  
                                               u7420 2FC2                                                 u7260 1C92  
                                               u7500 2C9A                                                 u7181 2312  
                                               u7421 2FBE                                                 u7261 1C8E  
                                               u7501 2C96                                                 u7190 2338  
                                               u7430 2FE4                                                 u7270 1CA8  
                                               u7510 2CCC                                                 u7191 2334  
                                               u7431 2FE0                                                 u7271 1CA4  
                                               u7360 2058                                                 u7344 1F9E  
                                               u7440 2F44                                                 u7600 1EDA  
                                               u7280 1D50                                                 u7520 2CFE  
                                               u8400 19F2                                                 u7361 2052  
                                               u7345 1F9A                                                 u7441 2F40  
                                               u7601 1ED6                                                 u7281 1D4C  
                                               u8401 19EE                                                 u7370 205A  
                                               u7354 2002                                                 u7610 1F3A  
                                               u7290 1D62                                                 u7450 2E48  
                                               u7530 2D0E                                                 u8410 1A18  
                                               u7355 1FFE                                                 u7611 1F36  
                                               u7291 1D5E                                                 u7451 2E44  
                                               u7531 2D0A                                                 u8411 1A14  
                                               u7620 327A                                                 u7380 2D28  
                                               u7460 30C0                                                 u8420 1A3C  
                                               u7621 3276                                                 u7381 2D24  
                                               u7461 30BC                                                 u7517 2CC2  
                                               u8421 1A38                                                 u7630 21DA  
                                               u7470 209E                                                 u7390 2456  
                                               u7710 31B4                                                 u8430 1A62  
                                               u7631 21D6                                                 u7471 209A  
                                               u7391 2452                                                 u7527 2CF4  
                                               u7711 31B0                                                 u8431 1A5E  
                                               u7640 227E                                                 u7480 20FA  
                                               u7800 2B1C                                                 u7641 227A  
                                               u7481 20F6                                                 u7801 2B18  
                                               u7650 229E                                                 u7570 1DE0  
                                               u7810 3128                                                 u7490 29CE  
                                               u7651 229A                                                 u7571 1DDC  
                                               u7811 3124                                                 u7491 29CA  
                                               u7660 22C6                                                 u7580 1E22  
                                               u7820 316E                                                 u8380 193E  
                                               u7661 22C2                                                 u7581 1E1E  
                                               u7821 316A                                                 u8381 193A  
                                               u7830 323C                                                 u7670 22EE  
                                               u7590 1E94                                                 u8390 1962  
                                               u7831 3238                                                 u7671 22EA  
                                               u7591 1E90                                                 u8391 195E  
                                               u8447 18B2                                                 u7680 32BC  
                                               u7681 32B8                                                 u8457 2102  
                                               u7690 339C                                                 u7691 3398  
                                               u8467 2126                                                 u6980 2778  
                                               u8477 2142                                                 u6981 2774  
                                               u7781 2A72                                                 u6990 278A  
                                               u7790 2A90                                                 u6991 2786  
                                               u7791 2A8C                                                 _TMR2 0FCC  
                      ??_lcd_4bit_send_enable_signal 008C                             _RB4_InterruptHandler_LOW 0050  
                                               abs@a 0086                                                 _lcd1 00F5  
                                               _dbuf 0112                                                 _main 1884  
                                               _dtoa 1C2A                                     __end_of_CCP1_ISR 3432  
                                   __end_of_CCP2_ISR 342E                                                 _prec 00D7  
                           _RB7_InterruptHandler_LOW 0044                                                 pad@i 0097  
                                               pad@p 0094                                                 fsr0h 0FEA  
                                               fsr1h 0FE2                                                 indf0 0FEF  
                                               fsr2h 0FDA                                                 fsr0l 0FE9  
                                               indf1 0FE7                                                 indf2 0FDF  
                                               fsr1l 0FE1                                                 pad@w 0099  
                                               fsr2l 0FD9                                                 btemp 006E  
                                   __end_of_ADC_Init 22FE                                                 prodh 0FF4  
                                               prodl 0FF3                                                 start 000E  
                                       ___param_bank 0000                                _lcd_4bit_send_command 2F30  
                                              ??_abs 0088                                 _gpio_pin_write_logic 22FE  
                                              ??_pad 0096                                     __end_of_INT0_ISR 3426  
                                   __end_of_INT1_ISR 3422                                     __end_of_INT2_ISR 341E  
                                      _EUSART_RX_ISR 3438                                        ___fltol@sign1 0030  
                                      _EUSART_TX_ISR 3426                                                ?_main 0001  
                                              ?_dtoa 009B                                      __end_of___awdiv 28F6  
                                              _EEADR 0FA9                                      __end_of___awmod 2BD0  
                                    __end_of___flmul 146E                                      __end_of___fltol 2664  
                                    ___awdiv@divisor 0082                                dc_motor_turn_left@ret 008C  
                                              i2l413 29B8                                                i2l451 3382  
                                              i2l570 342C                                                i2l566 3430  
                                              i2l910 340C                                                i2l903 3410  
                                              i2l825 3434                                                i2l828 3436  
                                              i2l874 3424                                                i2l882 341C  
                                    ___awdiv@counter 0084                                                i2l878 3420  
                                              i2l896 3414                                                i2l889 3418  
                                              _RCREG 0FAE                                  relay_turn_off@F3052 0061  
                                       vfpfcnvrt@fmt 00AA                                                _TMR0H 0FD7  
                                              _TMR1H 0FCF                                                _TMR0L 0FD6  
                                              _TMR1L 0FCE                                                _TMR3H 0FB3  
                                              _TMR3L 0FB2                                                _SPBRG 0FAF  
                                              _PORTA 0F80                                                _PORTB 0F81  
                                              _PORTC 0F82                                                _PORTD 0F83  
                                              _PORTE 0F84                                                _TRISA 0F92  
                                              _TRISB 0F93                                                _TRISC 0F94  
                                              _TRISD 0F95                                                _TRISE 0F96  
                                              _TXREG 0FAD                                                _adc_1 0152  
                                              _flags 00E5                                                _fputc 2764  
                                              _fputs 30CC                                                pad@fp 0090  
                                              _width 00D5                                                _putch 3432  
                                              dtoa@d 009D                                                dtoa@i 00A6  
                                              dtoa@p 00A1                                                dtoa@s 00A5  
                                              dtoa@w 00A3                                                pclath 0FFA  
                                              pclatu 0FFB                                                tablat 0FF5  
                                              ttemp5 006F                                                ttemp6 0072  
                                              ttemp7 0076                                                status 0FD8  
                                              wtemp8 006F                                      __end_of_sprintf 3078  
                   __end_of_lcd_4bit_send_set_cursor 2A6C                       ?_gpio_pin_direction_initialize 0080  
                                    __initialization 2DA6                          dc_motor_turn_left@_dc_motor 008A  
                                       __end_of_main 1A76                                         __end_of_dtoa 1DC4  
                              ?_gpio_pin_write_logic 0080                                            ??_ADC_ISR 0032  
                                     ?_EUSART_RX_ISR 0001                                       ?_EUSART_TX_ISR 0001  
                                             ??_main 0168                                               ??_dtoa 009F  
                                      __activetblptr 0003                          ?_application_initialization 0001  
                                   led_turn_on@F3054 0066                                            ??_RB4_ISR 0001  
                                          ??_RB5_ISR 0001                                            ??_RB6_ISR 0001  
                                          ??_RB7_ISR 0001             __end_of_ADC_StartConversion_by_Interrupt 3266  
                 ??_ADC_StartConversion_by_Interrupt 008B                    ?_ADC_StartConversion_by_Interrupt 0088  
                   _ADC_StartConversion_by_Interrupt 3224                                               ?_fputc 0080  
                                             ?_fputs 0089                                               _ADRESH 0FC4  
                                             _EEADRH 0FAA                                               _ADRESL 0FC3  
                                             _EEDATA 0FA8                                               _CCPR2H 0FBC  
                                             _CCPR2L 0FBB                                               _EECON2 0FA7  
                                   ___awdiv@dividend 0080                                               ?_putch 0001  
                                             i2l1100 15F8                                               i2l1110 1728  
                                             i2l1102 163C                                               i2l1120 17C8  
                                             i2l1112 1748                                               i2l1104 1680  
                                             i2l1122 17E8                                               i2l1114 1768  
                                             i2l1106 16C4                                               i2l1131 1868  
                                             i2l1124 1808                                               i2l1116 1788  
                                             i2l1108 1708                                               i2l1126 1828  
                                             i2l1118 17A8                                               i2l1240 33F0  
                                             i2l1128 1848                                               i2l2210 1BC0  
                                             i2l1090 14C8                                               i2l2203 1B64  
                                             i2l1331 33E4                                               i2l1092 14E8  
                                             i2l1173 33FC                                               i2l1094 152C  
                                             i2l1096 1570                                               i2l1088 14A8  
                                             i2l2162 12FE                                               i2l1098 15B4  
                                             i2l2155 1108                                               i2l2172 142E  
                                             i2l2164 1376                                               i2l2165 1364  
                                             i2l3301 342E                                               i2l1462 3428  
                                             i2l2159 146C                                               i2l1535 2762  
                                             i2l3305 342A                                               i2l3313 341E  
                                             i2l3321 3416                                               i2l1289 3404  
                                             i2l2196 1ACC                                               i2l1468 3438  
                                             i2l3309 3422                                               i2l3317 341A  
                                             i2l2199 1C28                                               i2l3329 3412  
                                             i2l3337 340E                                               i2l3345 340A  
                                             i2l1838 2662                                               i2l3383 33F2  
                                             i2l3391 33E6                                               i2l3385 33F4  
                                             i2l3393 33E8                                               i2l6201 33FE  
                                             i2l7001 153A                                               i2l6051 2676  
                                             i2l3387 33F8                                               i2l3395 33EC  
                                             i2l7011 157E                                               i2l7003 1548  
                                             i2l6061 270A                                               i2l6053 268A  
                                             i2l6213 3426                                               i2l6205 33DA  
                                             i2l7101 1804                                               i2l7021 15C2  
                                             i2l7013 158C                                               i2l7005 1556  
                                             i2l6063 275C                                               i2l6055 26DC  
                                             i2l6207 33DC                                               i2l7111 1856  
                                             i2l7103 1816                                               i2l7031 1606  
                                             i2l7023 15D0                                               i2l7015 159A  
                                             i2l7007 1566                                               i2l5601 10A6  
                                             i2l6057 26E6                                               i2l6049 2664  
                                             i2l6217 3438                                               i2l6209 33E0  
                                             i2l7113 1864                                               i2l7105 1824  
                                             i2l7041 164A                                               i2l7033 1614  
                                             i2l7025 15DE                                               i2l7017 15AA  
                                             i2l7009 156A                                               i2l5611 10D2  
                                             i2l5603 10AC                                               i2l6059 26F6  
                                             i2l7107 1836                                               i2l7051 168E  
                                             i2l7043 1658                                               i2l7035 1622  
                                             i2l7027 15EE                                               i2l7019 15AE  
                                             i2l5701 1432                                               i2l5621 1128  
                                             i2l5613 10E2                                               i2l5605 10B2  
                                             i2l7109 1844                                               i2l7061 16D2  
                                             i2l7053 169C                                               i2l7045 1666  
                                             i2l7037 1632                                               i2l7029 15F2  
                                             i2l5711 145C                                               i2l5703 1442  
                                             i2l5631 1168                                               i2l5615 10F2  
                                             i2l5607 10C0                                               i2l7071 1716  
                                             i2l7063 16E0                                               i2l7055 16AA  
                                             i2l7047 1676                                               i2l7039 1636  
                                             i2l5705 1450                                               i2l5641 11B2  
                                             i2l5633 1174                                               i2l5625 113C  
                                             i2l5617 10F8                                               i2l5609 10C2  
                                             i2l5721 2588                                               i2l5801 1C18  
                                             i2l7081 1764                                               i2l7073 1724  
                                             i2l7065 16EE                                               i2l7057 16BA  
                                             i2l7049 167A                                               i2l5571 2926  
                                             i2l5563 28F6                                               i2l5707 1452  
                                             i2l5651 1204                                               i2l5643 11BE  
                                             i2l5635 118C                                               i2l5627 1148  
                                             i2l5619 1118                                               i2l5731 25D6  
                                             i2l5723 25B2                                               i2l5715 255E  
                                             i2l6195 3356                                               i2l7091 17B6  
                                             i2l7083 1776                                               i2l7075 1736  
                                             i2l7067 16FE                                               i2l7059 16BE  
                                             i2l5573 2940                                               i2l5581 29B6  
                                             i2l5565 28FA                                               i2l5709 1458  
                                             i2l5661 1282                                               i2l5653 1214  
                                             i2l5645 11CE                                               i2l5637 1198  
                                             i2l5629 1152                                               i2l5741 2602  
                                             i2l5725 25B4                                               i2l5717 2574  
                                             i2l6197 3358                                               i2l7093 17C4  
                                             i2l7085 1784                                               i2l7077 1744  
                                             i2l7069 1702                                               i2l5575 2968  
                                             i2l5567 290C                                               i2l5671 12FC  
                                             i2l5663 12B8                                               i2l5655 1230  
                                             i2l5647 11DA                                               i2l5639 11A4  
                                             i2l5591 1060                                               i2l5751 2632  
                                             i2l5727 25C4                                               i2l6199 336A  
                                             i2l7095 17D6                                               i2l7087 1796  
                                             i2l7079 1756                                               i2l5577 2982  
                                             i2l5569 291E                                               i2l5681 135C  
                                             i2l5673 130E                                               i2l5665 12C6  
                                             i2l5657 123C                                               i2l5649 11EA  
                                             i2l5593 1070                                               i2l5585 1044  
                                             i2l5753 2642                                               i2l5737 25EE  
                                             i2l5729 25C8                                               i2l5761 1A88  
                                             i2l7097 17E4                                               i2l7089 17A4  
                                             i2l5691 13CA                                               i2l5675 131C  
                                             i2l5667 12E4                                               i2l5659 1258  
                                             i2l5595 1080                                               i2l5587 1050  
                                             i2l5755 2652                                               i2l5747 2616  
                                             i2l5739 25F8                                               i2l5771 1B06  
                                             i2l5763 1A96                                               i2l7099 17F6  
                                             i2l5685 1386                                               i2l5693 13CE  
                                             i2l5677 1320                                               i2l5669 12EE  
                                             i2l5597 1090                                               i2l5589 105E  
                                             i2l5749 2622                                               i2l5781 1B5A  
                                             i2l5773 1B0E                                               i2l5765 1ADC  
                                             i2l5695 13E8                                               i2l5687 1392  
                                             i2l5679 132E                                               i2l5599 1096  
                                             i2l5791 1BD0                                               i2l5783 1B96  
                                             i2l5775 1B1A                                               i2l5767 1AF2  
                                             i2l5759 1A78                                               i2l5697 13FC  
                                             i2l5689 13A0                                               i2l5793 1BD4  
                                             i2l5785 1BA2                                               i2l5777 1B4C  
                                             i2l5699 1416                                               i2l5795 1BF8  
                                             i2l5787 1BB0                                               i2l5779 1B4E  
                                             i2l5797 1C08                                               i2l5789 1BCE  
                                             i2l5799 1C16                                               i2l6981 14A4  
                                             i2l6991 14F6                                               i2l6983 14B6  
                                             i2l6993 1504                                               i2l6985 14C4  
                                             i2l6977 1488                                               i2l6995 1512  
                                             i2l6987 14D6                                               i2l6979 1496  
                                             i2l6997 1522                                               i2l6989 14E4  
                                             i2l6999 1526                  convert_uint16_to_string@Temp_String 00CA  
                                             _SPBRGH 0FB0                                lcd_4bit_char_data@lcd 008E  
                                             _SSPADD 0FC8                                lcd_4bit_char_data@ret 0091  
                                             _SSPBUF 0FC9                                     __end_of___xxtofl 1C2A  
                                      _tris_register 00EB                                           _Timer0_ISR 33F2  
                                         _Timer1_ISR 33E6                                           _Timer2_ISR 33FE  
                                         _Timer3_ISR 33DA                               ?_lcd_4bit_send_command 008E  
                                       vfprintf@cfmt 00BC                          lcd_4bit_char_string_pos@lcd 0098  
                        lcd_4bit_char_string_pos@row 009A                          lcd_4bit_char_string_pos@str 009C  
                                          ??___awdiv 0084                                            ??___awmod 0084  
                                          ??___flmul 0017                                            ??___fltol 002C  
                                             _memset 1DC4                                               clear_0 2E0C  
                                             clear_1 2E18                                               clear_2 2E24  
                                   ___awdiv@quotient 0086                                      ___awmod@divisor 0082  
                                             _motor1 00FD                                               _motor2 00FB  
                                             isa$std 0001                                      ___awmod@counter 0084  
                                             pad@buf 0092                                               dtoa@fp 009B  
                                             fputc@c 0080                                            ?_CCP1_ISR 0001  
                                             fputs@c 008D                                               fputs@i 008E  
                                       __pdataCOMRAM 006A                                            ?_CCP2_ISR 0001  
                                             fputs@s 0089                _ESUART_Overrun_Error_InterruptHandler 00D9  
                                          ?_ADC_Init 0083                                         __mediumconst 0000  
                                             tblptrh 0FF7                                               tblptrl 0FF6  
                                             tblptru 0FF8                                               putch@c 0001  
                                   __end_of_vfprintf 30CC                                            ??_sprintf 00C6  
                            _Timer0_InterruptHandler 0040                                         ___xxtofl@arg 000B  
                                       ___xxtofl@exp 000A                                         ___xxtofl@val 0001  
                                         __accesstop 0080                              __end_of__initialization 2E2A  
                                          ?_INT0_ISR 0001                                            ?_INT1_ISR 0001  
                                          ?_INT2_ISR 0001                                        ___rparam_used 0001  
                                         ___fltol@f1 0028                               ??_gpio_pin_write_logic 0083  
                                     __pcstackCOMRAM 0001                                         __pidataBANK0 33C6  
                                       __pidataBANK1 33AA                                      ??_EUSART_RX_ISR 0001  
                                   _MSSP_I2C_BCL_ISR 3436                                      ??_EUSART_TX_ISR 0001  
                                      __end_of_fputc 2830                                        __end_of_fputs 3114  
                                      __end_of_putch 3434                             lcd_4bit_send_command@lcd 008E  
                           lcd_4bit_send_command@ret 0091                                        send_4bits@lcd 008A  
                                      send_4bits@ret 008D                                           _adcres1txt 0138  
                                         _adcres2txt 0132             gpio_pin_direction_initialize@_pin_config 0080  
                            _ADC_GetConversionResult 28F6                                           ??_CCP1_ISR 0001  
                          ?_lcd_4bit_send_set_cursor 0092                                           ??_CCP2_ISR 0001  
                                         ??_ADC_Init 0085                                 ADC_SelectChannel@ret 0087  
                                            ??_fputc 0084                                              ??_fputs 008D  
                           ?_dc_motor_initialization 008E                                              ??_putch 0080  
                             ADC_StartConversion@ret 0082                                           __pbssBANK0 00D1  
                                         __pbssBANK1 0100                                _INT0_InterruptHandler 0056  
                                         ??_INT0_ISR 0001                                           ??_INT1_ISR 0001  
                                         ??_INT2_ISR 0001                           ADC_GetConversionResult@ret 0008  
                                        ?_Timer0_ISR 0001                                          ?_Timer1_ISR 0001  
                                        ?_Timer2_ISR 0001                                          ?_Timer3_ISR 0001  
                                  led_turn_off@F3059 0065                     dc_motor_initialization@_dc_motor 008E  
                                            _ADC_ISR 3356                          convert_uint16_to_string@str 00C8  
                                            ?_memset 0080                                              _RB4_ISR 3416  
                                            _RB5_ISR 3412                                              _RB6_ISR 340E  
                                            _RB7_ISR 340A                                            ?___xxtofl 0001  
                          _RB6_InterruptHandler_HIGH 0046                                        ?_MSSP_I2C_ISR 0001  
                               led_turn_toggle@F3064 0064                               lcd_4bit_char_data@data 0090  
ADC_StartConversion_by_Interrupt@l_conversion_status 008B                      CCP_Compare_Mode_Set_Value@F3115 0058  
                                         _btn_values 1001                             _RB6_InterruptHandler_LOW 0048  
                                      ??_ADC_handler 0032                                 _ADC_InterruptHandler 005E  
                                            __Hparam 0000                           __end_of_lcd_4bit_char_data 2EB2  
                                       ADC_Init@_adc 0083                                              __Lparam 0000  
                                _gpio_pin_initialize 2FAE                                              ___awdiv 2830  
                                            ___awmod 2B1E                                              ___flmul 1044  
                                            ___fltol 255E                  ADC_StartConversion_by_Interrupt@ret 008C  
                                            _adcflag 00E6                                            ?_vfprintf 00B6  
                                            _adcres1 00E9                                              _adcres2 00E7  
                                       __psmallconst 1000                              _Timer1_InterruptHandler 003C  
                          ??_ADC_GetConversionResult 0005                                              __pcinit 2DA6  
                           _lcd_4bit_char_string_pos 31A0                                              __ramtop 1000  
                                            __ptext0 1884                                              __ptext1 31A0  
                                            __ptext2 29BA                                              __ptext3 2C82  
                                            __ptext4 2E34                                              __ptext5 3114  
                                            __ptext6 315A                                              __ptext7 2A6C  
                                            __ptext8 3020                                              __ptext9 3078  
                                          _T0CONbits 0FD5                                            _T1CONbits 0FCD  
                    ??_gpio_pin_direction_initialize 0082                      lcd_4bit_send_set_cursor@coloumn 0095  
                           _convert_uint16_to_string 2A6C                                       ??_MSSP_I2C_ISR 0001  
                                          _T2CONbits 0FCA                                           ??___xxtofl 0005  
                                          _T3CONbits 0FB1                                     ___awmod@dividend 0080  
                        lcd_4bit_send_set_cursor@lcd 0092                          lcd_4bit_send_set_cursor@row 0094  
                               ?_gpio_pin_initialize 008A                                           _send_4bits 2D14  
                                            _sprintf 3020                                       __pintcode_body 146E  
                               end_of_initialization 2E2A                                              fputc@fp 0082  
                                            memset@c 0082                                              memset@k 0088  
                                            memset@n 0084                                              memset@s 008A  
                                            int_func 146E                                              fputs@fp 008B  
                                 RB4_ISR@pin4_source 0001                              ??_lcd_4bit_send_command 0091  
                                      _dc_motor_stop 315A                                    __end_of_vfpfcnvrt 255E  
                                          _RCSTAbits 0FAB                                              postdec1 0FE5  
                                            postdec2 0FDD                                              postinc0 0FEE  
                                            postinc1 0FE6                                              postinc2 0FDE  
                                   vfpfcnvrt@convarg 00B0                                  __end_of_ADC_handler 2764  
                                         ??_vfprintf 00BC                                  _lcd_4bit_initialize 2086  
                              _INT1_InterruptHandler 0054                                            _PORTBbits 0F81  
                                   _InterruptManager 0008                                        ___xxtofl@sign 0009  
                                          _TRISCbits 0F94                                ??_gpio_pin_initialize 008C  
                                _ADC_StartConversion 3384                             __end_of_MSSP_I2C_BCL_ISR 3438  
                               ?_lcd_4bit_initialize 0092                           _ESUART_TX_InterruptHandler 00DF  
                                        ___flmul@grs 001C                                          _CCP1CONbits 0FBD  
                                        _CCP2CONbits 0FBA                                            _TXSTAbits 0FAC  
                                     ?_dc_motor_stop 008A                                   relay_turn_on@F3047 0062  
                               ?_ADC_StartConversion 0080                                   RB5_ISR@pin5_source 0001  
                      convert_uint16_to_string@F3201 010C                        convert_uint32_to_string@F3208 0100  
                                        vfpfcnvrt@ap 00AC                                          vfpfcnvrt@cp 00B4  
                                        vfpfcnvrt@fp 00A8                                          _BAUDCONbits 0FB8  
                                      __pidataCOMRAM 3406              adc_input_channel_port_configure@channel 0082  
                                     _timer0_preload 003E                                       __end_of_memset 1F3C  
                                     _timer1_preload 003A                                       _timer2_preload 0060  
                                start_initialization 2DA6                                       _timer3_preload 0038  
                       ?_lcd_4bit_send_enable_signal 008A                        convert_uint16_to_string@value 00C6  
                                  send_4bits@command 008C                                          __end_of_abs 3224  
                                        __end_of_pad 2F30                                          ?_send_4bits 008A  
              __end_of_gpio_pin_direction_initialize 2086                        _gpio_pin_direction_initialize 1F3C  
                                       _lat_register 0148             ADC_GetConversionResult@conversion_result 0003  
                              ??_lcd_4bit_initialize 0094                              _Timer2_InterruptHandler 00E3  
                             dc_motor_stop@_dc_motor 008A                                ADC_SelectChannel@_adc 0083  
                                        _ADC_handler 2664                                 __end_of_MSSP_I2C_ISR 3436  
                                       ??_Timer0_ISR 0001                                         ??_Timer1_ISR 0001  
                                       ??_Timer2_ISR 0001                                         ??_Timer3_ISR 0001  
                              ??_ADC_StartConversion 0082                                          vfprintf@fmt 00B8  
                       __end_of_lcd_4bit_char_string 2D14                                          __pdataBANK0 00EB  
                                        __pdataBANK1 013E                         convert_uint8_to_string@F3194 00D1  
                                           ?_ADC_ISR 0001                                             ??_memset 0086  
                              __end_of_EUSART_RX_ISR 343A                                __end_of_EUSART_TX_ISR 342A  
                                         memset@dest 0080                         lcd_4bit_send_command@command 0090  
                                   dc_motor_stop@ret 008C                              ADC_StartConversion@_adc 0080  
                                 RB6_ISR@pin6_source 0001                                             ?_RB4_ISR 0001  
                                           ?_RB5_ISR 0001                                             ?_RB6_ISR 0001  
                                           ?_RB7_ISR 0001                                            ___flmul@a 0013  
                                          ___flmul@b 000F                                          __pbssCOMRAM 0038  
                                      __pcstackBANK0 0080                                        __pcstackBANK1 015A  
                                 __end_of_Timer0_ISR 33FE                                   __end_of_Timer1_ISR 33F2  
                                 __end_of_Timer2_ISR 3406                                   __end_of_Timer3_ISR 33E6  
                         __end_of_dc_motor_turn_left 315A                          ADC_GetConversionResult@_adc 0001  
                              _INT2_InterruptHandler 0052                                      ??_dc_motor_stop 008C  
                         ??_lcd_4bit_char_string_pos 009E                                            _dtoa$4430 009F  
                                          __pintcode 0008             __end_of_adc_input_channel_port_configure 2C82  
                  ?_adc_input_channel_port_configure 0001                   ??_adc_input_channel_port_configure 0080  
                   _adc_input_channel_port_configure 2BD0                                    _ADC_SelectChannel 32A4  
                         ??_convert_uint16_to_string 00CA                      gpio_pin_write_logic@_pin_config 0080  
                                           ?___awdiv 0080                                             ?___awmod 0080  
                                           ?___flmul 000F                                             ?___fltol 0028  
                                 ?_ADC_SelectChannel 0083                             _lcd_4bit_send_set_cursor 29BA  
                          gpio_pin_write_logic@logic 0082              ADC_StartConversion_by_Interrupt@channel 008A  
                                 _lcd_4bit_char_data 2E34                                          __smallconst 1000  
                          _RB4_InterruptHandler_HIGH 004E                                             _CCP1_ISR 342E  
                                           _CCP2_ISR 342A                                  ??_ADC_SelectChannel 0086  
                       ??_application_initialization 0098                                             _ADC_Init 21C6  
                          _RB7_InterruptHandler_HIGH 0042                                  ?_lcd_4bit_char_data 008E  
                                           ?_sprintf 00BE                                   RB7_ISR@pin7_source 0001  
                           _RB5_InterruptHandler_LOW 004C                                             _INT0_ISR 3422  
                                           _INT1_ISR 341E                                             _INT2_ISR 341A  
                         lcd_4bit_initialize@counter 0096                                             _RB4_Flag 006D  
                                           _RB5_Flag 006C                                             _RB6_Flag 006B  
                                           _RB7_Flag 006A                             __end_of_InterruptManager 1884  
                                           _PIE1bits 0F9D                                             _PIE2bits 0FA0  
                          __end_of_ADC_SelectChannel 32E2                        __end_of_lcd_4bit_send_command 2FAE  
                                           i2u510_40 26F6                                             i2u510_41 26F2  
                                           _PIR1bits 0F9E                                             i2u450_40 1070  
                                           i2u450_41 106C                                             i2u451_40 1080  
                                           i2u451_41 107C                                             _PIR2bits 0FA1  
                                           i2u444_40 290C                                             i2u460_40 132E  
                                           i2u452_40 10C0                                             i2u620_40 14E4  
                                           i2u444_41 2908                                             i2u460_41 132A  
                                           i2u452_41 10BC                                             i2u620_41 14E0  
                                           i2u445_40 291E                                             i2u461_40 135C  
                                           i2u453_40 10D2                                             i2u509_40 2676  
                                           i2u525_40 336A                                             i2u621_40 14F6  
                                           i2u445_41 291A                                             i2u461_41 1358  
                                           i2u453_41 10CE                                             i2u509_41 2672  
                                           i2u525_41 3366                                             i2u621_41 14F2  
                                           i2u446_40 2940                                             i2u462_40 1372  
                                           i2u454_40 10E2                                             i2u470_40 25D6  
                                           i2u630_40 158C                                             i2u622_40 1504  
                                           i2u446_41 293C                                             i2u462_41 136E  
                                           i2u454_41 10DE                                             i2u470_41 25D2  
                                           i2u630_41 1588                                             i2u622_41 1500  
                                           i2u447_40 2982                                             i2u463_40 1386  
                                           i2u455_40 1118                                             i2u471_40 25EA  
                                           i2u526_48 3370                                             i2u631_40 159A  
                                           i2u623_40 1512                                             i2u615_40 1496  
                                           i2u447_41 297E                                             i2u463_41 1382  
                                           i2u455_41 1114                                             i2u471_41 25E6  
                                           i2u526_49 3382                                             i2u631_41 1596  
                                           i2u623_41 150E                                             i2u615_41 1492  
                                           i2u464_40 13A0                                             i2u456_40 1128  
                                           i2u472_40 2612                                             i2u480_40 1BB0  
                                           i2u640_40 1632                                             i2u632_40 15AA  
                                           i2u624_40 1522                                             i2u616_40 14A4  
                                           i2u464_41 139C                                             i2u456_41 1124  
                                           i2u472_41 260E                                             i2u480_41 1BAC  
                                           i2u640_41 162E                                             i2u632_41 15A6  
                                           i2u624_41 151E                                             i2u616_41 14A0  
                                           i2u448_45 299A                                             i2u465_40 13E8  
                                           i2u457_40 12A2                                             i2u449_40 105E  
                                           i2u473_40 2632                                             i2u481_40 1BC0  
                                           i2u641_40 164A                                             i2u633_40 15C2  
                                           i2u625_40 153A                                             i2u617_40 14B6  
                                           i2u465_41 13E4                                             i2u449_41 105A  
                                           i2u473_41 262E                                             i2u481_41 1BBC  
                                           i2u641_41 1646                                             i2u633_41 15BE  
                                           i2u625_41 1536                                             i2u617_41 14B2  
                                           i2u457_45 1298                                             i2u466_40 1416  
                                           i2u458_40 12FC                                             i2u474_40 2642  
                                           i2u482_40 1BCE                                             i2u650_40 16E0  
                                           i2u642_40 1658                                             i2u634_40 15D0  
                                           i2u626_40 1548                                             i2u618_40 14C4  
                                           i2u466_41 1412                                             i2u458_41 12F8  
                                           i2u474_41 263E                                             i2u482_41 1BCA  
                                           i2u650_41 16DC                                             i2u642_41 1654  
                                           i2u634_41 15CC                                             i2u626_41 1544  
                                           i2u618_41 14C0                                             i2u467_40 1450  
                                           i2u459_40 131C                                             i2u483_40 1C08  
                                           i2u475_40 1A88                                             i2u651_40 16EE  
                                           i2u643_40 1666                                             i2u635_40 15DE  
                                           i2u627_40 1556                                             i2u619_40 14D6  
                                           i2u467_41 144C                                             i2u459_41 1318  
                                           i2u483_41 1C04                                             i2u475_41 1A84  
                                           i2u651_41 16EA                                             i2u643_41 1662  
                                           i2u635_41 15DA                                             i2u627_41 1552  
                                           i2u619_41 14D2                                             i2u468_40 2574  
                                           i2u484_40 1C16                                             i2u476_40 1A96  
                                           i2u660_40 1784                                             i2u652_40 16FE  
                                           i2u644_40 1676                                             i2u636_40 15EE  
                                           i2u628_40 1566                                             i2u468_41 2570  
                                           i2u484_41 1C12                                             i2u476_41 1A92  
                                           i2u660_41 1780                                             i2u652_41 16FA  
                                           i2u644_41 1672                                             i2u636_41 15EA  
                                           i2u628_41 1562                                             i2u469_40 25A8  
                                           i2u477_40 1AF2                                             i2u661_40 1796  
                                           i2u653_40 1716                                             i2u645_40 168E  
                                           i2u637_40 1606                                             i2u629_40 157E  
                                           i2u477_41 1AEE                                             i2u661_41 1792  
                                           i2u653_41 1712                                             i2u645_41 168A  
                                           i2u637_41 1602                                             i2u629_41 157A  
                                           i2u469_45 259E                                             i2u478_40 1B48  
                                           i2u670_40 1824                                             i2u662_40 17A4  
                                           i2u654_40 1724                                             i2u646_40 169C  
                                           i2u638_40 1614                                             i2u478_41 1B44  
                                           i2u670_41 1820                                             i2u662_41 17A0  
                                           i2u654_41 1720                                             i2u646_41 1698  
                                           i2u638_41 1610                                             i2u479_40 1B92  
                                           i2u671_40 1836                                             i2u663_40 17B6  
                                           i2u655_40 1736                                             i2u647_40 16AA  
                                           i2u639_40 1622                                             i2u479_41 1B8E  
                                           i2u671_41 1832                                             i2u663_41 17B2  
                                           i2u655_41 1732                                             i2u647_41 16A6  
                                           i2u639_41 161E                                             i2u672_40 1844  
                                           i2u664_40 17C4                                             i2u656_40 1744  
                                           i2u648_40 16BA                                             i2u672_41 1840  
                                           i2u664_41 17C0                                             i2u656_41 1740  
                                           i2u648_41 16B6                                             i2u673_40 1856  
                                           i2u665_40 17D6                                             i2u657_40 1756  
                                           i2u649_40 16D2                                             i2u673_41 1852  
                                           i2u665_41 17D2                                             i2u657_41 1752  
                                           i2u649_41 16CE                                             i2u674_40 1864  
                                           i2u666_40 17E4                                             i2u658_40 1764  
                                           i2u674_41 1860                                             i2u666_41 17E0  
                                           i2u658_41 1760                                             i2u667_40 17F6  
                                           i2u659_40 1776                                             i2u667_41 17F2  
                                           i2u659_41 1772                                             i2u668_40 1804  
                                           i2u668_41 1800                                             i2u669_40 1816  
                                           i2u669_41 1812                                 ??_lcd_4bit_char_data 0091  
                   gpio_pin_direction_initialize@ret 0088                              _Timer3_InterruptHandler 00E1  
                                          _vfpfcnvrt 2430                                           _ADCON0bits 0FC2  
                                         _ADCON1bits 0FC1                                           _ADCON2bits 0FC0  
                           ADC_SelectChannel@channel 0085                               gpio_pin_initialize@ret 008D  
                            gpio_pin_write_logic@ret 0089                                          _INTCON2bits 0FF1  
                                        _INTCON3bits 0FF0                                            copy_data0 2DBA  
                                          copy_data1 2DDA                                            copy_data2 2DFA  
                               _lcd_4bit_char_string 2C82                                    ?_MSSP_I2C_BCL_ISR 0001  
                          relay_initialization@F3042 0063                                   ??_MSSP_I2C_BCL_ISR 0001  
                    lcd_4bit_char_string_pos@coloumn 009B                                           _EECON1bits 0FA6  
                                           __Hrparam 0000                              _dc_motor_initialization 3266  
                                         vfprintf@ap 00BA                                             __Lrparam 0000  
                                         vfprintf@fp 00B6                             ?_ADC_GetConversionResult 0001  
               ADC_StartConversion_by_Interrupt@_adc 0088                                _CCP1_InterruptHandler 005C  
                                         ?_vfpfcnvrt 00A8                                       fp__ADC_handler 0000  
                        __end_of_gpio_pin_initialize 3020                                   __end_of_btn_values 1011  
                     gpio_pin_initialize@_pin_config 008A                                           sprintf@fmt 00C0  
                                           ___xxtofl 1A76                                         _MSSP_I2C_ISR 3434  
                                           __ptext10 2430                                             __ptext11 1C2A  
                                           __ptext20 32E2                                             __ptext12 2EB2  
                                           __ptext21 2086                                             __ptext13 30CC  
                                           __ptext30 3224                                             __ptext22 2F30  
                                           __ptext14 2764                                             __ptext31 3384  
                                           __ptext23 2D14                                             __ptext15 3432  
                                           __ptext40 340E                                             __ptext32 32A4  
                                           __ptext24 331C                                             __ptext16 31E2  
                                           __ptext41 3412                                             __ptext33 2BD0  
                                           __ptext25 3266                                             __ptext17 2B1E  
                                           __ptext50 342A                                             __ptext42 3416  
                                           __ptext26 2FAE                                             __ptext18 2830  
                                       ??_send_4bits 008D                                             __ptext51 342E  
                                           __ptext43 3434                                             __ptext35 33DA  
                                           __ptext27 22FE                                             __ptext19 1DC4  
                                           __ptext52 3356                                             __ptext44 3436  
                                           __ptext36 33FE                                             __ptext28 1F3C  
                                           __ptext53 2664                                             __ptext45 341A  
                                           __ptext37 33E6                                             __ptext29 21C6  
                                           __ptext54 1A76                                             __ptext46 341E  
                                           __ptext38 33F2                                             __ptext55 255E  
                                           __ptext47 3422                                             __ptext39 340A  
                                           __ptext56 1044                                             __ptext48 3426  
                                           __ptext57 28F6                                             __ptext49 3438  
                                           __ptext58 0000                                ?_lcd_4bit_char_string 0092  
                         _ESUART_RX_InterruptHandler 00DD                     __end_of_lcd_4bit_char_string_pos 31E2  
                                       ?_ADC_handler 0001                  convert_uint16_to_string@DataCounter 00D0  
                   __end_of_convert_uint16_to_string 2B1E                                             isa$xinst 0000  
              _ESUART_Framing_Error_InterruptHandler 00DB                                             int$flags 006E  
                                           _vfprintf 3078                                   __end_of_send_4bits 2DA6  
                 __end_of_application_initialization 331C                           _application_initialization 32E2  
                                         _INTCONbits 0FF2                          __end_of_lcd_4bit_initialize 21C6  
                       __end_of_gpio_pin_write_logic 2430                                             intlevel2 0000  
                                          sprintf@ap 015A                          __end_of_ADC_StartConversion 33AA  
                     lcd_4bit_send_enable_signal@lcd 008A                       lcd_4bit_send_enable_signal@ret 008C  
                    __end_of_ADC_GetConversionResult 29BA                            ??_dc_motor_initialization 0090  
                         ??_lcd_4bit_send_set_cursor 0096                                   _dc_motor_turn_left 3114  
                                        ??_vfpfcnvrt 00AE                                  ?_dc_motor_turn_left 008A  
                                        _motor_pin_1 0069                                          _motor_pin_2 0068  
                                           sprintf@f 015C                                             sprintf@s 00BE  
                             ??_lcd_4bit_char_string 0096                                          _SSPCON1bits 0FC6  
                                        _SSPCON2bits 0FC5                              lcd_4bit_char_string@lcd 0092  
                            lcd_4bit_char_string@ret 0096                              lcd_4bit_char_string@str 0094  
                              _CCP2_InterruptHandler 005A                                        _port_register 013E  
                               ??_dc_motor_turn_left 008C                                    ?_InterruptManager 0001  
                              __end_of_dc_motor_stop 31A0                               lcd_4bit_initialize@lcd 0092  
                             lcd_4bit_initialize@ret 0097  
